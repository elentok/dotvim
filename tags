!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.9~svn20110310	//
,r	vimfiles/bundle/elentok-executer/plugin/elentok-executer.vim	/^map ,r :w<cr>:call Executer()<cr>$/;"	m
,s	vimfiles/bundle/elentok-executer/plugin/elentok-executer.vim	/^map ,s :w<cr>:silent !clear<cr>:!rspec -c .<cr>$/;"	m
<C-W><C-F>	vimfiles/bundle/vim-ruby/ftplugin/ruby.vim	/^    nnoremap <silent> <buffer> <C-W><C-F> :<C-U>exe <SID>gf(v:count1,"\\<Lt>C-W>\\<Lt>C-F>",'split')<CR>$/;"	m
<C-W><C-]>	vimfiles/bundle/vim-ruby/ftplugin/ruby.vim	/^    nnoremap <silent> <buffer> <C-W><C-]>  :<C-U>exe v:count1."stag <C-R>=RubyCursorIdentifier()<CR>"<CR>$/;"	m
<C-W>]	vimfiles/bundle/vim-ruby/ftplugin/ruby.vim	/^    nnoremap <silent> <buffer> <C-W>]      :<C-U>exe v:count1."stag <C-R>=RubyCursorIdentifier()<CR>"<CR>$/;"	m
<C-W>f	vimfiles/bundle/vim-ruby/ftplugin/ruby.vim	/^    nnoremap <silent> <buffer> <C-W>f     :<C-U>exe <SID>gf(v:count1,"\\<Lt>C-W>f",'split')<CR>$/;"	m
<C-W>g<C-]>	vimfiles/bundle/vim-ruby/ftplugin/ruby.vim	/^    nnoremap <silent> <buffer> <C-W>g<C-]> :<C-U>exe        "stjump <C-R>=RubyCursorIdentifier()<CR>"<CR>$/;"	m
<C-W>g]	vimfiles/bundle/vim-ruby/ftplugin/ruby.vim	/^    nnoremap <silent> <buffer> <C-W>g]     :<C-U>exe      "stselect <C-R>=RubyCursorIdentifier()<CR>"<CR>$/;"	m
<C-W>gf	vimfiles/bundle/vim-ruby/ftplugin/ruby.vim	/^    nnoremap <silent> <buffer> <C-W>gf    :<C-U>exe <SID>gf(v:count1,"\\<Lt>C-W>gf",'tabedit')<CR>$/;"	m
<C-W>g}	vimfiles/bundle/vim-ruby/ftplugin/ruby.vim	/^    nnoremap <silent> <buffer> <C-W>g}     :<C-U>exe        "ptjump <C-R>=RubyCursorIdentifier()<CR>"<CR>$/;"	m
<C-W>}	vimfiles/bundle/vim-ruby/ftplugin/ruby.vim	/^    nnoremap <silent> <buffer> <C-W>}      :<C-U>exe          "ptag <C-R>=RubyCursorIdentifier()<CR>"<CR>$/;"	m
<C-]>	vimfiles/bundle/vim-ruby/ftplugin/ruby.vim	/^    nnoremap <silent> <buffer> <C-]>       :<C-U>exe  v:count1."tag <C-R>=RubyCursorIdentifier()<CR>"<CR>$/;"	m
<SID>YRGetChar	vimfiles/bundle/yankring/plugin/yankring.vim	/^inoremap <script> <SID>YRGetChar <c-r>=YRGetChar()<CR>$/;"	m
<SID>xx	vimfiles/bundle/taglist/plugin/taglist.vim	/^    map <SID>xx <SID>xx$/;"	m
<SID>xx	vimfiles/bundle/vim-rails/autoload/rails.vim	/^map <SID>xx <SID>xx$/;"	m
<SID>yrrecord	vimfiles/bundle/yankring/plugin/yankring.vim	/^inoremap <silent> <SID>yrrecord <C-R>=YRRecord3()<cr>$/;"	m
<SID>yrrecord	vimfiles/bundle/yankring/plugin/yankring.vim	/^nnoremap <silent> <SID>yrrecord :call YRRecord3()<cr>$/;"	m
<c-r><tab>	vimfiles/bundle/snipMate/after/plugin/snipMate.vim	/^ino <silent> <c-r><tab> <c-r>=ShowAvailableSnips()<cr>$/;"	m
<leader>ca	vimfiles/bundle/nerdcommenter/plugin/NERD_commenter.vim	/^        nmap <leader>ca <plug>NERDCommenterAltDelims$/;"	m
<plug>NERDCommenterAlignBoth	vimfiles/bundle/nerdcommenter/plugin/NERD_commenter.vim	/^nnoremap <silent> <plug>NERDCommenterAlignBoth :call NERDComment(0, "alignBoth")<cr>$/;"	m
<plug>NERDCommenterAlignBoth	vimfiles/bundle/nerdcommenter/plugin/NERD_commenter.vim	/^vnoremap <silent> <plug>NERDCommenterAlignBoth <ESC>:call NERDComment(1, "alignBoth")<cr>$/;"	m
<plug>NERDCommenterAlignLeft	vimfiles/bundle/nerdcommenter/plugin/NERD_commenter.vim	/^nnoremap <silent> <plug>NERDCommenterAlignLeft :call NERDComment(0, "alignLeft")<cr>$/;"	m
<plug>NERDCommenterAlignLeft	vimfiles/bundle/nerdcommenter/plugin/NERD_commenter.vim	/^vnoremap <silent> <plug>NERDCommenterAlignLeft <ESC>:call NERDComment(1, "alignLeft")<cr>$/;"	m
<plug>NERDCommenterAltDelims	vimfiles/bundle/nerdcommenter/plugin/NERD_commenter.vim	/^nnoremap <plug>NERDCommenterAltDelims :call <SID>SwitchToAlternativeDelimiters(1)<cr>$/;"	m
<plug>NERDCommenterAppend	vimfiles/bundle/nerdcommenter/plugin/NERD_commenter.vim	/^nmap <silent> <plug>NERDCommenterAppend :call NERDComment(0, "append")<cr>$/;"	m
<plug>NERDCommenterComment	vimfiles/bundle/nerdcommenter/plugin/NERD_commenter.vim	/^nnoremap <silent> <plug>NERDCommenterComment :call NERDComment(0, "norm")<cr>$/;"	m
<plug>NERDCommenterComment	vimfiles/bundle/nerdcommenter/plugin/NERD_commenter.vim	/^vnoremap <silent> <plug>NERDCommenterComment <ESC>:call NERDComment(1, "norm")<cr>$/;"	m
<plug>NERDCommenterInInsert	vimfiles/bundle/nerdcommenter/plugin/NERD_commenter.vim	/^inoremap <silent> <plug>NERDCommenterInInsert <SPACE><BS><ESC>:call NERDComment(0, "insert")<CR>$/;"	m
<plug>NERDCommenterInvert	vimfiles/bundle/nerdcommenter/plugin/NERD_commenter.vim	/^nnoremap <silent> <plug>NERDCommenterInvert :call NERDComment(0, "invert")<CR>$/;"	m
<plug>NERDCommenterInvert	vimfiles/bundle/nerdcommenter/plugin/NERD_commenter.vim	/^vnoremap <silent> <plug>NERDCommenterInvert <ESC>:call NERDComment(1, "invert")<CR>$/;"	m
<plug>NERDCommenterMinimal	vimfiles/bundle/nerdcommenter/plugin/NERD_commenter.vim	/^nnoremap <silent> <plug>NERDCommenterMinimal :call NERDComment(0, "minimal")<cr>$/;"	m
<plug>NERDCommenterMinimal	vimfiles/bundle/nerdcommenter/plugin/NERD_commenter.vim	/^vnoremap <silent> <plug>NERDCommenterMinimal <ESC>:call NERDComment(1, "minimal")<cr>$/;"	m
<plug>NERDCommenterNest	vimfiles/bundle/nerdcommenter/plugin/NERD_commenter.vim	/^nnoremap <silent> <plug>NERDCommenterNest :call NERDComment(0, "nested")<cr>$/;"	m
<plug>NERDCommenterNest	vimfiles/bundle/nerdcommenter/plugin/NERD_commenter.vim	/^vnoremap <silent> <plug>NERDCommenterNest <ESC>:call NERDComment(1, "nested")<cr>$/;"	m
<plug>NERDCommenterSexy	vimfiles/bundle/nerdcommenter/plugin/NERD_commenter.vim	/^nnoremap <silent> <plug>NERDCommenterSexy :call NERDComment(0, "sexy")<CR>$/;"	m
<plug>NERDCommenterSexy	vimfiles/bundle/nerdcommenter/plugin/NERD_commenter.vim	/^vnoremap <silent> <plug>NERDCommenterSexy <ESC>:call NERDComment(1, "sexy")<CR>$/;"	m
<plug>NERDCommenterToEOL	vimfiles/bundle/nerdcommenter/plugin/NERD_commenter.vim	/^nnoremap <silent> <plug>NERDCommenterToEOL :call NERDComment(0, "toEOL")<cr>$/;"	m
<plug>NERDCommenterToggle	vimfiles/bundle/nerdcommenter/plugin/NERD_commenter.vim	/^nnoremap <silent> <plug>NERDCommenterToggle :call NERDComment(0, "toggle")<cr>$/;"	m
<plug>NERDCommenterToggle	vimfiles/bundle/nerdcommenter/plugin/NERD_commenter.vim	/^vnoremap <silent> <plug>NERDCommenterToggle <ESC>:call NERDComment(1, "toggle")<cr>$/;"	m
<plug>NERDCommenterUncomment	vimfiles/bundle/nerdcommenter/plugin/NERD_commenter.vim	/^nnoremap <silent> <plug>NERDCommenterUncomment :call NERDComment(0, "uncomment")<cr>$/;"	m
<plug>NERDCommenterUncomment	vimfiles/bundle/nerdcommenter/plugin/NERD_commenter.vim	/^vnoremap <silent> <plug>NERDCommenterUncomment :call NERDComment(1, "uncomment")<cr>$/;"	m
<plug>NERDCommenterYank	vimfiles/bundle/nerdcommenter/plugin/NERD_commenter.vim	/^nmap <silent> <plug>NERDCommenterYank :call NERDComment(0, "yank")<CR>$/;"	m
<plug>NERDCommenterYank	vimfiles/bundle/nerdcommenter/plugin/NERD_commenter.vim	/^vmap <silent> <plug>NERDCommenterYank <ESC>:call NERDComment(1, "yank")<CR>$/;"	m
<s-tab>	vimfiles/bundle/snipMate/after/plugin/snipMate.vim	/^ino <silent> <s-tab> <c-r>=BackwardsSnippet()<cr>$/;"	m
<tab>	vimfiles/bundle/snipMate/after/plugin/snipMate.vim	/^ino <silent> <tab> <c-r>=TriggerSnippet()<cr>$/;"	m
AR	vimfiles/bundle-disabled/command-t/ruby/command-t/Makefile	/^AR = ar$/;"	m
Abbrev	vimfiles/bundle/vim-rails/autoload/rails.vim	/^function! s:Abbrev(bang,...) abort$/;"	f
AddBracketExpand	vimfiles/bundle/vim-rails/autoload/rails.vim	/^function! s:AddBracketExpand(abbr,expn)$/;"	f
AddColonExpand	vimfiles/bundle/vim-rails/autoload/rails.vim	/^function! s:AddColonExpand(abbr,expn)$/;"	f
AddDivider	vimfiles/bundle/powerline/autoload/Pl/Parser.vim	/^function! s:AddDivider(text, side, mode, colors, prev, curr, next) " {{{$/;"	f
AddLeftDelim	vimfiles/bundle/nerdcommenter/plugin/NERD_commenter.vim	/^function s:AddLeftDelim(delim, theLine)$/;"	f
AddLeftDelimAligned	vimfiles/bundle/nerdcommenter/plugin/NERD_commenter.vim	/^function s:AddLeftDelimAligned(delim, theLine, alignIndx)$/;"	f
AddParenExpand	vimfiles/bundle/vim-rails/autoload/rails.vim	/^function! s:AddParenExpand(abbr,expn,...)$/;"	f
AddRightDelim	vimfiles/bundle/nerdcommenter/plugin/NERD_commenter.vim	/^function s:AddRightDelim(delim, theLine)$/;"	f
AddRightDelimAligned	vimfiles/bundle/nerdcommenter/plugin/NERD_commenter.vim	/^function s:AddRightDelimAligned(delim, theLine, alignIndx)$/;"	f
AddSelectiveExpand	vimfiles/bundle/vim-rails/autoload/rails.vim	/^function! s:AddSelectiveExpand(abbr,pat,expn,...)$/;"	f
AddTabExpand	vimfiles/bundle/vim-rails/autoload/rails.vim	/^function! s:AddTabExpand(abbr,expn)$/;"	f
AltMultipart	vimfiles/bundle/nerdcommenter/plugin/NERD_commenter.vim	/^function s:AltMultipart()$/;"	f
Alternate	vimfiles/bundle/vim-rails/autoload/rails.vim	/^function! s:Alternate(cmd,line1,line2,count,...)$/;"	f
AppendCommentToLine	vimfiles/bundle/nerdcommenter/plugin/NERD_commenter.vim	/^function s:AppendCommentToLine()$/;"	f
Asyncer	vimfiles/bundle/l9/autoload/l9/async.py	/^class Asyncer:$/;"	c	inherits:
BINDIR	vimfiles/bundle-disabled/command-t/ruby/command-t/Makefile	/^BINDIR        = $(bindir)$/;"	m
BackupDir	vimfiles/bundle/vim-ruby/bin/vim-ruby-install.rb	/^  class BackupDir$/;"	c	class:VimRubyInstaller
BackwardsSnippet	vimfiles/bundle/snipMate/plugin/snipMate.vim	/^fun! BackwardsSnippet()$/;"	f
Blame	vimfiles/bundle/fugitive/plugin/fugitive.vim	/^function! s:Blame(bang,line1,line2,count,args) abort$/;"	f
BlameCommit	vimfiles/bundle/fugitive/plugin/fugitive.vim	/^function! s:BlameCommit(cmd) abort$/;"	f
BlameJump	vimfiles/bundle/fugitive/plugin/fugitive.vim	/^function! s:BlameJump(suffix) abort$/;"	f
BlameSyntax	vimfiles/bundle/fugitive/plugin/fugitive.vim	/^function! s:BlameSyntax() abort$/;"	f
Bookmark.AddBookmark	vimfiles/bundle-disabled/nerdtree/plugin/NERD_tree.vim	/^function! s:Bookmark.AddBookmark(name, path)$/;"	f
Bookmark.BookmarkExistsFor	vimfiles/bundle-disabled/nerdtree/plugin/NERD_tree.vim	/^function! s:Bookmark.BookmarkExistsFor(name)$/;"	f
Bookmark.BookmarkFor	vimfiles/bundle-disabled/nerdtree/plugin/NERD_tree.vim	/^function! s:Bookmark.BookmarkFor(name)$/;"	f
Bookmark.BookmarkNames	vimfiles/bundle-disabled/nerdtree/plugin/NERD_tree.vim	/^function! s:Bookmark.BookmarkNames()$/;"	f
Bookmark.Bookmarks	vimfiles/bundle-disabled/nerdtree/plugin/NERD_tree.vim	/^function! s:Bookmark.Bookmarks()$/;"	f
Bookmark.CacheBookmarks	vimfiles/bundle-disabled/nerdtree/plugin/NERD_tree.vim	/^function! s:Bookmark.CacheBookmarks(silent)$/;"	f
Bookmark.ClearAll	vimfiles/bundle-disabled/nerdtree/plugin/NERD_tree.vim	/^function! s:Bookmark.ClearAll()$/;"	f
Bookmark.GetNodeForName	vimfiles/bundle-disabled/nerdtree/plugin/NERD_tree.vim	/^function! s:Bookmark.GetNodeForName(name, searchFromAbsoluteRoot)$/;"	f
Bookmark.GetSelected	vimfiles/bundle-disabled/nerdtree/plugin/NERD_tree.vim	/^function! s:Bookmark.GetSelected()$/;"	f
Bookmark.InvalidBookmarks	vimfiles/bundle-disabled/nerdtree/plugin/NERD_tree.vim	/^function! s:Bookmark.InvalidBookmarks()$/;"	f
Bookmark.New	vimfiles/bundle-disabled/nerdtree/plugin/NERD_tree.vim	/^function! s:Bookmark.New(name, path)$/;"	f
Bookmark.Sort	vimfiles/bundle-disabled/nerdtree/plugin/NERD_tree.vim	/^function! s:Bookmark.Sort()$/;"	f
Bookmark.ToRoot	vimfiles/bundle-disabled/nerdtree/plugin/NERD_tree.vim	/^function! s:Bookmark.ToRoot(name)$/;"	f
Bookmark.Write	vimfiles/bundle-disabled/nerdtree/plugin/NERD_tree.vim	/^function! s:Bookmark.Write()$/;"	f
Bookmark.activate	vimfiles/bundle-disabled/nerdtree/plugin/NERD_tree.vim	/^function! s:Bookmark.activate()$/;"	f
Bookmark.compareTo	vimfiles/bundle-disabled/nerdtree/plugin/NERD_tree.vim	/^function! s:Bookmark.compareTo(otherbookmark)$/;"	f
Bookmark.delete	vimfiles/bundle-disabled/nerdtree/plugin/NERD_tree.vim	/^function! s:Bookmark.delete()$/;"	f
Bookmark.getNode	vimfiles/bundle-disabled/nerdtree/plugin/NERD_tree.vim	/^function! s:Bookmark.getNode(searchFromAbsoluteRoot)$/;"	f
Bookmark.mustExist	vimfiles/bundle-disabled/nerdtree/plugin/NERD_tree.vim	/^function! s:Bookmark.mustExist()$/;"	f
Bookmark.openInNewTab	vimfiles/bundle-disabled/nerdtree/plugin/NERD_tree.vim	/^function! s:Bookmark.openInNewTab(options)$/;"	f
Bookmark.setPath	vimfiles/bundle-disabled/nerdtree/plugin/NERD_tree.vim	/^function! s:Bookmark.setPath(path)$/;"	f
Bookmark.str	vimfiles/bundle-disabled/nerdtree/plugin/NERD_tree.vim	/^function! s:Bookmark.str()$/;"	f
Bookmark.toRoot	vimfiles/bundle-disabled/nerdtree/plugin/NERD_tree.vim	/^function! s:Bookmark.toRoot()$/;"	f
Bookmark.validate	vimfiles/bundle-disabled/nerdtree/plugin/NERD_tree.vim	/^function! s:Bookmark.validate()$/;"	f
Browse	vimfiles/bundle/fugitive/plugin/fugitive.vim	/^function! s:Browse(bang,line1,count,...) abort$/;"	f
BufAbbreviations	vimfiles/bundle/vim-rails/autoload/rails.vim	/^function! s:BufAbbreviations()$/;"	f
BufCommands	vimfiles/bundle/vim-rails/autoload/rails.vim	/^function! s:BufCommands()$/;"	f
BufDatabase	vimfiles/bundle/vim-rails/autoload/rails.vim	/^function! s:BufDatabase(...)$/;"	f
BufFinderCommands	vimfiles/bundle/vim-rails/autoload/rails.vim	/^function! s:BufFinderCommands()$/;"	f
BufInit	vimfiles/bundle/vim-rails/plugin/rails.vim	/^function! s:BufInit(path)$/;"	f
BufMappings	vimfiles/bundle/vim-rails/autoload/rails.vim	/^function! s:BufMappings()$/;"	f
BufModelines	vimfiles/bundle/vim-rails/autoload/rails.vim	/^function! s:BufModelines()$/;"	f
BufNavCommands	vimfiles/bundle/vim-rails/autoload/rails.vim	/^function! s:BufNavCommands()$/;"	f
BufReadIndex	vimfiles/bundle/fugitive/plugin/fugitive.vim	/^function! s:BufReadIndex()$/;"	f
BufReadIndexFile	vimfiles/bundle/fugitive/plugin/fugitive.vim	/^function! s:BufReadIndexFile()$/;"	f
BufReadObject	vimfiles/bundle/fugitive/plugin/fugitive.vim	/^function! s:BufReadObject()$/;"	f
BufScriptWrappers	vimfiles/bundle/vim-rails/autoload/rails.vim	/^function! s:BufScriptWrappers()$/;"	f
BufSettings	vimfiles/bundle/vim-rails/autoload/rails.vim	/^function! s:BufSettings()$/;"	f
BufSyntax	vimfiles/bundle/vim-rails/autoload/rails.vim	/^function! s:BufSyntax()$/;"	f
BufWriteIndexFile	vimfiles/bundle/fugitive/plugin/fugitive.vim	/^function! s:BufWriteIndexFile()$/;"	f
BufferFinder	vimfiles/bundle-disabled/command-t/ruby/command-t/finder/buffer_finder.rb	/^  class BufferFinder < Finder$/;"	c	class:CommandT
BufferScanner	vimfiles/bundle-disabled/command-t/ruby/command-t/scanner/buffer_scanner.rb	/^  class BufferScanner < Scanner$/;"	c	class:CommandT
BuildTabStops	vimfiles/bundle/snipMate/autoload/snipMate.vim	/^fun s:BuildTabStops(snip, lnum, col, indent)$/;"	f
CC	vimfiles/bundle-disabled/command-t/ruby/command-t/Makefile	/^CC = gcc$/;"	m
CFLAGS	vimfiles/bundle-disabled/command-t/ruby/command-t/Makefile	/^CFLAGS   =  -g -O2 -DFD_SETSIZE=256  $(cflags) $/;"	m
CLEANFILES	vimfiles/bundle-disabled/command-t/ruby/command-t/Makefile	/^CLEANFILES = mkmf.log$/;"	m
CLEANLIBS	vimfiles/bundle-disabled/command-t/ruby/command-t/Makefile	/^CLEANLIBS     = $(TARGET).so $(TARGET).il? $(TARGET).tds $(TARGET).map$/;"	m
CLEANOBJS	vimfiles/bundle-disabled/command-t/ruby/command-t/Makefile	/^CLEANOBJS     = *.o *.a *.s[ol] *.pdb *.exp *.bak$/;"	m
COPY	vimfiles/bundle-disabled/command-t/ruby/command-t/Makefile	/^COPY = cp$/;"	m
CPPFLAGS	vimfiles/bundle-disabled/command-t/ruby/command-t/Makefile	/^CPPFLAGS = -DHAVE_RUBY_H  $(DEFS) $(cppflags)$/;"	m
CXXFLAGS	vimfiles/bundle-disabled/command-t/ruby/command-t/Makefile	/^CXXFLAGS = $(CFLAGS) $/;"	m
CanCommentLine	vimfiles/bundle/nerdcommenter/plugin/NERD_commenter.vim	/^function s:CanCommentLine(forceNested, lineNum)$/;"	f
CanPlaceCursor	vimfiles/bundle/nerdcommenter/plugin/NERD_commenter.vim	/^function s:CanPlaceCursor(line, col)$/;"	f
CanSexyCommentLines	vimfiles/bundle/nerdcommenter/plugin/NERD_commenter.vim	/^function s:CanSexyCommentLines(topline, bottomline)$/;"	f
CanToggleCommentLine	vimfiles/bundle/nerdcommenter/plugin/NERD_commenter.vim	/^function s:CanToggleCommentLine(forceNested, lineNum)$/;"	f
CheckConditions	vimfiles/bundle/powerline/autoload/Pl/Segment.vim	/^function! s:CheckConditions(params) " {{{$/;"	f
ChooseSnippet	vimfiles/bundle/snipMate/plugin/snipMate.vim	/^fun s:ChooseSnippet(scope, trigger)$/;"	f
Close	vimfiles/bundle/snipMate/ftplugin/html_snip_helper.vim	/^fun! Close()$/;"	f
CoffeeCompile	vimfiles/bundle/coffeescript/ftplugin/coffee.vim	/^\\        CoffeeCompile call s:CoffeeCompile(<line1>, <line2>, <q-args>)$/;"	c
CoffeeCompile	vimfiles/bundle/coffeescript/ftplugin/coffee.vim	/^function! s:CoffeeCompile(startline, endline, args)$/;"	f
CoffeeCompileClose	vimfiles/bundle/coffeescript/ftplugin/coffee.vim	/^function! s:CoffeeCompileClose()$/;"	f
CoffeeCompileComplete	vimfiles/bundle/coffeescript/ftplugin/coffee.vim	/^function! s:CoffeeCompileComplete(arg, cmdline, cursor)$/;"	f
CoffeeCompileResetVars	vimfiles/bundle/coffeescript/ftplugin/coffee.vim	/^function! s:CoffeeCompileResetVars()$/;"	f
CoffeeCompileRestorePos	vimfiles/bundle/coffeescript/ftplugin/coffee.vim	/^function! s:CoffeeCompileRestorePos()$/;"	f
CoffeeCompileSavePos	vimfiles/bundle/coffeescript/ftplugin/coffee.vim	/^function! s:CoffeeCompileSavePos()$/;"	f
CoffeeCompileUpdate	vimfiles/bundle/coffeescript/ftplugin/coffee.vim	/^function! s:CoffeeCompileUpdate(startline, endline)$/;"	f
CoffeeCompileWatchUpdate	vimfiles/bundle/coffeescript/ftplugin/coffee.vim	/^function! s:CoffeeCompileWatchUpdate()$/;"	f
CoffeeMake	vimfiles/bundle/coffeescript/compiler/coffee.vim	/^command! -bang -bar -nargs=* CoffeeMake make<bang> <args>$/;"	c
CoffeeRun	vimfiles/bundle/coffeescript/ftplugin/coffee.vim	/^command! -range=% -bar CoffeeRun <line1>,<line2>:w !coffee -s$/;"	c
CoffeeUpdateMakePrg	vimfiles/bundle/coffeescript/compiler/coffee.vim	/^augroup CoffeeUpdateMakePrg$/;"	a
CommandEdit	vimfiles/bundle/vim-rails/autoload/rails.vim	/^function! s:CommandEdit(cmd,name,prefix,suffix,filter,default,...)$/;"	f
CommandList	vimfiles/bundle/vim-rails/autoload/rails.vim	/^function! s:CommandList(A,L,P)$/;"	f
CommandT	vimfiles/bundle-disabled/command-t/plugin/command-t.vim	/^command -nargs=? -complete=dir CommandT call <SID>CommandTShowFileFinder(<q-args>)$/;"	c
CommandT	vimfiles/bundle-disabled/command-t/ruby/command-t/controller.rb	/^module CommandT$/;"	m
CommandT	vimfiles/bundle-disabled/command-t/ruby/command-t/finder.rb	/^module CommandT$/;"	m
CommandT	vimfiles/bundle-disabled/command-t/ruby/command-t/finder/buffer_finder.rb	/^module CommandT$/;"	m
CommandT	vimfiles/bundle-disabled/command-t/ruby/command-t/finder/file_finder.rb	/^module CommandT$/;"	m
CommandT	vimfiles/bundle-disabled/command-t/ruby/command-t/match_window.rb	/^module CommandT$/;"	m
CommandT	vimfiles/bundle-disabled/command-t/ruby/command-t/prompt.rb	/^module CommandT$/;"	m
CommandT	vimfiles/bundle-disabled/command-t/ruby/command-t/scanner.rb	/^module CommandT$/;"	m
CommandT	vimfiles/bundle-disabled/command-t/ruby/command-t/scanner/buffer_scanner.rb	/^module CommandT$/;"	m
CommandT	vimfiles/bundle-disabled/command-t/ruby/command-t/scanner/file_scanner.rb	/^module CommandT$/;"	m
CommandT	vimfiles/bundle-disabled/command-t/ruby/command-t/settings.rb	/^module CommandT$/;"	m
CommandT	vimfiles/bundle-disabled/command-t/ruby/command-t/stub.rb	/^module CommandT$/;"	m
CommandT	vimfiles/bundle-disabled/command-t/ruby/command-t/vim.rb	/^module CommandT$/;"	m
CommandT	vimfiles/bundle-disabled/command-t/ruby/command-t/vim/path_utilities.rb	/^module CommandT$/;"	m
CommandT	vimfiles/bundle-disabled/command-t/ruby/command-t/vim/screen.rb	/^module CommandT$/;"	m
CommandT	vimfiles/bundle-disabled/command-t/ruby/command-t/vim/window.rb	/^module CommandT$/;"	m
CommandTAcceptSelection	vimfiles/bundle-disabled/command-t/plugin/command-t.vim	/^function CommandTAcceptSelection()$/;"	f
CommandTAcceptSelectionSplit	vimfiles/bundle-disabled/command-t/plugin/command-t.vim	/^function CommandTAcceptSelectionSplit()$/;"	f
CommandTAcceptSelectionTab	vimfiles/bundle-disabled/command-t/plugin/command-t.vim	/^function CommandTAcceptSelectionTab()$/;"	f
CommandTAcceptSelectionVSplit	vimfiles/bundle-disabled/command-t/plugin/command-t.vim	/^function CommandTAcceptSelectionVSplit()$/;"	f
CommandTBackspace	vimfiles/bundle-disabled/command-t/plugin/command-t.vim	/^function CommandTBackspace()$/;"	f
CommandTBuffer	vimfiles/bundle-disabled/command-t/plugin/command-t.vim	/^command CommandTBuffer call <SID>CommandTShowBufferFinder()$/;"	c
CommandTCancel	vimfiles/bundle-disabled/command-t/plugin/command-t.vim	/^function CommandTCancel()$/;"	f
CommandTClear	vimfiles/bundle-disabled/command-t/plugin/command-t.vim	/^function CommandTClear()$/;"	f
CommandTCursorEnd	vimfiles/bundle-disabled/command-t/plugin/command-t.vim	/^function CommandTCursorEnd()$/;"	f
CommandTCursorLeft	vimfiles/bundle-disabled/command-t/plugin/command-t.vim	/^function CommandTCursorLeft()$/;"	f
CommandTCursorRight	vimfiles/bundle-disabled/command-t/plugin/command-t.vim	/^function CommandTCursorRight()$/;"	f
CommandTCursorStart	vimfiles/bundle-disabled/command-t/plugin/command-t.vim	/^function CommandTCursorStart()$/;"	f
CommandTDelete	vimfiles/bundle-disabled/command-t/plugin/command-t.vim	/^function CommandTDelete()$/;"	f
CommandTFlush	vimfiles/bundle-disabled/command-t/plugin/command-t.vim	/^command CommandTFlush call <SID>CommandTFlush()$/;"	c
CommandTFlush	vimfiles/bundle-disabled/command-t/plugin/command-t.vim	/^function s:CommandTFlush()$/;"	f
CommandTHandleKey	vimfiles/bundle-disabled/command-t/plugin/command-t.vim	/^function CommandTHandleKey(arg)$/;"	f
CommandTMatch_initialize	vimfiles/bundle-disabled/command-t/ruby/command-t/match.c	/^VALUE CommandTMatch_initialize(int argc, VALUE *argv, VALUE self)$/;"	f	signature:(int argc, VALUE *argv, VALUE self)
CommandTMatch_initialize	vimfiles/bundle-disabled/command-t/ruby/command-t/match.h	/^extern VALUE CommandTMatch_initialize(int argc, VALUE *argv, VALUE self);$/;"	p	signature:(int argc, VALUE *argv, VALUE self)
CommandTMatch_matches	vimfiles/bundle-disabled/command-t/ruby/command-t/match.c	/^VALUE CommandTMatch_matches(VALUE self)$/;"	f	signature:(VALUE self)
CommandTMatch_matches	vimfiles/bundle-disabled/command-t/ruby/command-t/match.h	/^extern VALUE CommandTMatch_matches(VALUE self);$/;"	p	signature:(VALUE self)
CommandTMatch_score	vimfiles/bundle-disabled/command-t/ruby/command-t/match.h	/^extern VALUE CommandTMatch_score(VALUE self);$/;"	p	signature:(VALUE self)
CommandTMatch_to_s	vimfiles/bundle-disabled/command-t/ruby/command-t/match.c	/^VALUE CommandTMatch_to_s(VALUE self)$/;"	f	signature:(VALUE self)
CommandTMatch_to_s	vimfiles/bundle-disabled/command-t/ruby/command-t/match.h	/^extern VALUE CommandTMatch_to_s(VALUE self);$/;"	p	signature:(VALUE self)
CommandTMatcher_initialize	vimfiles/bundle-disabled/command-t/ruby/command-t/matcher.c	/^VALUE CommandTMatcher_initialize(int argc, VALUE *argv, VALUE self)$/;"	f	signature:(int argc, VALUE *argv, VALUE self)
CommandTMatcher_initialize	vimfiles/bundle-disabled/command-t/ruby/command-t/matcher.h	/^extern VALUE CommandTMatcher_initialize(int argc, VALUE *argv, VALUE self);$/;"	p	signature:(int argc, VALUE *argv, VALUE self)
CommandTMatcher_matches_for	vimfiles/bundle-disabled/command-t/ruby/command-t/matcher.c	/^VALUE CommandTMatcher_matches_for(VALUE self, VALUE abbrev)$/;"	f	signature:(VALUE self, VALUE abbrev)
CommandTMatcher_matches_for	vimfiles/bundle-disabled/command-t/ruby/command-t/matcher.h	/^extern VALUE CommandTMatcher_matches_for(VALUE self, VALUE abbrev);$/;"	p	signature:(VALUE self, VALUE abbrev)
CommandTMatcher_sorted_matches_for	vimfiles/bundle-disabled/command-t/ruby/command-t/matcher.c	/^VALUE CommandTMatcher_sorted_matches_for(VALUE self, VALUE abbrev, VALUE options)$/;"	f	signature:(VALUE self, VALUE abbrev, VALUE options)
CommandTMatcher_sorted_matches_for	vimfiles/bundle-disabled/command-t/ruby/command-t/matcher.h	/^extern VALUE CommandTMatcher_sorted_matches_for(VALUE self, VALUE abbrev, VALUE options);$/;"	p	signature:(VALUE self, VALUE abbrev, VALUE options)
CommandTRubyWarning	vimfiles/bundle-disabled/command-t/plugin/command-t.vim	/^function s:CommandTRubyWarning()$/;"	f
CommandTSelectNext	vimfiles/bundle-disabled/command-t/plugin/command-t.vim	/^function CommandTSelectNext()$/;"	f
CommandTSelectPrev	vimfiles/bundle-disabled/command-t/plugin/command-t.vim	/^function CommandTSelectPrev()$/;"	f
CommandTShowBufferFinder	vimfiles/bundle-disabled/command-t/plugin/command-t.vim	/^function s:CommandTShowBufferFinder()$/;"	f
CommandTShowFileFinder	vimfiles/bundle-disabled/command-t/plugin/command-t.vim	/^function s:CommandTShowFileFinder(arg)$/;"	f
CommandTToggleFocus	vimfiles/bundle-disabled/command-t/plugin/command-t.vim	/^function CommandTToggleFocus()$/;"	f
CommandT_option_from_hash	vimfiles/bundle-disabled/command-t/ruby/command-t/ext.c	/^VALUE CommandT_option_from_hash(const char *option, VALUE hash)$/;"	f	signature:(const char *option, VALUE hash)
CommandT_option_from_hash	vimfiles/bundle-disabled/command-t/ruby/command-t/ext.h	/^VALUE CommandT_option_from_hash(const char *option, VALUE hash);$/;"	p	signature:(const char *option, VALUE hash)
CommentBlock	vimfiles/bundle/nerdcommenter/plugin/NERD_commenter.vim	/^function s:CommentBlock(top, bottom, lSide, rSide, forceNested )$/;"	f
CommentLines	vimfiles/bundle/nerdcommenter/plugin/NERD_commenter.vim	/^function s:CommentLines(forceNested, align, firstLine, lastLine)$/;"	f
CommentLinesMinimal	vimfiles/bundle/nerdcommenter/plugin/NERD_commenter.vim	/^function s:CommentLinesMinimal(firstLine, lastLine)$/;"	f
CommentLinesSexy	vimfiles/bundle/nerdcommenter/plugin/NERD_commenter.vim	/^function s:CommentLinesSexy(topline, bottomline)$/;"	f
CommentLinesToggle	vimfiles/bundle/nerdcommenter/plugin/NERD_commenter.vim	/^function s:CommentLinesToggle(forceNested, firstLine, lastLine)$/;"	f
CommentRegion	vimfiles/bundle/nerdcommenter/plugin/NERD_commenter.vim	/^function s:CommentRegion(topLine, topCol, bottomLine, bottomCol, forceNested)$/;"	f
Commit	vimfiles/bundle/fugitive/plugin/fugitive.vim	/^function! s:Commit(args) abort$/;"	f
CommitComplete	vimfiles/bundle/fugitive/plugin/fugitive.vim	/^function! s:CommitComplete(A,L,P) abort$/;"	f
CompilerSet	vimfiles/bundle/vim-ruby/compiler/eruby.vim	/^  command -nargs=* CompilerSet setlocal <args>$/;"	c
CompilerSet	vimfiles/bundle/vim-ruby/compiler/rspec.vim	/^  command -nargs=* CompilerSet setlocal <args>$/;"	c
CompilerSet	vimfiles/bundle/vim-ruby/compiler/ruby.vim	/^  command -nargs=* CompilerSet setlocal <args>$/;"	c
CompilerSet	vimfiles/bundle/vim-ruby/compiler/rubyunit.vim	/^  command -nargs=* CompilerSet setlocal <args>$/;"	c
Complete_cd	vimfiles/bundle/vim-rails/autoload/rails.vim	/^function! s:Complete_cd(ArgLead, CmdLine, CursorPos)$/;"	f
Complete_console	vimfiles/bundle/vim-rails/autoload/rails.vim	/^function! s:Complete_console(A,L,P)$/;"	f
Complete_destroy	vimfiles/bundle/vim-rails/autoload/rails.vim	/^function! s:Complete_destroy(A,L,P)$/;"	f
Complete_edit	vimfiles/bundle/vim-rails/autoload/rails.vim	/^function! s:Complete_edit(ArgLead, CmdLine, CursorPos)$/;"	f
Complete_environments	vimfiles/bundle/vim-rails/autoload/rails.vim	/^function! s:Complete_environments(...)$/;"	f
Complete_find	vimfiles/bundle/vim-rails/autoload/rails.vim	/^function! s:Complete_find(ArgLead, CmdLine, CursorPos)$/;"	f
Complete_generate	vimfiles/bundle/vim-rails/autoload/rails.vim	/^function! s:Complete_generate(A,L,P)$/;"	f
Complete_preview	vimfiles/bundle/vim-rails/autoload/rails.vim	/^function! s:Complete_preview(A,L,P)$/;"	f
Complete_rake	vimfiles/bundle/vim-rails/autoload/rails.vim	/^function! s:Complete_rake(A,L,P)$/;"	f
Complete_related	vimfiles/bundle/vim-rails/autoload/rails.vim	/^function! s:Complete_related(A,L,P)$/;"	f
Complete_ruby	vimfiles/bundle/vim-rails/autoload/rails.vim	/^function! s:Complete_ruby(A,L,P)$/;"	f
Complete_script	vimfiles/bundle/vim-rails/autoload/rails.vim	/^function! s:Complete_script(ArgLead,CmdLine,P)$/;"	f
Complete_server	vimfiles/bundle/vim-rails/autoload/rails.vim	/^function! s:Complete_server(A,L,P)$/;"	f
Complete_set	vimfiles/bundle/vim-rails/autoload/rails.vim	/^function! s:Complete_set(A,L,P)$/;"	f
Controller	vimfiles/bundle-disabled/command-t/ruby/command-t/controller.rb	/^  class Controller$/;"	c	class:CommandT
ConvertLeadingSpacesToTabs	vimfiles/bundle/nerdcommenter/plugin/NERD_commenter.vim	/^function s:ConvertLeadingSpacesToTabs(line)$/;"	f
ConvertLeadingTabsToSpaces	vimfiles/bundle/nerdcommenter/plugin/NERD_commenter.vim	/^function s:ConvertLeadingTabsToSpaces(line)$/;"	f
ConvertLeadingWhiteSpace	vimfiles/bundle/nerdcommenter/plugin/NERD_commenter.vim	/^function s:ConvertLeadingWhiteSpace(line)$/;"	f
Count	vimfiles/bundle/snipMate/autoload/snipMate.vim	/^fun s:Count(haystack, needle)$/;"	f
CountNonESCedOccurances	vimfiles/bundle/nerdcommenter/plugin/NERD_commenter.vim	/^function s:CountNonESCedOccurances(str, searchstr, escChar)$/;"	f
CreateDelimMapFromCms	vimfiles/bundle/nerdcommenter/plugin/NERD_commenter.vim	/^function s:CreateDelimMapFromCms()$/;"	f
CreateMaps	vimfiles/bundle/nerdcommenter/plugin/NERD_commenter.vim	/^function! s:CreateMaps(target, combo)$/;"	f
CreateMenuItems	vimfiles/bundle/nerdcommenter/plugin/NERD_commenter.vim	/^    function! s:CreateMenuItems(target, desc, root)$/;"	f
CreateMenus	vimfiles/bundle/vim-rails/plugin/rails.vim	/^function! s:CreateMenus() abort$/;"	f
Cterm2GUI	vimfiles/bundle/powerline/autoload/Pl/Hi.vim	/^function! s:Cterm2GUI(cterm) " {{{$/;"	f
CustomComplete	vimfiles/bundle/vim-rails/autoload/rails.vim	/^function! s:CustomComplete(A,L,P,cmd)$/;"	f
DEFFILE	vimfiles/bundle-disabled/command-t/ruby/command-t/Makefile	/^DEFFILE = $/;"	m
DEFS	vimfiles/bundle-disabled/command-t/ruby/command-t/Makefile	/^DEFS     = $/;"	m
DESTDIR	vimfiles/bundle-disabled/command-t/ruby/command-t/Makefile	/^DESTDIR = C:$/;"	m
DISTCLEANFILES	vimfiles/bundle-disabled/command-t/ruby/command-t/Makefile	/^DISTCLEANFILES = $/;"	m
DLDFLAGS	vimfiles/bundle-disabled/command-t/ruby/command-t/Makefile	/^DLDFLAGS = $(ldflags) $(dldflags) $(archflag)$/;"	m
DLLIB	vimfiles/bundle-disabled/command-t/ruby/command-t/Makefile	/^DLLIB = $(TARGET).so$/;"	m
DefRuby	vimfiles/bundle/vim-ruby/autoload/rubycomplete.vim	/^function! s:DefRuby()$/;"	f
DefineSnips	vimfiles/bundle/snipMate/plugin/snipMate.vim	/^fun s:DefineSnips(dir, aliasft, realft)$/;"	f
Detect	vimfiles/bundle/fugitive/plugin/fugitive.vim	/^function! s:Detect(path)$/;"	f
Detect	vimfiles/bundle/vim-rails/plugin/rails.vim	/^function! s:Detect(filename)$/;"	f
Diff	vimfiles/bundle/fugitive/plugin/fugitive.vim	/^function! s:Diff(bang,...) abort$/;"	f
DirComplete	vimfiles/bundle/fugitive/plugin/fugitive.vim	/^function! s:DirComplete(A,L,P) abort$/;"	f
Doc	vimfiles/bundle/vim-rails/autoload/rails.vim	/^function! s:Doc(bang, string)$/;"	f
DoesBlockHaveDelim	vimfiles/bundle/nerdcommenter/plugin/NERD_commenter.vim	/^function s:DoesBlockHaveDelim(delim, top, bottom)$/;"	f
DoesBlockHaveMultipartDelim	vimfiles/bundle/nerdcommenter/plugin/NERD_commenter.vim	/^function s:DoesBlockHaveMultipartDelim(top, bottom)$/;"	f
EXEEXT	vimfiles/bundle-disabled/command-t/ruby/command-t/Makefile	/^EXEEXT = .exe$/;"	m
EXTSTATIC	vimfiles/bundle-disabled/command-t/ruby/command-t/Makefile	/^EXTSTATIC = $/;"	m
Edit	vimfiles/bundle/fugitive/plugin/fugitive.vim	/^function! s:Edit(cmd,bang,...) abort$/;"	f
Edit	vimfiles/bundle/vim-rails/autoload/rails.vim	/^function! s:Edit(count,cmd,...)$/;"	f
EditComplete	vimfiles/bundle/fugitive/plugin/fugitive.vim	/^function! s:EditComplete(A,L,P) abort$/;"	f
EditRunComplete	vimfiles/bundle/fugitive/plugin/fugitive.vim	/^function! s:EditRunComplete(A,L,P) abort$/;"	f
EditSimpleRb	vimfiles/bundle/vim-rails/autoload/rails.vim	/^function! s:EditSimpleRb(cmd,name,target,prefix,suffix,...)$/;"	f
Env	vimfiles/bundle/vim-ruby/bin/vim-ruby-install.rb	/^class Env$/;"	c
ErrMsg	vimfiles/bundle/vim-ruby/autoload/rubycomplete.vim	/^function! s:ErrMsg(msg)$/;"	f
Esc	vimfiles/bundle/nerdcommenter/plugin/NERD_commenter.vim	/^function s:Esc(str)$/;"	f
ExecuteInTree	vimfiles/bundle/fugitive/plugin/fugitive.vim	/^function! s:ExecuteInTree(cmd) abort$/;"	f
Executer	vimfiles/bundle/elentok-executer/plugin/elentok-executer.vim	/^func! Executer()$/;"	f
Executor	vimfiles/bundle/l9/autoload/l9/async.py	/^class Executor:$/;"	c	inherits:
ExitingOneLineScope	vimfiles/bundle/vim-javascript/indent/javascript.vim	/^function s:ExitingOneLineScope(lnum)$/;"	f
Extract	vimfiles/bundle/vim-rails/autoload/rails.vim	/^function! s:Extract(bang,...) range abort$/;"	f
ExtractGitDir	vimfiles/bundle/fugitive/plugin/fugitive.vim	/^function! s:ExtractGitDir(path) abort$/;"	f
ExtractSnips	vimfiles/bundle/snipMate/plugin/snipMate.vim	/^fun! ExtractSnips(dir, ft)$/;"	f
ExtractSnipsFile	vimfiles/bundle/snipMate/plugin/snipMate.vim	/^fun! ExtractSnipsFile(file, ft)$/;"	f
FileFinder	vimfiles/bundle-disabled/command-t/ruby/command-t/finder/file_finder.rb	/^  class FileFinder < Finder$/;"	c	class:CommandT
FileLimitExceeded	vimfiles/bundle-disabled/command-t/ruby/command-t/scanner/file_scanner.rb	/^    class FileLimitExceeded < ::RuntimeError; end$/;"	c	class:CommandT.FileScanner
FileRead	vimfiles/bundle/fugitive/plugin/fugitive.vim	/^function! s:FileRead()$/;"	f
FileScanner	vimfiles/bundle-disabled/command-t/ruby/command-t/scanner/file_scanner.rb	/^  class FileScanner < Scanner$/;"	c	class:CommandT
FileWriter	vimfiles/bundle/vim-ruby/bin/vim-ruby-install.rb	/^class FileWriter$/;"	c
Filename	vimfiles/bundle/snipMate/autoload/snipMate.vim	/^fun! Filename(...)$/;"	f
Find	vimfiles/bundle/vim-rails/autoload/rails.vim	/^function! s:Find(count,cmd,...)$/;"	f
FindBoundingLinesOfSexyCom	vimfiles/bundle/nerdcommenter/plugin/NERD_commenter.vim	/^function s:FindBoundingLinesOfSexyCom(lineNum)$/;"	f
FindComment	vimfiles/bundle/coffeescript/indent/coffee.vim	/^function! s:FindComment(linenum)$/;"	f
FindDelimiterIndex	vimfiles/bundle/nerdcommenter/plugin/NERD_commenter.vim	/^function s:FindDelimiterIndex(delimiter, line)$/;"	f
FindRightmostOpenBracket	vimfiles/bundle/vim-ruby/indent/ruby.vim	/^function s:FindRightmostOpenBracket(lnum)$/;"	f
Findcomplete	vimfiles/autoload/pathogen.vim	/^function! s:Findcomplete(A,L,P) " {{{1$/;"	f
Finder	vimfiles/bundle-disabled/command-t/ruby/command-t/finder.rb	/^  class Finder$/;"	c	class:CommandT
FinishCommit	vimfiles/bundle/fugitive/plugin/fugitive.vim	/^function! s:FinishCommit()$/;"	f
Foo	vimfiles/bundle/vim-ruby/etc/examples/indent/nested_hashes.rb	/^class Foo$/;"	c
FufGlobal	vimfiles/bundle/fuzzyfinder/autoload/fuf.vim	/^augroup FufGlobal$/;"	a
GF	vimfiles/bundle/fugitive/plugin/fugitive.vim	/^function! s:GF(mode) abort$/;"	f
Gargsearch	vimfiles/bundle/greplace/plugin/greplace.vim	/^command! -nargs=* Gargsearch call s:gSearch('args', <f-args>)$/;"	c
Gbuffersearch	vimfiles/bundle/greplace/plugin/greplace.vim	/^command! -nargs=* Gbuffersearch call s:gSearch('buffer', <f-args>)$/;"	c
GetBufferRubyClass	vimfiles/bundle/vim-ruby/autoload/rubycomplete.vim	/^function! s:GetBufferRubyClass(name, ...)$/;"	f
GetBufferRubyEntity	vimfiles/bundle/vim-ruby/autoload/rubycomplete.vim	/^function! s:GetBufferRubyEntity( name, type, ... )$/;"	f
GetBufferRubyModule	vimfiles/bundle/vim-ruby/autoload/rubycomplete.vim	/^function! s:GetBufferRubyModule(name, ...)$/;"	f
GetBufferRubySingletonMethods	vimfiles/bundle/vim-ruby/autoload/rubycomplete.vim	/^function! s:GetBufferRubySingletonMethods(name)$/;"	f
GetCoffeeIndent	vimfiles/bundle/coffeescript/indent/coffee.vim	/^function! GetCoffeeIndent(curlinenum)$/;"	f
GetCoffeeIndent	vimfiles/bundle/coffeescript/indent/coffee.vim	/^function! s:GetCoffeeIndent(curlinenum)$/;"	f
GetErubyIndent	vimfiles/bundle/vim-ruby/indent/eruby.vim	/^function! GetErubyIndent(...)$/;"	f
GetJadeIndent	vimfiles/bundle/jade/indent/jade.vim	/^function! GetJadeIndent()$/;"	f
GetJavascriptIndent	vimfiles/bundle/vim-javascript/indent/javascript.vim	/^function GetJavascriptIndent()$/;"	f
GetMSL	vimfiles/bundle/vim-javascript/indent/javascript.vim	/^function s:GetMSL(lnum, in_one_line_scope)$/;"	f
GetMSL	vimfiles/bundle/vim-ruby/indent/ruby.vim	/^function s:GetMSL(lnum)$/;"	f
GetMakePrg	vimfiles/bundle/coffeescript/compiler/coffee.vim	/^function! s:GetMakePrg()$/;"	f
GetMatch	vimfiles/bundle/coffeescript/indent/coffee.vim	/^function! s:GetMatch(curline)$/;"	f
GetPrevNormalLine	vimfiles/bundle/coffeescript/indent/coffee.vim	/^function! s:GetPrevNormalLine(startlinenum)$/;"	f
GetRubyIndent	vimfiles/bundle/vim-ruby/indent/ruby.vim	/^function GetRubyIndent(...)$/;"	f
GetRubyVarType	vimfiles/bundle/vim-ruby/autoload/rubycomplete.vim	/^function! s:GetRubyVarType(v)$/;"	f
GetSexyComLeft	vimfiles/bundle/nerdcommenter/plugin/NERD_commenter.vim	/^function s:GetSexyComLeft(space, esc)$/;"	f
GetSexyComMarker	vimfiles/bundle/nerdcommenter/plugin/NERD_commenter.vim	/^function s:GetSexyComMarker(space, esc)$/;"	f
GetSexyComRight	vimfiles/bundle/nerdcommenter/plugin/NERD_commenter.vim	/^function s:GetSexyComRight(space, esc)$/;"	f
GetSnippet	vimfiles/bundle/snipMate/plugin/snipMate.vim	/^fun s:GetSnippet(word, scope)$/;"	f
GetSnippets	vimfiles/bundle/snipMate/plugin/snipMate.vim	/^fun! GetSnippets(dir, filetypes)$/;"	f
GetTrimmedLine	vimfiles/bundle/coffeescript/indent/coffee.vim	/^function! s:GetTrimmedLine(linenum)$/;"	f
GetYamlIndent	vimfiles/bundle/vim-yaml/after/ftplugin/yaml.vim	/^function! GetYamlIndent()$/;"	f
Git	vimfiles/bundle/fugitive/plugin/fugitive.vim	/^function! s:Git(bang,cmd) abort$/;"	f
GitComplete	vimfiles/bundle/fugitive/plugin/fugitive.vim	/^function! s:GitComplete(A,L,P) abort$/;"	f
Gqfopen	vimfiles/bundle/greplace/plugin/greplace.vim	/^command! -nargs=0 Gqfopen call s:gReplace_show_matches()$/;"	c
Grep	vimfiles/bundle/fugitive/plugin/fugitive.vim	/^function! s:Grep(bang,arg) abort$/;"	f
Greplace_Shell_Quote_Char	vimfiles/bundle/greplace/plugin/greplace.vim	/^        let Greplace_Shell_Quote_Char = "'"$/;"	v
Greplace_Shell_Quote_Char	vimfiles/bundle/greplace/plugin/greplace.vim	/^        let Greplace_Shell_Quote_Char = ''$/;"	v
Gsearch	vimfiles/bundle/greplace/plugin/greplace.vim	/^command! -nargs=* -complete=file Gsearch call s:gSearch('grep', <f-args>)$/;"	c
HasCStyleComments	vimfiles/bundle/nerdcommenter/plugin/NERD_commenter.vim	/^function s:HasCStyleComments()$/;"	f
HasLeadingTabs	vimfiles/bundle/nerdcommenter/plugin/NERD_commenter.vim	/^function s:HasLeadingTabs(...)$/;"	f
HasMultipartDelims	vimfiles/bundle/nerdcommenter/plugin/NERD_commenter.vim	/^function s:HasMultipartDelims()$/;"	f
Helptags	vimfiles/autoload/pathogen.vim	/^command! -bar Helptags :call pathogen#helptags()$/;"	c
HiDefaults	vimfiles/bundle/vim-rails/autoload/rails.vim	/^function! s:HiDefaults()$/;"	f
HiLink	vimfiles/bundle/vim-javascript/syntax/javascript.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	vimfiles/bundle/vim-javascript/syntax/javascript.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HlCreate	vimfiles/bundle/powerline/autoload/Pl/Parser.vim	/^function! s:HlCreate(hl) " {{{$/;"	f
HlExists	vimfiles/bundle/powerline/autoload/Pl/Parser.vim	/^function! s:HlExists(hl) " {{{$/;"	f
INCFLAGS	vimfiles/bundle-disabled/command-t/ruby/command-t/Makefile	/^INCFLAGS = -I. -I$(topdir) -I$(hdrdir) -I$(srcdir)$/;"	m
INSTALL	vimfiles/bundle-disabled/command-t/ruby/command-t/Makefile	/^INSTALL = \/usr\/bin\/install -c$/;"	m
INSTALL_DATA	vimfiles/bundle-disabled/command-t/ruby/command-t/Makefile	/^INSTALL_DATA = $(INSTALL) -m 644$/;"	m
INSTALL_PROG	vimfiles/bundle-disabled/command-t/ruby/command-t/Makefile	/^INSTALL_PROG = $(INSTALL) -m 0755$/;"	m
InOneLineScope	vimfiles/bundle/vim-javascript/indent/javascript.vim	/^function s:InOneLineScope(lnum)$/;"	f
IndentWithContinuation	vimfiles/bundle/vim-javascript/indent/javascript.vim	/^function s:IndentWithContinuation(lnum, ind, width)$/;"	f
InitVariable	vimfiles/bundle/nerdcommenter/plugin/NERD_commenter.vim	/^function s:InitVariable(var, value)$/;"	f
Init_ext	vimfiles/bundle-disabled/command-t/ruby/command-t/ext.c	/^void Init_ext()$/;"	f
Invert	vimfiles/bundle/vim-rails/autoload/rails.vim	/^function! s:Invert(bang)$/;"	f
InvertComment	vimfiles/bundle/nerdcommenter/plugin/NERD_commenter.vim	/^function s:InvertComment(firstLine, lastLine)$/;"	f
IsComment	vimfiles/bundle/coffeescript/indent/coffee.vim	/^function! s:IsComment(linenum, col)$/;"	f
IsCommentLine	vimfiles/bundle/coffeescript/indent/coffee.vim	/^function! s:IsCommentLine(linenum)$/;"	f
IsCommentOrString	vimfiles/bundle/coffeescript/indent/coffee.vim	/^function! s:IsCommentOrString(linenum, col)$/;"	f
IsCommented	vimfiles/bundle/nerdcommenter/plugin/NERD_commenter.vim	/^function s:IsCommented(left, right, line)$/;"	f
IsCommentedFromStartOfLine	vimfiles/bundle/nerdcommenter/plugin/NERD_commenter.vim	/^function s:IsCommentedFromStartOfLine(left, line)$/;"	f
IsCommentedNormOrSexy	vimfiles/bundle/nerdcommenter/plugin/NERD_commenter.vim	/^function s:IsCommentedNormOrSexy(lineNum)$/;"	f
IsCommentedOuttermost	vimfiles/bundle/nerdcommenter/plugin/NERD_commenter.vim	/^function s:IsCommentedOuttermost(left, right, leftAlt, rightAlt, line)$/;"	f
IsDelimValid	vimfiles/bundle/nerdcommenter/plugin/NERD_commenter.vim	/^function s:IsDelimValid(delimiter, delIndx, line)$/;"	f
IsEscaped	vimfiles/bundle/nerdcommenter/plugin/NERD_commenter.vim	/^function s:IsEscaped(str, indx, escChar)$/;"	f
IsInClassDef	vimfiles/bundle/vim-ruby/autoload/rubycomplete.vim	/^function! s:IsInClassDef()$/;"	f
IsInSexyComment	vimfiles/bundle/nerdcommenter/plugin/NERD_commenter.vim	/^function s:IsInSexyComment(line)$/;"	f
IsInString	vimfiles/bundle/vim-javascript/indent/javascript.vim	/^function s:IsInString(lnum, col)$/;"	f
IsInString	vimfiles/bundle/vim-ruby/indent/ruby.vim	/^function s:IsInString(lnum, col)$/;"	f
IsInStringOrComment	vimfiles/bundle/vim-javascript/indent/javascript.vim	/^function s:IsInStringOrComment(lnum, col)$/;"	f
IsInStringOrComment	vimfiles/bundle/vim-ruby/indent/ruby.vim	/^function s:IsInStringOrComment(lnum, col)$/;"	f
IsInStringOrDocumentation	vimfiles/bundle/vim-javascript/indent/javascript.vim	/^function s:IsInStringOrDocumentation(lnum, col)$/;"	f
IsInStringOrDocumentation	vimfiles/bundle/vim-ruby/indent/ruby.vim	/^function s:IsInStringOrDocumentation(lnum, col)$/;"	f
IsNumEven	vimfiles/bundle/nerdcommenter/plugin/NERD_commenter.vim	/^function s:IsNumEven(num)$/;"	f
IsPosInClassDef	vimfiles/bundle/vim-ruby/autoload/rubycomplete.vim	/^function! s:IsPosInClassDef(pos)$/;"	f
IsSexyComment	vimfiles/bundle/nerdcommenter/plugin/NERD_commenter.vim	/^function s:IsSexyComment(topline, bottomline)$/;"	f
IsString	vimfiles/bundle/coffeescript/indent/coffee.vim	/^function! s:IsString(linenum, col)$/;"	f
JumpInit	vimfiles/bundle/fugitive/plugin/fugitive.vim	/^function! s:JumpInit() abort$/;"	f
KeepCase	vimfiles/bundle/keepcase/plugin/keepcase.vim	/^fun! KeepCase( oldword, newword)$/;"	f
KeepCaseSameLen	vimfiles/bundle/keepcase/plugin/keepcase.vim	/^fun! KeepCaseSameLen( oldword, newword)$/;"	f
KeyMap.All	vimfiles/bundle-disabled/nerdtree/plugin/NERD_tree.vim	/^function! s:KeyMap.All()$/;"	f
KeyMap.BindAll	vimfiles/bundle-disabled/nerdtree/plugin/NERD_tree.vim	/^function! s:KeyMap.BindAll()$/;"	f
KeyMap.Create	vimfiles/bundle-disabled/nerdtree/plugin/NERD_tree.vim	/^function! s:KeyMap.Create(options)$/;"	f
KeyMap.bind	vimfiles/bundle-disabled/nerdtree/plugin/NERD_tree.vim	/^function! s:KeyMap.bind()$/;"	f
L9Assert	vimfiles/bundle/l9/plugin/l9.vim	/^  command -nargs=* L9Assert :$/;"	c
L9Assert	vimfiles/bundle/l9/plugin/l9.vim	/^  command -nargs=* L9Assert call eval((<args>) ? 0 : s:handleFailedAssersion(<q-args>))$/;"	c
L9GrepBuffer	vimfiles/bundle/l9/plugin/l9.vim	/^command -nargs=? L9GrepBuffer    call l9#grepBuffers(<q-args>, [bufnr('%')])$/;"	c
L9GrepBufferAll	vimfiles/bundle/l9/plugin/l9.vim	/^command -nargs=? L9GrepBufferAll call l9#grepBuffers(<q-args>, range(1, bufnr('$')))$/;"	c
L9Timer	vimfiles/bundle/l9/plugin/l9.vim	/^  command -nargs=1 L9Timer :$/;"	c
L9Timer	vimfiles/bundle/l9/plugin/l9.vim	/^  command -nargs=1 L9Timer call s:timerBegin(<q-args>)$/;"	c
L9TimerDump	vimfiles/bundle/l9/plugin/l9.vim	/^  command -nargs=0 L9TimerDump :$/;"	c
L9TimerDump	vimfiles/bundle/l9/plugin/l9.vim	/^  command -nargs=0 L9TimerDump call s:timerDump()$/;"	c
L9TimerStop	vimfiles/bundle/l9/plugin/l9.vim	/^  command -nargs=0 L9TimerStop :$/;"	c
L9TimerStop	vimfiles/bundle/l9/plugin/l9.vim	/^  command -nargs=0 L9TimerStop call s:timerStop()$/;"	c
LDSHARED	vimfiles/bundle-disabled/command-t/ruby/command-t/Makefile	/^LDSHARED = gcc -shared -s$/;"	m
LIBPATH	vimfiles/bundle-disabled/command-t/ruby/command-t/Makefile	/^LIBPATH =  -L. -L$(libdir)$/;"	m
LIBRUBY	vimfiles/bundle-disabled/command-t/ruby/command-t/Makefile	/^LIBRUBY = lib$(LIBRUBY_SO).a$/;"	m
LIBRUBYARG_SHARED	vimfiles/bundle-disabled/command-t/ruby/command-t/Makefile	/^LIBRUBYARG_SHARED = -l$(RUBY_SO_NAME)$/;"	m
LIBRUBYARG_STATIC	vimfiles/bundle-disabled/command-t/ruby/command-t/Makefile	/^LIBRUBYARG_STATIC = -l$(RUBY_SO_NAME)-static$/;"	m
LIBRUBY_A	vimfiles/bundle-disabled/command-t/ruby/command-t/Makefile	/^LIBRUBY_A = lib$(RUBY_SO_NAME)-static.a$/;"	m
LIBS	vimfiles/bundle-disabled/command-t/ruby/command-t/Makefile	/^LIBS = $(LIBRUBYARG_SHARED)  -lshell32 -lws2_32  $/;"	m
LOCAL_LIBS	vimfiles/bundle-disabled/command-t/ruby/command-t/Makefile	/^LOCAL_LIBS = $/;"	m
LastIndexOfDelim	vimfiles/bundle/nerdcommenter/plugin/NERD_commenter.vim	/^function s:LastIndexOfDelim(delim, str)$/;"	f
Left	vimfiles/bundle/nerdcommenter/plugin/NERD_commenter.vim	/^function s:Left(...)$/;"	f
LeftMostIndx	vimfiles/bundle/nerdcommenter/plugin/NERD_commenter.vim	/^function s:LeftMostIndx(countCommentedLines, countEmptyLines, topline, bottomline)$/;"	f
LineHasOpeningBrackets	vimfiles/bundle/vim-javascript/indent/javascript.vim	/^function s:LineHasOpeningBrackets(lnum)$/;"	f
LocalModelines	vimfiles/bundle/vim-rails/autoload/rails.vim	/^function! s:LocalModelines(lnum)$/;"	f
Log	vimfiles/bundle/fugitive/plugin/fugitive.vim	/^function! s:Log(cmd,...)$/;"	f
Log	vimfiles/bundle/vim-rails/autoload/rails.vim	/^function! s:Log(bang,arg)$/;"	f
MAKEDIRS	vimfiles/bundle-disabled/command-t/ruby/command-t/Makefile	/^MAKEDIRS = install -d$/;"	m
MakeSnip	vimfiles/bundle/snipMate/plugin/snipMate.vim	/^fun! MakeSnip(scope, trigger, content, ...)$/;"	f
MakeWindowBigEnough	vimfiles/bundle/elentok-big-enough-window/plugin/elentok-big-enough-window.vim	/^func! MakeWindowBigEnough()$/;"	f
MakeWindowTallEnough	vimfiles/bundle/elentok-big-enough-window/plugin/elentok-big-enough-window.vim	/^func! MakeWindowTallEnough()$/;"	f
MakeWindowWideEnough	vimfiles/bundle/elentok-big-enough-window/plugin/elentok-big-enough-window.vim	/^func! MakeWindowWideEnough()$/;"	f
MakeWindowWideEnoughGroup	vimfiles/bundle/elentok-big-enough-window/plugin/elentok-big-enough-window.vim	/^augroup MakeWindowWideEnoughGroup$/;"	a
Match	vimfiles/bundle/vim-javascript/indent/javascript.vim	/^function s:Match(lnum, regex)$/;"	f
Match	vimfiles/bundle/vim-ruby/indent/ruby.vim	/^function s:Match(lnum, regex)$/;"	f
MatchLast	vimfiles/bundle/vim-ruby/indent/ruby.vim	/^function s:MatchLast(lnum, regex)$/;"	f
MatchWindow	vimfiles/bundle-disabled/command-t/ruby/command-t/match_window.rb	/^  class MatchWindow$/;"	c	class:CommandT
MaxLookback	vimfiles/bundle/coffeescript/indent/coffee.vim	/^function! s:MaxLookback(startlinenum)$/;"	f
MenuController.New	vimfiles/bundle-disabled/nerdtree/plugin/NERD_tree.vim	/^function! s:MenuController.New(menuItems)$/;"	f
MenuController._allIndexesFor	vimfiles/bundle-disabled/nerdtree/plugin/NERD_tree.vim	/^function! s:MenuController._allIndexesFor(shortcut)$/;"	f
MenuController._current	vimfiles/bundle-disabled/nerdtree/plugin/NERD_tree.vim	/^function! s:MenuController._current()$/;"	f
MenuController._cursorDown	vimfiles/bundle-disabled/nerdtree/plugin/NERD_tree.vim	/^function! s:MenuController._cursorDown()$/;"	f
MenuController._cursorUp	vimfiles/bundle-disabled/nerdtree/plugin/NERD_tree.vim	/^function! s:MenuController._cursorUp()$/;"	f
MenuController._echoPrompt	vimfiles/bundle-disabled/nerdtree/plugin/NERD_tree.vim	/^function! s:MenuController._echoPrompt()$/;"	f
MenuController._handleKeypress	vimfiles/bundle-disabled/nerdtree/plugin/NERD_tree.vim	/^function! s:MenuController._handleKeypress(key)$/;"	f
MenuController._nextIndexFor	vimfiles/bundle-disabled/nerdtree/plugin/NERD_tree.vim	/^function! s:MenuController._nextIndexFor(shortcut)$/;"	f
MenuController._restoreOptions	vimfiles/bundle-disabled/nerdtree/plugin/NERD_tree.vim	/^function! s:MenuController._restoreOptions()$/;"	f
MenuController._saveOptions	vimfiles/bundle-disabled/nerdtree/plugin/NERD_tree.vim	/^function! s:MenuController._saveOptions()$/;"	f
MenuController._setCmdheight	vimfiles/bundle-disabled/nerdtree/plugin/NERD_tree.vim	/^function! s:MenuController._setCmdheight()$/;"	f
MenuController.showMenu	vimfiles/bundle-disabled/nerdtree/plugin/NERD_tree.vim	/^function! s:MenuController.showMenu()$/;"	f
MenuItem.All	vimfiles/bundle-disabled/nerdtree/plugin/NERD_tree.vim	/^function! s:MenuItem.All()$/;"	f
MenuItem.AllEnabled	vimfiles/bundle-disabled/nerdtree/plugin/NERD_tree.vim	/^function! s:MenuItem.AllEnabled()$/;"	f
MenuItem.Create	vimfiles/bundle-disabled/nerdtree/plugin/NERD_tree.vim	/^function! s:MenuItem.Create(options)$/;"	f
MenuItem.CreateSeparator	vimfiles/bundle-disabled/nerdtree/plugin/NERD_tree.vim	/^function! s:MenuItem.CreateSeparator(options)$/;"	f
MenuItem.CreateSubmenu	vimfiles/bundle-disabled/nerdtree/plugin/NERD_tree.vim	/^function! s:MenuItem.CreateSubmenu(options)$/;"	f
MenuItem.enabled	vimfiles/bundle-disabled/nerdtree/plugin/NERD_tree.vim	/^function! s:MenuItem.enabled()$/;"	f
MenuItem.execute	vimfiles/bundle-disabled/nerdtree/plugin/NERD_tree.vim	/^function! s:MenuItem.execute()$/;"	f
MenuItem.isSeparator	vimfiles/bundle-disabled/nerdtree/plugin/NERD_tree.vim	/^function! s:MenuItem.isSeparator()$/;"	f
MenuItem.isSubmenu	vimfiles/bundle-disabled/nerdtree/plugin/NERD_tree.vim	/^function! s:MenuItem.isSubmenu()$/;"	f
Move	vimfiles/bundle/fugitive/plugin/fugitive.vim	/^function! s:Move(force,destination)$/;"	f
MoveComplete	vimfiles/bundle/fugitive/plugin/fugitive.vim	/^function! s:MoveComplete(A,L,P)$/;"	f
Multipart	vimfiles/bundle/nerdcommenter/plugin/NERD_commenter.vim	/^function s:Multipart()$/;"	f
NERDComment	vimfiles/bundle/nerdcommenter/plugin/NERD_commenter.vim	/^function! NERDComment(isVisual, type) range$/;"	f
NERDCommenter	vimfiles/bundle/nerdcommenter/plugin/NERD_commenter.vim	/^augroup NERDCommenter$/;"	a
NERDTree	vimfiles/bundle-disabled/nerdtree/plugin/NERD_tree.vim	/^augroup NERDTree$/;"	a
NERDTree	vimfiles/bundle-disabled/nerdtree/plugin/NERD_tree.vim	/^command! -n=? -complete=dir -bar NERDTree :call s:initNerdTree('<args>')$/;"	c
NERDTreeAddKeyMap	vimfiles/bundle-disabled/nerdtree/plugin/NERD_tree.vim	/^function! NERDTreeAddKeyMap(options)$/;"	f
NERDTreeAddMenuItem	vimfiles/bundle-disabled/nerdtree/plugin/NERD_tree.vim	/^function! NERDTreeAddMenuItem(options)$/;"	f
NERDTreeAddMenuSeparator	vimfiles/bundle-disabled/nerdtree/plugin/NERD_tree.vim	/^function! NERDTreeAddMenuSeparator(...)$/;"	f
NERDTreeAddNode	vimfiles/bundle-disabled/nerdtree/nerdtree_plugin/fs_menu.vim	/^function! NERDTreeAddNode()$/;"	f
NERDTreeAddSubmenu	vimfiles/bundle-disabled/nerdtree/plugin/NERD_tree.vim	/^function! NERDTreeAddSubmenu(options)$/;"	f
NERDTreeClose	vimfiles/bundle-disabled/nerdtree/plugin/NERD_tree.vim	/^command! -n=0 -bar NERDTreeClose :call s:closeTreeIfOpen()$/;"	c
NERDTreeCopyNode	vimfiles/bundle-disabled/nerdtree/nerdtree_plugin/fs_menu.vim	/^function! NERDTreeCopyNode()$/;"	f
NERDTreeDeleteNode	vimfiles/bundle-disabled/nerdtree/nerdtree_plugin/fs_menu.vim	/^function! NERDTreeDeleteNode()$/;"	f
NERDTreeExecFile	vimfiles/bundle-disabled/nerdtree/nerdtree_plugin/exec_menuitem.vim	/^function! NERDTreeExecFile()$/;"	f
NERDTreeExecFileActive	vimfiles/bundle-disabled/nerdtree/nerdtree_plugin/exec_menuitem.vim	/^function! NERDTreeExecFileActive()$/;"	f
NERDTreeFind	vimfiles/bundle-disabled/nerdtree/plugin/NERD_tree.vim	/^command! -n=0 -bar NERDTreeFind call s:findAndRevealPath()$/;"	c
NERDTreeFromBookmark	vimfiles/bundle-disabled/nerdtree/plugin/NERD_tree.vim	/^command! -n=1 -complete=customlist,s:completeBookmarks -bar NERDTreeFromBookmark call s:initNerdTree('<args>')$/;"	c
NERDTreeHijackNetrw	vimfiles/bundle-disabled/nerdtree/plugin/NERD_tree.vim	/^    augroup NERDTreeHijackNetrw$/;"	a
NERDTreeMirror	vimfiles/bundle-disabled/nerdtree/plugin/NERD_tree.vim	/^command! -n=0 -bar NERDTreeMirror call s:initNerdTreeMirror()$/;"	c
NERDTreeMoveNode	vimfiles/bundle-disabled/nerdtree/nerdtree_plugin/fs_menu.vim	/^function! NERDTreeMoveNode()$/;"	f
NERDTreeRender	vimfiles/bundle-disabled/nerdtree/plugin/NERD_tree.vim	/^function! NERDTreeRender()$/;"	f
NERDTreeToggle	vimfiles/bundle-disabled/nerdtree/plugin/NERD_tree.vim	/^command! -n=? -complete=dir -bar NERDTreeToggle :call s:toggle('<args>')$/;"	c
Navcommand	vimfiles/bundle/vim-rails/autoload/rails.vim	/^function! s:Navcommand(bang,...)$/;"	f
NerdEcho	vimfiles/bundle/nerdcommenter/plugin/NERD_commenter.vim	/^function s:NerdEcho(msg, typeOfMsg)$/;"	f
NumLinesInBuf	vimfiles/bundle/nerdcommenter/plugin/NERD_commenter.vim	/^function s:NumLinesInBuf()$/;"	f
NumberOfLeadingTabs	vimfiles/bundle/nerdcommenter/plugin/NERD_commenter.vim	/^function s:NumberOfLeadingTabs(s)$/;"	f
OBJS	vimfiles/bundle-disabled/command-t/ruby/command-t/Makefile	/^OBJS = ext.o match.o matcher.o$/;"	m
OpenFile	vimfiles/bundle/elentok-otherfile/plugin/elentok-otherfile.vim	/^func! OpenFile(filename)$/;"	f
OtherFile	vimfiles/bundle/elentok-otherfile/plugin/elentok-otherfile.vim	/^func! OtherFile()$/;"	f
ParseSegments	vimfiles/bundle/powerline/autoload/Pl/Parser.vim	/^function! s:ParseSegments(mode, side, segments, ...) " {{{$/;"	f
Path.AbsolutePathFor	vimfiles/bundle-disabled/nerdtree/plugin/NERD_tree.vim	/^function! s:Path.AbsolutePathFor(str)$/;"	f
Path.CopyingSupported	vimfiles/bundle-disabled/nerdtree/plugin/NERD_tree.vim	/^function! s:Path.CopyingSupported()$/;"	f
Path.Create	vimfiles/bundle-disabled/nerdtree/plugin/NERD_tree.vim	/^function! s:Path.Create(fullpath)$/;"	f
Path.JoinPathStrings	vimfiles/bundle-disabled/nerdtree/plugin/NERD_tree.vim	/^function! s:Path.JoinPathStrings(...)$/;"	f
Path.New	vimfiles/bundle-disabled/nerdtree/plugin/NERD_tree.vim	/^function! s:Path.New(path)$/;"	f
Path.Slash	vimfiles/bundle-disabled/nerdtree/plugin/NERD_tree.vim	/^function! s:Path.Slash()$/;"	f
Path.WinToUnixPath	vimfiles/bundle-disabled/nerdtree/plugin/NERD_tree.vim	/^function! s:Path.WinToUnixPath(pathstr)$/;"	f
Path._str	vimfiles/bundle-disabled/nerdtree/plugin/NERD_tree.vim	/^function! s:Path._str()$/;"	f
Path._strForCd	vimfiles/bundle-disabled/nerdtree/plugin/NERD_tree.vim	/^function! s:Path._strForCd()$/;"	f
Path._strForEdit	vimfiles/bundle-disabled/nerdtree/plugin/NERD_tree.vim	/^function! s:Path._strForEdit()$/;"	f
Path._strForGlob	vimfiles/bundle-disabled/nerdtree/plugin/NERD_tree.vim	/^function! s:Path._strForGlob()$/;"	f
Path._strForUI	vimfiles/bundle-disabled/nerdtree/plugin/NERD_tree.vim	/^function! s:Path._strForUI()$/;"	f
Path.bookmarkNames	vimfiles/bundle-disabled/nerdtree/plugin/NERD_tree.vim	/^function! s:Path.bookmarkNames()$/;"	f
Path.cacheDisplayString	vimfiles/bundle-disabled/nerdtree/plugin/NERD_tree.vim	/^function! s:Path.cacheDisplayString()$/;"	f
Path.changeToDir	vimfiles/bundle-disabled/nerdtree/plugin/NERD_tree.vim	/^function! s:Path.changeToDir()$/;"	f
Path.compareTo	vimfiles/bundle-disabled/nerdtree/plugin/NERD_tree.vim	/^function! s:Path.compareTo(path)$/;"	f
Path.copy	vimfiles/bundle-disabled/nerdtree/plugin/NERD_tree.vim	/^function! s:Path.copy(dest)$/;"	f
Path.copyingWillOverwrite	vimfiles/bundle-disabled/nerdtree/plugin/NERD_tree.vim	/^function! s:Path.copyingWillOverwrite(dest)$/;"	f
Path.delete	vimfiles/bundle-disabled/nerdtree/plugin/NERD_tree.vim	/^function! s:Path.delete()$/;"	f
Path.displayString	vimfiles/bundle-disabled/nerdtree/plugin/NERD_tree.vim	/^function! s:Path.displayString()$/;"	f
Path.equals	vimfiles/bundle-disabled/nerdtree/plugin/NERD_tree.vim	/^function! s:Path.equals(path)$/;"	f
Path.exists	vimfiles/bundle-disabled/nerdtree/plugin/NERD_tree.vim	/^function! s:Path.exists()$/;"	f
Path.extractDriveLetter	vimfiles/bundle-disabled/nerdtree/plugin/NERD_tree.vim	/^function! s:Path.extractDriveLetter(fullpath)$/;"	f
Path.getDir	vimfiles/bundle-disabled/nerdtree/plugin/NERD_tree.vim	/^function! s:Path.getDir()$/;"	f
Path.getLastPathComponent	vimfiles/bundle-disabled/nerdtree/plugin/NERD_tree.vim	/^function! s:Path.getLastPathComponent(dirSlash)$/;"	f
Path.getParent	vimfiles/bundle-disabled/nerdtree/plugin/NERD_tree.vim	/^function! s:Path.getParent()$/;"	f
Path.getSortOrderIndex	vimfiles/bundle-disabled/nerdtree/plugin/NERD_tree.vim	/^function! s:Path.getSortOrderIndex()$/;"	f
Path.ignore	vimfiles/bundle-disabled/nerdtree/plugin/NERD_tree.vim	/^function! s:Path.ignore()$/;"	f
Path.isUnder	vimfiles/bundle-disabled/nerdtree/plugin/NERD_tree.vim	/^function! s:Path.isUnder(path)$/;"	f
Path.readInfoFromDisk	vimfiles/bundle-disabled/nerdtree/plugin/NERD_tree.vim	/^function! s:Path.readInfoFromDisk(fullpath)$/;"	f
Path.refresh	vimfiles/bundle-disabled/nerdtree/plugin/NERD_tree.vim	/^function! s:Path.refresh()$/;"	f
Path.rename	vimfiles/bundle-disabled/nerdtree/plugin/NERD_tree.vim	/^function! s:Path.rename(newPath)$/;"	f
Path.str	vimfiles/bundle-disabled/nerdtree/plugin/NERD_tree.vim	/^function! s:Path.str(...)$/;"	f
Path.strTrunk	vimfiles/bundle-disabled/nerdtree/plugin/NERD_tree.vim	/^function! s:Path.strTrunk()$/;"	f
PathUtilities	vimfiles/bundle-disabled/command-t/ruby/command-t/vim/path_utilities.rb	/^    module PathUtilities$/;"	m	class:CommandT.VIM
Pl#ClearCache	vimfiles/bundle/powerline/autoload/Pl.vim	/^	function! Pl#ClearCache() " {{{$/;"	f
Pl#Colorscheme#Apply	vimfiles/bundle/powerline/autoload/Pl/Colorscheme.vim	/^function! Pl#Colorscheme#Apply(colorscheme, buffer_segments) " {{{$/;"	f
Pl#Colorscheme#HiSegment	vimfiles/bundle/powerline/autoload/Pl/Colorscheme.vim	/^function! Pl#Colorscheme#HiSegment(segments, normal, ...) " {{{$/;"	f
Pl#Colorscheme#Init	vimfiles/bundle/powerline/autoload/Pl/Colorscheme.vim	/^function! Pl#Colorscheme#Init(hi) " {{{$/;"	f
Pl#Hi#Create	vimfiles/bundle/powerline/autoload/Pl/Hi.vim	/^function! Pl#Hi#Create(...) " {{{$/;"	f
Pl#Hi#Cterm	vimfiles/bundle/powerline/autoload/Pl/Hi.vim	/^function! Pl#Hi#Cterm(fg, ...) " {{{$/;"	f
Pl#Hi#GUI	vimfiles/bundle/powerline/autoload/Pl/Hi.vim	/^function! Pl#Hi#GUI(fg, ...) " {{{$/;"	f
Pl#Load	vimfiles/bundle/powerline/autoload/Pl.vim	/^	function! Pl#Load() " {{{$/;"	f
Pl#LoadCache	vimfiles/bundle/powerline/autoload/Pl.vim	/^	function! Pl#LoadCache() " {{{$/;"	f
Pl#Match#Add	vimfiles/bundle/powerline/autoload/Pl/Match.vim	/^function! Pl#Match#Add(pat, expr) " {{{$/;"	f
Pl#Match#Any	vimfiles/bundle/powerline/autoload/Pl/Match.vim	/^function! Pl#Match#Any(...) " {{{$/;"	f
Pl#Match#Validate	vimfiles/bundle/powerline/autoload/Pl/Match.vim	/^function! Pl#Match#Validate(match) " {{{$/;"	f
Pl#Mod#AddSegmentMod	vimfiles/bundle/powerline/autoload/Pl/Mod.vim	/^function! Pl#Mod#AddSegmentMod(action, properties) " {{{$/;"	f
Pl#Mod#ApplySegmentMods	vimfiles/bundle/powerline/autoload/Pl/Mod.vim	/^function! Pl#Mod#ApplySegmentMods(theme) " {{{$/;"	f
Pl#Parser#GetStatusline	vimfiles/bundle/powerline/autoload/Pl/Parser.vim	/^function! Pl#Parser#GetStatusline(segments) " {{{$/;"	f
Pl#Parser#ParseChars	vimfiles/bundle/powerline/autoload/Pl/Parser.vim	/^function! Pl#Parser#ParseChars(arg) " {{{$/;"	f
Pl#Segment#Create	vimfiles/bundle/powerline/autoload/Pl/Segment.vim	/^function! Pl#Segment#Create(name, ...) " {{{$/;"	f
Pl#Segment#Get	vimfiles/bundle/powerline/autoload/Pl/Segment.vim	/^function! Pl#Segment#Get(name) " {{{$/;"	f
Pl#Segment#Init	vimfiles/bundle/powerline/autoload/Pl/Segment.vim	/^function! Pl#Segment#Init(...) " {{{$/;"	f
Pl#Segment#Modes	vimfiles/bundle/powerline/autoload/Pl/Segment.vim	/^function! Pl#Segment#Modes(modes) " {{{$/;"	f
Pl#Segment#Split	vimfiles/bundle/powerline/autoload/Pl/Segment.vim	/^function! Pl#Segment#Split(...) " {{{$/;"	f
Pl#Segment#Truncate	vimfiles/bundle/powerline/autoload/Pl/Segment.vim	/^function! Pl#Segment#Truncate() " {{{$/;"	f
Pl#Statusline	vimfiles/bundle/powerline/autoload/Pl.vim	/^	function! Pl#Statusline(statusline, current) " {{{$/;"	f
Pl#Theme#Buffer	vimfiles/bundle/powerline/autoload/Pl/Theme.vim	/^function! Pl#Theme#Buffer(ns, ...) " {{{$/;"	f
Pl#Theme#Create	vimfiles/bundle/powerline/autoload/Pl/Theme.vim	/^function! Pl#Theme#Create(...) " {{{$/;"	f
Pl#Theme#InsertSegment	vimfiles/bundle/powerline/autoload/Pl/Theme.vim	/^function! Pl#Theme#InsertSegment(new_segment, where, target_segment) " {{{$/;"	f
Pl#Theme#RemoveSegment	vimfiles/bundle/powerline/autoload/Pl/Theme.vim	/^function! Pl#Theme#RemoveSegment(target_segment) " {{{$/;"	f
Pl#Theme#ReplaceSegment	vimfiles/bundle/powerline/autoload/Pl/Theme.vim	/^function! Pl#Theme#ReplaceSegment(old_segment, new_segment) " {{{$/;"	f
Pl#UpdateStatusline	vimfiles/bundle/powerline/autoload/Pl.vim	/^	function! Pl#UpdateStatusline(current) " {{{$/;"	f
PlaceDelimitersAndInsBetween	vimfiles/bundle/nerdcommenter/plugin/NERD_commenter.vim	/^function s:PlaceDelimitersAndInsBetween()$/;"	f
Powerline	vimfiles/bundle/powerline/plugin/Powerline.vim	/^	augroup Powerline$/;"	a
Powerline#Functions#GetCharCode	vimfiles/bundle/powerline/autoload/Powerline/Functions.vim	/^function! Powerline#Functions#GetCharCode() " {{{$/;"	f
Powerline#Functions#GetFilesize	vimfiles/bundle/powerline/autoload/Powerline/Functions.vim	/^function! Powerline#Functions#GetFilesize() " {{{$/;"	f
Powerline#Functions#GetMode	vimfiles/bundle/powerline/autoload/Powerline/Functions.vim	/^function! Powerline#Functions#GetMode() " {{{$/;"	f
Powerline#Functions#GetPwd	vimfiles/bundle/powerline/autoload/Powerline/Functions.vim	/^function! Powerline#Functions#GetPwd() "{{{$/;"	f
Powerline#Functions#cfi#GetCurrentFunction	vimfiles/bundle/powerline/autoload/Powerline/Functions/cfi.vim	/^function! Powerline#Functions#cfi#GetCurrentFunction() " {{{$/;"	f
Powerline#Functions#ft_man#GetName	vimfiles/bundle/powerline/autoload/Powerline/Functions/ft_man.vim	/^function! Powerline#Functions#ft_man#GetName() " {{{$/;"	f
Powerline#Functions#fugitive#GetBranch	vimfiles/bundle/powerline/autoload/Powerline/Functions/fugitive.vim	/^function! Powerline#Functions#fugitive#GetBranch(symbol) " {{{$/;"	f
Powerline#Functions#syntastic#GetErrors	vimfiles/bundle/powerline/autoload/Powerline/Functions/syntastic.vim	/^function! Powerline#Functions#syntastic#GetErrors(line_symbol) " {{{$/;"	f
PowerlineClearCache	vimfiles/bundle/powerline/autoload/Pl.vim	/^	command! PowerlineClearCache call Pl#ClearCache()$/;"	c
PrevNonBlankNonString	vimfiles/bundle/vim-javascript/indent/javascript.vim	/^function s:PrevNonBlankNonString(lnum)$/;"	f
PrevNonBlankNonString	vimfiles/bundle/vim-ruby/indent/ruby.vim	/^function s:PrevNonBlankNonString(lnum)$/;"	f
Preview	vimfiles/bundle/vim-rails/autoload/rails.vim	/^function! s:Preview(bang,lnum,arg)$/;"	f
ProcessFile	vimfiles/bundle/snipMate/plugin/snipMate.vim	/^fun s:ProcessFile(file, ft, ...)$/;"	f
ProcessSnippet	vimfiles/bundle/snipMate/autoload/snipMate.vim	/^fun s:ProcessSnippet(snip)$/;"	f
ProjectMenu	vimfiles/bundle/vim-rails/plugin/rails.vim	/^function! s:ProjectMenu()$/;"	f
Prompt	vimfiles/bundle-disabled/command-t/ruby/command-t/prompt.rb	/^  class Prompt$/;"	c	class:CommandT
RARRAY_LEN	vimfiles/bundle-disabled/command-t/ruby/command-t/ruby_compat.h	43;"	d
RARRAY_PTR	vimfiles/bundle-disabled/command-t/ruby/command-t/ruby_compat.h	38;"	d
RFLOAT_VALUE	vimfiles/bundle-disabled/command-t/ruby/command-t/ruby_compat.h	48;"	d
RM	vimfiles/bundle-disabled/command-t/ruby/command-t/Makefile	/^RM = rm -f$/;"	m
RSTRING_LEN	vimfiles/bundle-disabled/command-t/ruby/command-t/ruby_compat.h	33;"	d
RSTRING_PTR	vimfiles/bundle-disabled/command-t/ruby/command-t/ruby_compat.h	28;"	d
RUBY	vimfiles/bundle-disabled/command-t/ruby/command-t/Makefile	/^RUBY = $(ruby)$/;"	m
RUBYARCHDIR	vimfiles/bundle-disabled/command-t/ruby/command-t/Makefile	/^RUBYARCHDIR   = $(sitearchdir)$(target_prefix)$/;"	m
RUBYCOMMONDIR	vimfiles/bundle-disabled/command-t/ruby/command-t/Makefile	/^RUBYCOMMONDIR = $(sitedir)$(target_prefix)$/;"	m
RUBYLIBDIR	vimfiles/bundle-disabled/command-t/ruby/command-t/Makefile	/^RUBYLIBDIR    = $(sitelibdir)$(target_prefix)$/;"	m
RUBY_EXTCONF_H	vimfiles/bundle-disabled/command-t/ruby/command-t/Makefile	/^RUBY_EXTCONF_H = $/;"	m
RUBY_INSTALL_NAME	vimfiles/bundle-disabled/command-t/ruby/command-t/Makefile	/^RUBY_INSTALL_NAME = ruby$/;"	m
RUBY_SO_NAME	vimfiles/bundle-disabled/command-t/ruby/command-t/Makefile	/^RUBY_SO_NAME = msvcrt-ruby18$/;"	m
Rails	vimfiles/bundle/vim-rails/plugin/rails.vim	/^command! -bar -bang -nargs=* -complete=dir Rails :if s:autoload()|call rails#new_app_command(<bang>0,<f-args>)|endif$/;"	c
RailsBufInit	vimfiles/bundle/vim-rails/autoload/rails.vim	/^function! RailsBufInit(path)$/;"	f
RailsFile	vimfiles/bundle/vim-rails/autoload/rails.vim	/^function! RailsFile()$/;"	f
RailsFilePath	vimfiles/bundle/vim-rails/autoload/rails.vim	/^function! RailsFilePath()$/;"	f
RailsFileType	vimfiles/bundle/vim-rails/autoload/rails.vim	/^function! RailsFileType()$/;"	f
RailsFind	vimfiles/bundle/vim-rails/autoload/rails.vim	/^function! s:RailsFind()$/;"	f
RailsHelpCommand	vimfiles/bundle/vim-rails/autoload/rails.vim	/^function! RailsHelpCommand(...)$/;"	f
RailsIncludeexpr	vimfiles/bundle/vim-rails/autoload/rails.vim	/^function! RailsIncludeexpr()$/;"	f
RailsIncludefind	vimfiles/bundle/vim-rails/autoload/rails.vim	/^function! s:RailsIncludefind(str,...)$/;"	f
RailsNamedRoutes	vimfiles/bundle/vim-rails/autoload/rails.vim	/^function! RailsNamedRoutes()$/;"	f
RailsRevision	vimfiles/bundle/vim-rails/autoload/rails.vim	/^function! RailsRevision()$/;"	f
RailsRoot	vimfiles/bundle/vim-rails/autoload/rails.vim	/^function! RailsRoot()$/;"	f
Rake	vimfiles/bundle/vim-rails/autoload/rails.vim	/^function! s:Rake(bang,lnum,arg)$/;"	f
Refresh	vimfiles/bundle/vim-rails/autoload/rails.vim	/^function! s:Refresh(bang)$/;"	f
RefreshBuffer	vimfiles/bundle/vim-rails/autoload/rails.vim	/^function! s:RefreshBuffer()$/;"	f
Related	vimfiles/bundle/vim-rails/autoload/rails.vim	/^function! s:Related(cmd,line1,line2,count,...)$/;"	f
ReloadAllSnippets	vimfiles/bundle/snipMate/plugin/snipMate.vim	/^fun! ReloadAllSnippets()$/;"	f
ReloadSnippets	vimfiles/bundle/snipMate/plugin/snipMate.vim	/^fun! ReloadSnippets(ft)$/;"	f
Remove	vimfiles/bundle/fugitive/plugin/fugitive.vim	/^function! s:Remove(force)$/;"	f
RemoveDelimiters	vimfiles/bundle/nerdcommenter/plugin/NERD_commenter.vim	/^function s:RemoveDelimiters(left, right, line)$/;"	f
RemoveSnippet	vimfiles/bundle/snipMate/autoload/snipMate.vim	/^fun s:RemoveSnippet()$/;"	f
ReplaceCmd	vimfiles/bundle/fugitive/plugin/fugitive.vim	/^function! s:ReplaceCmd(cmd,...) abort$/;"	f
ReplaceDelims	vimfiles/bundle/nerdcommenter/plugin/NERD_commenter.vim	/^function s:ReplaceDelims(toReplace1, toReplace2, replacor1, replacor2, str)$/;"	f
ReplaceLeftMostDelim	vimfiles/bundle/nerdcommenter/plugin/NERD_commenter.vim	/^function s:ReplaceLeftMostDelim(toReplace, replacor, str)$/;"	f
ReplaceRightMostDelim	vimfiles/bundle/nerdcommenter/plugin/NERD_commenter.vim	/^function s:ReplaceRightMostDelim(toReplace, replacor, str)$/;"	f
ResetAllSnippets	vimfiles/bundle/snipMate/plugin/snipMate.vim	/^fun! ResetAllSnippets()$/;"	f
ResetSnippets	vimfiles/bundle/snipMate/plugin/snipMate.vim	/^fun! ResetSnippets(ft)$/;"	f
RestoreScreenState	vimfiles/bundle/nerdcommenter/plugin/NERD_commenter.vim	/^function s:RestoreScreenState()$/;"	f
Right	vimfiles/bundle/nerdcommenter/plugin/NERD_commenter.vim	/^function s:Right(...)$/;"	f
RightMostIndx	vimfiles/bundle/nerdcommenter/plugin/NERD_commenter.vim	/^function s:RightMostIndx(countCommentedLines, countEmptyLines, topline, bottomline)$/;"	f
RubyBalloonexpr	vimfiles/bundle/vim-ruby/ftplugin/ruby.vim	/^function! RubyBalloonexpr()$/;"	f
RubyCursorIdentifier	vimfiles/bundle/vim-ruby/ftplugin/ruby.vim	/^function! RubyCursorIdentifier()$/;"	f
SHELL	vimfiles/bundle-disabled/command-t/ruby/command-t/Makefile	/^SHELL = \/bin\/sh$/;"	m
SRCS	vimfiles/bundle-disabled/command-t/ruby/command-t/Makefile	/^SRCS = ext.c match.c matcher.c$/;"	m
STATIC_LIB	vimfiles/bundle-disabled/command-t/ruby/command-t/Makefile	/^STATIC_LIB = $/;"	m
SYM_ATTR	vimfiles/bundle/powerline/fontpatcher/fontpatcher	/^SYM_ATTR = {$/;"	v
SaveScreenState	vimfiles/bundle/nerdcommenter/plugin/NERD_commenter.vim	/^function s:SaveScreenState()$/;"	f
Scanner	vimfiles/bundle-disabled/command-t/ruby/command-t/scanner.rb	/^  class Scanner; end$/;"	c	class:CommandT
Screen	vimfiles/bundle-disabled/command-t/ruby/command-t/vim/screen.rb	/^    module Screen$/;"	m	class:CommandT.VIM
SearchPair	vimfiles/bundle/coffeescript/indent/coffee.vim	/^function! s:SearchPair(start, end)$/;"	f
SelectWord	vimfiles/bundle/snipMate/autoload/snipMate.vim	/^fun s:SelectWord()$/;"	f
Set	vimfiles/bundle/vim-rails/autoload/rails.vim	/^function! s:Set(bang,...)$/;"	f
SetBasePath	vimfiles/bundle/vim-rails/autoload/rails.vim	/^function! s:SetBasePath()$/;"	f
SetMakePrg	vimfiles/bundle/coffeescript/compiler/coffee.vim	/^function! s:SetMakePrg()$/;"	f
SetOptDefault	vimfiles/bundle/vim-rails/plugin/rails.vim	/^function! s:SetOptDefault(opt,val)$/;"	f
SetUpForNewFiletype	vimfiles/bundle/nerdcommenter/plugin/NERD_commenter.vim	/^function s:SetUpForNewFiletype(filetype, forceReset)$/;"	f
Settings	vimfiles/bundle-disabled/command-t/ruby/command-t/settings.rb	/^  class Settings$/;"	c	class:CommandT
ShouldSkip	vimfiles/bundle/coffeescript/indent/coffee.vim	/^function! s:ShouldSkip(startlinenum, linenum, col)$/;"	f
ShowAvailableSnips	vimfiles/bundle/snipMate/plugin/snipMate.vim	/^fun! ShowAvailableSnips()$/;"	f
SkipExpr	vimfiles/bundle/coffeescript/indent/coffee.vim	/^function! s:SkipExpr(startlinenum)$/;"	f
SmartSearch	vimfiles/bundle/coffeescript/indent/coffee.vim	/^function! s:SmartSearch(linenum, regex)$/;"	f
StageDiff	vimfiles/bundle/fugitive/plugin/fugitive.vim	/^function! s:StageDiff(diff) abort$/;"	f
StageDiffEdit	vimfiles/bundle/fugitive/plugin/fugitive.vim	/^function! s:StageDiffEdit() abort$/;"	f
StagePatch	vimfiles/bundle/fugitive/plugin/fugitive.vim	/^function! s:StagePatch(lnum1,lnum2) abort$/;"	f
StageReloadSeek	vimfiles/bundle/fugitive/plugin/fugitive.vim	/^function! s:StageReloadSeek(target,lnum1,lnum2)$/;"	f
StageToggle	vimfiles/bundle/fugitive/plugin/fugitive.vim	/^function! s:StageToggle(lnum1,lnum2) abort$/;"	f
Status	vimfiles/bundle/fugitive/plugin/fugitive.vim	/^function! s:Status() abort$/;"	f
Stub	vimfiles/bundle-disabled/command-t/ruby/command-t/stub.rb	/^  class Stub$/;"	c	class:CommandT
SubstituteCase	vimfiles/bundle/keepcase/plugin/keepcase.vim	/^function! s:SubstituteCase(repl_arg) range$/;"	f
SwapOutterMultiPartDelimsForPlaceHolders	vimfiles/bundle/nerdcommenter/plugin/NERD_commenter.vim	/^function s:SwapOutterMultiPartDelimsForPlaceHolders(line)$/;"	f
SwapOutterPlaceHoldersForMultiPartDelims	vimfiles/bundle/nerdcommenter/plugin/NERD_commenter.vim	/^function s:SwapOutterPlaceHoldersForMultiPartDelims(line)$/;"	f
SwitchBetweenSpecAndSource	vimfiles/bundle/elentok-otherfile/plugin/elentok-otherfile.vim	/^func! SwitchBetweenSpecAndSource()$/;"	f
SwitchToAlternativeDelimiters	vimfiles/bundle/nerdcommenter/plugin/NERD_commenter.vim	/^function s:SwitchToAlternativeDelimiters(printMsgs)$/;"	f
SyntaxName	vimfiles/bundle/coffeescript/indent/coffee.vim	/^function! s:SyntaxName(linenum, col)$/;"	f
TARGET	vimfiles/bundle-disabled/command-t/ruby/command-t/Makefile	/^TARGET = ext$/;"	m
TARGET_SO	vimfiles/bundle-disabled/command-t/ruby/command-t/Makefile	/^TARGET_SO     = $(DLLIB)$/;"	m
TabSpace	vimfiles/bundle/nerdcommenter/plugin/NERD_commenter.vim	/^function s:TabSpace()$/;"	f
TabbedCol	vimfiles/bundle/nerdcommenter/plugin/NERD_commenter.vim	/^function s:TabbedCol(line, col)$/;"	f
TagList_IsValid	vimfiles/bundle/taglist/plugin/taglist.vim	/^function! TagList_IsValid()$/;"	f
TagList_Start	vimfiles/bundle/taglist/plugin/taglist.vim	/^function! TagList_Start()$/;"	f
TagList_WrapUp	vimfiles/bundle/taglist/plugin/taglist.vim	/^function! TagList_WrapUp()$/;"	f
TagList_title	vimfiles/bundle/taglist/plugin/taglist.vim	/^    let TagList_title = "__Tag_List__"$/;"	v
TargetDirectory	vimfiles/bundle/vim-ruby/bin/vim-ruby-install.rb	/^class TargetDirectory$/;"	c
TargetDirectory	vimfiles/bundle/vim-ruby/bin/vim-ruby-install.rb	/^class TargetDirectory::Finder$/;"	c
TheCWord	vimfiles/bundle/vim-rails/autoload/rails.vim	/^function! s:TheCWord()$/;"	f
Tlist	vimfiles/bundle/taglist/plugin/taglist.vim	/^    command! -nargs=0 -bar Tlist TlistToggle$/;"	c
TlistAddFiles	vimfiles/bundle/taglist/plugin/taglist.vim	/^    command! -nargs=+ -complete=file TlistAddFiles$/;"	c
TlistAddFilesRecursive	vimfiles/bundle/taglist/plugin/taglist.vim	/^    command! -nargs=+ -complete=dir TlistAddFilesRecursive$/;"	c
TlistClose	vimfiles/bundle/taglist/plugin/taglist.vim	/^    command! -nargs=0 -bar TlistClose call s:Tlist_Window_Close()$/;"	c
TlistDebug	vimfiles/bundle/taglist/plugin/taglist.vim	/^    command! -nargs=? -complete=file -bar TlistDebug$/;"	c
TlistHighlightTag	vimfiles/bundle/taglist/plugin/taglist.vim	/^    command! -nargs=0 -bar TlistHighlightTag call s:Tlist_Window_Highlight_Tag($/;"	c
TlistLock	vimfiles/bundle/taglist/plugin/taglist.vim	/^    command! -bar TlistLock let Tlist_Auto_Update=0$/;"	c
TlistMessages	vimfiles/bundle/taglist/plugin/taglist.vim	/^    command! -nargs=0 -bar TlistMessages call s:Tlist_Debug_Show()$/;"	c
TlistOpen	vimfiles/bundle/taglist/plugin/taglist.vim	/^    command! -nargs=0 -bar TlistOpen call s:Tlist_Window_Open()$/;"	c
TlistSessionLoad	vimfiles/bundle/taglist/plugin/taglist.vim	/^    command! -nargs=* -complete=file TlistSessionLoad$/;"	c
TlistSessionSave	vimfiles/bundle/taglist/plugin/taglist.vim	/^    command! -nargs=* -complete=file TlistSessionSave$/;"	c
TlistShowPrototype	vimfiles/bundle/taglist/plugin/taglist.vim	/^    command! -nargs=* -complete=buffer TlistShowPrototype$/;"	c
TlistShowTag	vimfiles/bundle/taglist/plugin/taglist.vim	/^    command! -nargs=* -complete=buffer TlistShowTag$/;"	c
TlistSync	vimfiles/bundle/taglist/plugin/taglist.vim	/^    command! -nargs=0 -bar TlistSync TlistHighlightTag$/;"	c
TlistToggle	vimfiles/bundle/taglist/plugin/taglist.vim	/^    command! -nargs=0 -bar TlistToggle call s:Tlist_Window_Toggle()$/;"	c
TlistUndebug	vimfiles/bundle/taglist/plugin/taglist.vim	/^    command! -nargs=0 -bar TlistUndebug  call s:Tlist_Debug_Disable()$/;"	c
TlistUnlock	vimfiles/bundle/taglist/plugin/taglist.vim	/^    command! -bar TlistUnlock let Tlist_Auto_Update=1$/;"	c
TlistUpdate	vimfiles/bundle/taglist/plugin/taglist.vim	/^    command! -nargs=0 -bar TlistUpdate call s:Tlist_Update_Current_File()$/;"	c
Tlist_Add_Files	vimfiles/bundle/taglist/plugin/taglist.vim	/^function! s:Tlist_Add_Files(...)$/;"	f
Tlist_Add_Files_Recursive	vimfiles/bundle/taglist/plugin/taglist.vim	/^function! s:Tlist_Add_Files_Recursive(dir, ...)$/;"	f
Tlist_Auto_Highlight_Tag	vimfiles/bundle/taglist/plugin/taglist.vim	/^        let Tlist_Auto_Highlight_Tag = 1$/;"	v
Tlist_Auto_Open	vimfiles/bundle/taglist/plugin/taglist.vim	/^        let Tlist_Auto_Open = 0$/;"	v
Tlist_Auto_Update	vimfiles/bundle/taglist/plugin/taglist.vim	/^        let Tlist_Auto_Update = 1$/;"	v
Tlist_Ballon_Expr	vimfiles/bundle/taglist/plugin/taglist.vim	/^function! Tlist_Ballon_Expr()$/;"	f
Tlist_Buffer_Removed	vimfiles/bundle/taglist/plugin/taglist.vim	/^function! s:Tlist_Buffer_Removed(filename)$/;"	f
Tlist_Change_Sort	vimfiles/bundle/taglist/plugin/taglist.vim	/^function! s:Tlist_Change_Sort(caller, action, sort_type)$/;"	f
Tlist_Close_On_Select	vimfiles/bundle/taglist/plugin/taglist.vim	/^        let Tlist_Close_On_Select = 0$/;"	v
Tlist_Compact_Format	vimfiles/bundle/taglist/plugin/taglist.vim	/^        let Tlist_Compact_Format = 0$/;"	v
Tlist_Ctags_Cmd	vimfiles/bundle/taglist/plugin/taglist.vim	/^            let Tlist_Ctags_Cmd = 'ctags'$/;"	v
Tlist_Ctags_Cmd	vimfiles/bundle/taglist/plugin/taglist.vim	/^            let Tlist_Ctags_Cmd = 'ctags.exe'$/;"	v
Tlist_Ctags_Cmd	vimfiles/bundle/taglist/plugin/taglist.vim	/^            let Tlist_Ctags_Cmd = 'exctags'$/;"	v
Tlist_Ctags_Cmd	vimfiles/bundle/taglist/plugin/taglist.vim	/^            let Tlist_Ctags_Cmd = 'exuberant-ctags'$/;"	v
Tlist_Ctags_Cmd	vimfiles/bundle/taglist/plugin/taglist.vim	/^            let Tlist_Ctags_Cmd = 'tags'$/;"	v
Tlist_Debug_Disable	vimfiles/bundle/taglist/plugin/taglist.vim	/^function! s:Tlist_Debug_Disable(...)$/;"	f
Tlist_Debug_Enable	vimfiles/bundle/taglist/plugin/taglist.vim	/^function! s:Tlist_Debug_Enable(...)$/;"	f
Tlist_Debug_Show	vimfiles/bundle/taglist/plugin/taglist.vim	/^function! s:Tlist_Debug_Show()$/;"	f
Tlist_Detect_Filetype	vimfiles/bundle/taglist/plugin/taglist.vim	/^function! s:Tlist_Detect_Filetype(fname)$/;"	f
Tlist_Discard_FileInfo	vimfiles/bundle/taglist/plugin/taglist.vim	/^function! s:Tlist_Discard_FileInfo(fidx)$/;"	f
Tlist_Discard_TagInfo	vimfiles/bundle/taglist/plugin/taglist.vim	/^function! s:Tlist_Discard_TagInfo(fidx)$/;"	f
Tlist_Display_Prototype	vimfiles/bundle/taglist/plugin/taglist.vim	/^        let Tlist_Display_Prototype = 0$/;"	v
Tlist_Display_Tag_Scope	vimfiles/bundle/taglist/plugin/taglist.vim	/^        let Tlist_Display_Tag_Scope = 1$/;"	v
Tlist_Enable_Fold_Column	vimfiles/bundle/taglist/plugin/taglist.vim	/^        let Tlist_Enable_Fold_Column = 1$/;"	v
Tlist_Exe_Cmd_No_Acmds	vimfiles/bundle/taglist/plugin/taglist.vim	/^function! s:Tlist_Exe_Cmd_No_Acmds(cmd)$/;"	f
Tlist_Exit_OnlyWindow	vimfiles/bundle/taglist/plugin/taglist.vim	/^        let Tlist_Exit_OnlyWindow = 0$/;"	v
Tlist_Extract_Tag_Scope	vimfiles/bundle/taglist/plugin/taglist.vim	/^function! s:Tlist_Extract_Tag_Scope(tag_line)$/;"	f
Tlist_Extract_Tagtype	vimfiles/bundle/taglist/plugin/taglist.vim	/^function! s:Tlist_Extract_Tagtype(tag_line)$/;"	f
Tlist_FileType_Init	vimfiles/bundle/taglist/plugin/taglist.vim	/^function! s:Tlist_FileType_Init(ftype)$/;"	f
Tlist_File_Fold_Auto_Close	vimfiles/bundle/taglist/plugin/taglist.vim	/^        let Tlist_File_Fold_Auto_Close = 0$/;"	v
Tlist_Find_Nearest_Tag_Idx	vimfiles/bundle/taglist/plugin/taglist.vim	/^function! s:Tlist_Find_Nearest_Tag_Idx(fidx, linenum)$/;"	f
Tlist_GainFocus_On_ToggleOpen	vimfiles/bundle/taglist/plugin/taglist.vim	/^        let Tlist_GainFocus_On_ToggleOpen = 0$/;"	v
Tlist_Get_Buffer_Filetype	vimfiles/bundle/taglist/plugin/taglist.vim	/^function! s:Tlist_Get_Buffer_Filetype(bnum)$/;"	f
Tlist_Get_File_Index	vimfiles/bundle/taglist/plugin/taglist.vim	/^function! s:Tlist_Get_File_Index(fname)$/;"	f
Tlist_Get_Tag_Linenum	vimfiles/bundle/taglist/plugin/taglist.vim	/^function! s:Tlist_Get_Tag_Linenum(fidx, tidx)$/;"	f
Tlist_Get_Tag_Prototype	vimfiles/bundle/taglist/plugin/taglist.vim	/^function! s:Tlist_Get_Tag_Prototype(fidx, tidx)$/;"	f
Tlist_Get_Tag_Prototype_By_Line	vimfiles/bundle/taglist/plugin/taglist.vim	/^function! Tlist_Get_Tag_Prototype_By_Line(...)$/;"	f
Tlist_Get_Tag_SearchPat	vimfiles/bundle/taglist/plugin/taglist.vim	/^function! s:Tlist_Get_Tag_SearchPat(fidx, tidx)$/;"	f
Tlist_Get_Tag_Type_By_Tag	vimfiles/bundle/taglist/plugin/taglist.vim	/^function! s:Tlist_Get_Tag_Type_By_Tag(fidx, tidx)$/;"	f
Tlist_Get_Tagname_By_Line	vimfiles/bundle/taglist/plugin/taglist.vim	/^function! Tlist_Get_Tagname_By_Line(...)$/;"	f
Tlist_Highlight_Tag_On_BufEnter	vimfiles/bundle/taglist/plugin/taglist.vim	/^        let Tlist_Highlight_Tag_On_BufEnter = 1$/;"	v
Tlist_Inc_Winwidth	vimfiles/bundle/taglist/plugin/taglist.vim	/^            let Tlist_Inc_Winwidth = 0$/;"	v
Tlist_Inc_Winwidth	vimfiles/bundle/taglist/plugin/taglist.vim	/^            let Tlist_Inc_Winwidth = 1$/;"	v
Tlist_Init_File	vimfiles/bundle/taglist/plugin/taglist.vim	/^function! s:Tlist_Init_File(filename, ftype)$/;"	f
Tlist_Log_Msg	vimfiles/bundle/taglist/plugin/taglist.vim	/^function! s:Tlist_Log_Msg(msg)$/;"	f
Tlist_Max_Submenu_Items	vimfiles/bundle/taglist/plugin/taglist.vim	/^        let Tlist_Max_Submenu_Items = 20$/;"	v
Tlist_Max_Tag_Length	vimfiles/bundle/taglist/plugin/taglist.vim	/^        let Tlist_Max_Tag_Length = 10$/;"	v
Tlist_Menu_Add_Base_Menu	vimfiles/bundle/taglist/plugin/taglist.vim	/^function! s:Tlist_Menu_Add_Base_Menu()$/;"	f
Tlist_Menu_File_Refresh	vimfiles/bundle/taglist/plugin/taglist.vim	/^function! s:Tlist_Menu_File_Refresh(fidx)$/;"	f
Tlist_Menu_Get_Tag_Type_Cmd	vimfiles/bundle/taglist/plugin/taglist.vim	/^function! s:Tlist_Menu_Get_Tag_Type_Cmd(fidx, ftype, add_ttype_name, ttype_idx)$/;"	f
Tlist_Menu_Init	vimfiles/bundle/taglist/plugin/taglist.vim	/^function! s:Tlist_Menu_Init()$/;"	f
Tlist_Menu_Jump_To_Tag	vimfiles/bundle/taglist/plugin/taglist.vim	/^function! s:Tlist_Menu_Jump_To_Tag(tidx)$/;"	f
Tlist_Menu_Refresh	vimfiles/bundle/taglist/plugin/taglist.vim	/^function! s:Tlist_Menu_Refresh()$/;"	f
Tlist_Menu_Remove_File	vimfiles/bundle/taglist/plugin/taglist.vim	/^function! s:Tlist_Menu_Remove_File()$/;"	f
Tlist_Menu_Update_File	vimfiles/bundle/taglist/plugin/taglist.vim	/^function! s:Tlist_Menu_Update_File(clear_menu)$/;"	f
Tlist_Parse_Tagline	vimfiles/bundle/taglist/plugin/taglist.vim	/^function! s:Tlist_Parse_Tagline(tag_line)$/;"	f
Tlist_Post_Close_Cleanup	vimfiles/bundle/taglist/plugin/taglist.vim	/^function! s:Tlist_Post_Close_Cleanup()$/;"	f
Tlist_Process_Dir	vimfiles/bundle/taglist/plugin/taglist.vim	/^function! s:Tlist_Process_Dir(dir_name, pat)$/;"	f
Tlist_Process_File	vimfiles/bundle/taglist/plugin/taglist.vim	/^function! s:Tlist_Process_File(filename, ftype)$/;"	f
Tlist_Process_File_Always	vimfiles/bundle/taglist/plugin/taglist.vim	/^        let Tlist_Process_File_Always = 0$/;"	v
Tlist_Process_Filelist	vimfiles/bundle/taglist/plugin/taglist.vim	/^function! s:Tlist_Process_Filelist(file_names)$/;"	f
Tlist_Refresh	vimfiles/bundle/taglist/plugin/taglist.vim	/^function! s:Tlist_Refresh()$/;"	f
Tlist_Refresh_Folds	vimfiles/bundle/taglist/plugin/taglist.vim	/^function! s:Tlist_Refresh_Folds()$/;"	f
Tlist_Remove_File	vimfiles/bundle/taglist/plugin/taglist.vim	/^function! s:Tlist_Remove_File(file_idx, user_request)$/;"	f
Tlist_Session_Load	vimfiles/bundle/taglist/plugin/taglist.vim	/^function! s:Tlist_Session_Load(...)$/;"	f
Tlist_Session_Save	vimfiles/bundle/taglist/plugin/taglist.vim	/^function! s:Tlist_Session_Save(...)$/;"	f
Tlist_Set_App	vimfiles/bundle/taglist/plugin/taglist.vim	/^function! Tlist_Set_App(name)$/;"	f
Tlist_Show_Menu	vimfiles/bundle/taglist/plugin/taglist.vim	/^        let Tlist_Show_Menu = 0$/;"	v
Tlist_Show_One_File	vimfiles/bundle/taglist/plugin/taglist.vim	/^        let Tlist_Show_One_File = 0$/;"	v
Tlist_Skip_File	vimfiles/bundle/taglist/plugin/taglist.vim	/^function! s:Tlist_Skip_File(filename, ftype)$/;"	f
Tlist_Sort_Type	vimfiles/bundle/taglist/plugin/taglist.vim	/^        let Tlist_Sort_Type = 'order'$/;"	v
Tlist_Update_Current_File	vimfiles/bundle/taglist/plugin/taglist.vim	/^function! s:Tlist_Update_Current_File()$/;"	f
Tlist_Update_File	vimfiles/bundle/taglist/plugin/taglist.vim	/^function! Tlist_Update_File(filename, ftype)$/;"	f
Tlist_Update_Remove_List	vimfiles/bundle/taglist/plugin/taglist.vim	/^function! s:Tlist_Update_Remove_List(filename, add)$/;"	f
Tlist_Use_Horiz_Window	vimfiles/bundle/taglist/plugin/taglist.vim	/^        let Tlist_Use_Horiz_Window = 0$/;"	v
Tlist_Use_Right_Window	vimfiles/bundle/taglist/plugin/taglist.vim	/^        let Tlist_Use_Right_Window = 0$/;"	v
Tlist_Use_SingleClick	vimfiles/bundle/taglist/plugin/taglist.vim	/^        let Tlist_Use_SingleClick = 0$/;"	v
Tlist_User_Removed_File	vimfiles/bundle/taglist/plugin/taglist.vim	/^function! s:Tlist_User_Removed_File(filename)$/;"	f
Tlist_Vim_Session_Load	vimfiles/bundle/taglist/plugin/taglist.vim	/^function! s:Tlist_Vim_Session_Load()$/;"	f
Tlist_Warning_Msg	vimfiles/bundle/taglist/plugin/taglist.vim	/^function! s:Tlist_Warning_Msg(msg)$/;"	f
Tlist_WinHeight	vimfiles/bundle/taglist/plugin/taglist.vim	/^        let Tlist_WinHeight = 10$/;"	v
Tlist_WinWidth	vimfiles/bundle/taglist/plugin/taglist.vim	/^        let Tlist_WinWidth = 30$/;"	v
Tlist_Window_Check_Auto_Open	vimfiles/bundle/taglist/plugin/taglist.vim	/^function! s:Tlist_Window_Check_Auto_Open()$/;"	f
Tlist_Window_Check_Width	vimfiles/bundle/taglist/plugin/taglist.vim	/^function! s:Tlist_Window_Check_Width()$/;"	f
Tlist_Window_Close	vimfiles/bundle/taglist/plugin/taglist.vim	/^function! s:Tlist_Window_Close()$/;"	f
Tlist_Window_Create	vimfiles/bundle/taglist/plugin/taglist.vim	/^function! s:Tlist_Window_Create()$/;"	f
Tlist_Window_Display_Help	vimfiles/bundle/taglist/plugin/taglist.vim	/^function! s:Tlist_Window_Display_Help()$/;"	f
Tlist_Window_Exit_Only_Window	vimfiles/bundle/taglist/plugin/taglist.vim	/^function! s:Tlist_Window_Exit_Only_Window()$/;"	f
Tlist_Window_Get_File_Index_By_Linenum	vimfiles/bundle/taglist/plugin/taglist.vim	/^function! s:Tlist_Window_Get_File_Index_By_Linenum(lnum)$/;"	f
Tlist_Window_Get_Tag_Index	vimfiles/bundle/taglist/plugin/taglist.vim	/^function! s:Tlist_Window_Get_Tag_Index(fidx, lnum)$/;"	f
Tlist_Window_Get_Tag_Type_By_Linenum	vimfiles/bundle/taglist/plugin/taglist.vim	/^function! s:Tlist_Window_Get_Tag_Type_By_Linenum(fidx, lnum)$/;"	f
Tlist_Window_Goto_Window	vimfiles/bundle/taglist/plugin/taglist.vim	/^function! s:Tlist_Window_Goto_Window()$/;"	f
Tlist_Window_Highlight_Line	vimfiles/bundle/taglist/plugin/taglist.vim	/^function! s:Tlist_Window_Highlight_Line()$/;"	f
Tlist_Window_Highlight_Tag	vimfiles/bundle/taglist/plugin/taglist.vim	/^function! s:Tlist_Window_Highlight_Tag(filename, cur_lnum, cntx, center)$/;"	f
Tlist_Window_Init	vimfiles/bundle/taglist/plugin/taglist.vim	/^function! s:Tlist_Window_Init()$/;"	f
Tlist_Window_Jump_To_Tag	vimfiles/bundle/taglist/plugin/taglist.vim	/^function! s:Tlist_Window_Jump_To_Tag(win_ctrl)$/;"	f
Tlist_Window_Mark_File_Window	vimfiles/bundle/taglist/plugin/taglist.vim	/^function! s:Tlist_Window_Mark_File_Window()$/;"	f
Tlist_Window_Move_To_File	vimfiles/bundle/taglist/plugin/taglist.vim	/^function! s:Tlist_Window_Move_To_File(dir)$/;"	f
Tlist_Window_Open	vimfiles/bundle/taglist/plugin/taglist.vim	/^function! s:Tlist_Window_Open()$/;"	f
Tlist_Window_Open_File	vimfiles/bundle/taglist/plugin/taglist.vim	/^function! s:Tlist_Window_Open_File(win_ctrl, filename, tagpat)$/;"	f
Tlist_Window_Open_File_Fold	vimfiles/bundle/taglist/plugin/taglist.vim	/^function! s:Tlist_Window_Open_File_Fold(acmd_bufnr)$/;"	f
Tlist_Window_Refresh	vimfiles/bundle/taglist/plugin/taglist.vim	/^function! s:Tlist_Window_Refresh()$/;"	f
Tlist_Window_Refresh_File	vimfiles/bundle/taglist/plugin/taglist.vim	/^function! s:Tlist_Window_Refresh_File(filename, ftype)$/;"	f
Tlist_Window_Remove_File_From_Display	vimfiles/bundle/taglist/plugin/taglist.vim	/^function! s:Tlist_Window_Remove_File_From_Display(fidx)$/;"	f
Tlist_Window_Show_Info	vimfiles/bundle/taglist/plugin/taglist.vim	/^function! s:Tlist_Window_Show_Info()$/;"	f
Tlist_Window_Toggle	vimfiles/bundle/taglist/plugin/taglist.vim	/^function! s:Tlist_Window_Toggle()$/;"	f
Tlist_Window_Toggle_Help_Text	vimfiles/bundle/taglist/plugin/taglist.vim	/^function! s:Tlist_Window_Toggle_Help_Text()$/;"	f
Tlist_Window_Update_File	vimfiles/bundle/taglist/plugin/taglist.vim	/^function! s:Tlist_Window_Update_File()$/;"	f
Tlist_Window_Update_Line_Offsets	vimfiles/bundle/taglist/plugin/taglist.vim	/^function! s:Tlist_Window_Update_Line_Offsets(start_idx, increment, offset)$/;"	f
Tlist_Window_Zoom	vimfiles/bundle/taglist/plugin/taglist.vim	/^function! s:Tlist_Window_Zoom()$/;"	f
TreeDirNode.AbsoluteTreeRoot	vimfiles/bundle-disabled/nerdtree/plugin/NERD_tree.vim	/^function! s:TreeDirNode.AbsoluteTreeRoot()$/;"	f
TreeDirNode.GetSelected	vimfiles/bundle-disabled/nerdtree/plugin/NERD_tree.vim	/^function! s:TreeDirNode.GetSelected()$/;"	f
TreeDirNode.New	vimfiles/bundle-disabled/nerdtree/plugin/NERD_tree.vim	/^function! s:TreeDirNode.New(path)$/;"	f
TreeDirNode._initChildren	vimfiles/bundle-disabled/nerdtree/plugin/NERD_tree.vim	/^function! s:TreeDirNode._initChildren(silent)$/;"	f
TreeDirNode._openRecursively2	vimfiles/bundle-disabled/nerdtree/plugin/NERD_tree.vim	/^function! s:TreeDirNode._openRecursively2(forceOpen)$/;"	f
TreeDirNode.activate	vimfiles/bundle-disabled/nerdtree/plugin/NERD_tree.vim	/^function! s:TreeDirNode.activate(forceKeepWinOpen)$/;"	f
TreeDirNode.addChild	vimfiles/bundle-disabled/nerdtree/plugin/NERD_tree.vim	/^function! s:TreeDirNode.addChild(treenode, inOrder)$/;"	f
TreeDirNode.close	vimfiles/bundle-disabled/nerdtree/plugin/NERD_tree.vim	/^function! s:TreeDirNode.close()$/;"	f
TreeDirNode.closeChildren	vimfiles/bundle-disabled/nerdtree/plugin/NERD_tree.vim	/^function! s:TreeDirNode.closeChildren()$/;"	f
TreeDirNode.createChild	vimfiles/bundle-disabled/nerdtree/plugin/NERD_tree.vim	/^function! s:TreeDirNode.createChild(path, inOrder)$/;"	f
TreeDirNode.findNode	vimfiles/bundle-disabled/nerdtree/plugin/NERD_tree.vim	/^function! s:TreeDirNode.findNode(path)$/;"	f
TreeDirNode.getChild	vimfiles/bundle-disabled/nerdtree/plugin/NERD_tree.vim	/^function! s:TreeDirNode.getChild(path)$/;"	f
TreeDirNode.getChildByIndex	vimfiles/bundle-disabled/nerdtree/plugin/NERD_tree.vim	/^function! s:TreeDirNode.getChildByIndex(indx, visible)$/;"	f
TreeDirNode.getChildCount	vimfiles/bundle-disabled/nerdtree/plugin/NERD_tree.vim	/^function! s:TreeDirNode.getChildCount()$/;"	f
TreeDirNode.getChildIndex	vimfiles/bundle-disabled/nerdtree/plugin/NERD_tree.vim	/^function! s:TreeDirNode.getChildIndex(path)$/;"	f
TreeDirNode.getVisibleChildCount	vimfiles/bundle-disabled/nerdtree/plugin/NERD_tree.vim	/^function! s:TreeDirNode.getVisibleChildCount()$/;"	f
TreeDirNode.getVisibleChildren	vimfiles/bundle-disabled/nerdtree/plugin/NERD_tree.vim	/^function! s:TreeDirNode.getVisibleChildren()$/;"	f
TreeDirNode.hasVisibleChildren	vimfiles/bundle-disabled/nerdtree/plugin/NERD_tree.vim	/^function! s:TreeDirNode.hasVisibleChildren()$/;"	f
TreeDirNode.open	vimfiles/bundle-disabled/nerdtree/plugin/NERD_tree.vim	/^function! s:TreeDirNode.open()$/;"	f
TreeDirNode.openExplorer	vimfiles/bundle-disabled/nerdtree/plugin/NERD_tree.vim	/^function! s:TreeDirNode.openExplorer()$/;"	f
TreeDirNode.openInNewTab	vimfiles/bundle-disabled/nerdtree/plugin/NERD_tree.vim	/^function! s:TreeDirNode.openInNewTab(options)$/;"	f
TreeDirNode.openRecursively	vimfiles/bundle-disabled/nerdtree/plugin/NERD_tree.vim	/^function! s:TreeDirNode.openRecursively()$/;"	f
TreeDirNode.refresh	vimfiles/bundle-disabled/nerdtree/plugin/NERD_tree.vim	/^function! s:TreeDirNode.refresh()$/;"	f
TreeDirNode.removeChild	vimfiles/bundle-disabled/nerdtree/plugin/NERD_tree.vim	/^function! s:TreeDirNode.removeChild(treenode)$/;"	f
TreeDirNode.reveal	vimfiles/bundle-disabled/nerdtree/plugin/NERD_tree.vim	/^function! s:TreeDirNode.reveal(path)$/;"	f
TreeDirNode.sortChildren	vimfiles/bundle-disabled/nerdtree/plugin/NERD_tree.vim	/^function! s:TreeDirNode.sortChildren()$/;"	f
TreeDirNode.toggleOpen	vimfiles/bundle-disabled/nerdtree/plugin/NERD_tree.vim	/^function! s:TreeDirNode.toggleOpen()$/;"	f
TreeDirNode.transplantChild	vimfiles/bundle-disabled/nerdtree/plugin/NERD_tree.vim	/^function! s:TreeDirNode.transplantChild(newNode)$/;"	f
TreeFileNode.GetRootForTab	vimfiles/bundle-disabled/nerdtree/plugin/NERD_tree.vim	/^function! s:TreeFileNode.GetRootForTab()$/;"	f
TreeFileNode.GetRootLineNum	vimfiles/bundle-disabled/nerdtree/plugin/NERD_tree.vim	/^function! s:TreeFileNode.GetRootLineNum()$/;"	f
TreeFileNode.GetSelected	vimfiles/bundle-disabled/nerdtree/plugin/NERD_tree.vim	/^function! s:TreeFileNode.GetSelected()$/;"	f
TreeFileNode.New	vimfiles/bundle-disabled/nerdtree/plugin/NERD_tree.vim	/^function! s:TreeFileNode.New(path)$/;"	f
TreeFileNode._renderToString	vimfiles/bundle-disabled/nerdtree/plugin/NERD_tree.vim	/^function! s:TreeFileNode._renderToString(depth, drawText, vertMap, isLastChild)$/;"	f
TreeFileNode.activate	vimfiles/bundle-disabled/nerdtree/plugin/NERD_tree.vim	/^function! s:TreeFileNode.activate(forceKeepWinOpen)$/;"	f
TreeFileNode.bookmark	vimfiles/bundle-disabled/nerdtree/plugin/NERD_tree.vim	/^function! s:TreeFileNode.bookmark(name)$/;"	f
TreeFileNode.cacheParent	vimfiles/bundle-disabled/nerdtree/plugin/NERD_tree.vim	/^function! s:TreeFileNode.cacheParent()$/;"	f
TreeFileNode.clearBoomarks	vimfiles/bundle-disabled/nerdtree/plugin/NERD_tree.vim	/^function! s:TreeFileNode.clearBoomarks()$/;"	f
TreeFileNode.copy	vimfiles/bundle-disabled/nerdtree/plugin/NERD_tree.vim	/^function! s:TreeFileNode.copy(dest)$/;"	f
TreeFileNode.delete	vimfiles/bundle-disabled/nerdtree/plugin/NERD_tree.vim	/^function! s:TreeFileNode.delete()$/;"	f
TreeFileNode.displayString	vimfiles/bundle-disabled/nerdtree/plugin/NERD_tree.vim	/^function! s:TreeFileNode.displayString()$/;"	f
TreeFileNode.equals	vimfiles/bundle-disabled/nerdtree/plugin/NERD_tree.vim	/^function! s:TreeFileNode.equals(treenode)$/;"	f
TreeFileNode.findNode	vimfiles/bundle-disabled/nerdtree/plugin/NERD_tree.vim	/^function! s:TreeFileNode.findNode(path)$/;"	f
TreeFileNode.findOpenDirSiblingWithVisibleChildren	vimfiles/bundle-disabled/nerdtree/plugin/NERD_tree.vim	/^function! s:TreeFileNode.findOpenDirSiblingWithVisibleChildren(direction)$/;"	f
TreeFileNode.findSibling	vimfiles/bundle-disabled/nerdtree/plugin/NERD_tree.vim	/^function! s:TreeFileNode.findSibling(direction)$/;"	f
TreeFileNode.getLineNum	vimfiles/bundle-disabled/nerdtree/plugin/NERD_tree.vim	/^function! s:TreeFileNode.getLineNum()$/;"	f
TreeFileNode.isRoot	vimfiles/bundle-disabled/nerdtree/plugin/NERD_tree.vim	/^function! s:TreeFileNode.isRoot()$/;"	f
TreeFileNode.isVisible	vimfiles/bundle-disabled/nerdtree/plugin/NERD_tree.vim	/^function! s:TreeFileNode.isVisible()$/;"	f
TreeFileNode.makeRoot	vimfiles/bundle-disabled/nerdtree/plugin/NERD_tree.vim	/^function! s:TreeFileNode.makeRoot()$/;"	f
TreeFileNode.open	vimfiles/bundle-disabled/nerdtree/plugin/NERD_tree.vim	/^function! s:TreeFileNode.open()$/;"	f
TreeFileNode.openInNewTab	vimfiles/bundle-disabled/nerdtree/plugin/NERD_tree.vim	/^function! s:TreeFileNode.openInNewTab(options)$/;"	f
TreeFileNode.openSplit	vimfiles/bundle-disabled/nerdtree/plugin/NERD_tree.vim	/^function! s:TreeFileNode.openSplit()$/;"	f
TreeFileNode.openVSplit	vimfiles/bundle-disabled/nerdtree/plugin/NERD_tree.vim	/^function! s:TreeFileNode.openVSplit()$/;"	f
TreeFileNode.putCursorHere	vimfiles/bundle-disabled/nerdtree/plugin/NERD_tree.vim	/^function! s:TreeFileNode.putCursorHere(isJump, recurseUpward)$/;"	f
TreeFileNode.refresh	vimfiles/bundle-disabled/nerdtree/plugin/NERD_tree.vim	/^function! s:TreeFileNode.refresh()$/;"	f
TreeFileNode.rename	vimfiles/bundle-disabled/nerdtree/plugin/NERD_tree.vim	/^function! s:TreeFileNode.rename(newName)$/;"	f
TreeFileNode.renderToString	vimfiles/bundle-disabled/nerdtree/plugin/NERD_tree.vim	/^function! s:TreeFileNode.renderToString()$/;"	f
TriggerSnippet	vimfiles/bundle/snipMate/plugin/snipMate.vim	/^fun! TriggerSnippet()$/;"	f
UnEsc	vimfiles/bundle/nerdcommenter/plugin/NERD_commenter.vim	/^function s:UnEsc(str, escChar)$/;"	f
UncommentLineNormal	vimfiles/bundle/nerdcommenter/plugin/NERD_commenter.vim	/^function s:UncommentLineNormal(line)$/;"	f
UncommentLines	vimfiles/bundle/nerdcommenter/plugin/NERD_commenter.vim	/^function s:UncommentLines(topLine, bottomLine)$/;"	f
UncommentLinesNormal	vimfiles/bundle/nerdcommenter/plugin/NERD_commenter.vim	/^function s:UncommentLinesNormal(topline, bottomline)$/;"	f
UncommentLinesSexy	vimfiles/bundle/nerdcommenter/plugin/NERD_commenter.vim	/^function s:UncommentLinesSexy(topline, bottomline)$/;"	f
UntabbedCol	vimfiles/bundle/nerdcommenter/plugin/NERD_commenter.vim	/^function s:UntabbedCol(line, col)$/;"	f
UpdateChangedSnip	vimfiles/bundle/snipMate/autoload/snipMate.vim	/^fun s:UpdateChangedSnip(entering)$/;"	f
UpdateMakePrg	vimfiles/bundle/coffeescript/compiler/coffee.vim	/^  function! s:UpdateMakePrg()$/;"	f
UpdatePlaceholderTabStops	vimfiles/bundle/snipMate/autoload/snipMate.vim	/^fun s:UpdatePlaceholderTabStops()$/;"	f
UpdateTabStops	vimfiles/bundle/snipMate/autoload/snipMate.vim	/^fun s:UpdateTabStops()$/;"	f
UpdateVars	vimfiles/bundle/snipMate/autoload/snipMate.vim	/^fun s:UpdateVars()$/;"	f
VIM	vimfiles/bundle-disabled/command-t/ruby/command-t/vim.rb	/^  module VIM$/;"	m	class:CommandT
VIM	vimfiles/bundle-disabled/command-t/ruby/command-t/vim/path_utilities.rb	/^  module VIM$/;"	m	class:CommandT
VIM	vimfiles/bundle-disabled/command-t/ruby/command-t/vim/screen.rb	/^  module VIM$/;"	m	class:CommandT
VIM	vimfiles/bundle-disabled/command-t/ruby/command-t/vim/window.rb	/^  module VIM$/;"	m	class:CommandT
VPATH	vimfiles/bundle-disabled/command-t/ruby/command-t/Makefile	/^VPATH = $(srcdir):$(topdir):$(hdrdir)$/;"	m
Ve	vimfiles/autoload/pathogen.vim	/^command! -bar -bang -count=1 -nargs=1 -complete=customlist,s:Findcomplete Ve       :execute s:find(<count>,'edit<bang>',<q-args>)$/;"	c
Vedit	vimfiles/autoload/pathogen.vim	/^command! -bar -bang -count=1 -nargs=1 -complete=customlist,s:Findcomplete Vedit    :execute s:find(<count>,'edit<bang>',<q-args>)$/;"	c
VimRubyInstaller	vimfiles/bundle/vim-ruby/bin/vim-ruby-install.rb	/^class VimRubyInstaller$/;"	c
Vopen	vimfiles/autoload/pathogen.vim	/^command! -bar -bang -count=1 -nargs=1 -complete=customlist,s:Findcomplete Vopen    :execute s:find(<count>,'edit<bang>',<q-args>,'lcd')$/;"	c
Vpedit	vimfiles/autoload/pathogen.vim	/^command! -bar -bang -count=1 -nargs=1 -complete=customlist,s:Findcomplete Vpedit   :execute s:find(<count>,'pedit<bang>',<q-args>)$/;"	c
Vread	vimfiles/autoload/pathogen.vim	/^command! -bar -bang -count=1 -nargs=1 -complete=customlist,s:Findcomplete Vread    :execute s:find(<count>,'read<bang>',<q-args>)$/;"	c
Vsplit	vimfiles/autoload/pathogen.vim	/^command! -bar -bang -count=1 -nargs=1 -complete=customlist,s:Findcomplete Vsplit   :execute s:find(<count>,'split<bang>',<q-args>)$/;"	c
Vtabedit	vimfiles/autoload/pathogen.vim	/^command! -bar -bang -count=1 -nargs=1 -complete=customlist,s:Findcomplete Vtabedit :execute s:find(<count>,'tabedit<bang>',<q-args>)$/;"	c
Vvsplit	vimfiles/autoload/pathogen.vim	/^command! -bar -bang -count=1 -nargs=1 -complete=customlist,s:Findcomplete Vvsplit  :execute s:find(<count>,'vsplit<bang>',<q-args>)$/;"	c
Window	vimfiles/bundle-disabled/command-t/ruby/command-t/vim/window.rb	/^    class Window$/;"	c	class:CommandT.VIM
Worker	vimfiles/bundle/l9/autoload/l9/async.py	/^class Worker(threading.Thread):$/;"	c	inherits:threading.Thread
Wq	vimfiles/bundle/fugitive/plugin/fugitive.vim	/^function! s:Wq(force,...) abort$/;"	f
Write	vimfiles/bundle/fugitive/plugin/fugitive.vim	/^function! s:Write(force,...) abort$/;"	f
YRClear	vimfiles/bundle/yankring/plugin/yankring.vim	/^command!                           YRClear        call s:YRClear()$/;"	c
YRClear	vimfiles/bundle/yankring/plugin/yankring.vim	/^function! s:YRClear()$/;"	f
YRDeleteRange	vimfiles/bundle/yankring/plugin/yankring.vim	/^command! -range -bang     -nargs=? YRDeleteRange  <line1>,<line2>call s:YRYankRange(<bang>1, <args>)$/;"	c
YRDisplayElem	vimfiles/bundle/yankring/plugin/yankring.vim	/^function! s:YRDisplayElem(disp_nbr, script_var) $/;"	f
YRDoRepeat	vimfiles/bundle/yankring/plugin/yankring.vim	/^function! s:YRDoRepeat() $/;"	f
YRErrorMsg	vimfiles/bundle/yankring/plugin/yankring.vim	/^function! s:YRErrorMsg(msg)$/;"	f
YRFocusGained	vimfiles/bundle/yankring/plugin/yankring.vim	/^function! s:YRFocusGained()$/;"	f
YRGetChar	vimfiles/bundle/yankring/plugin/yankring.vim	/^function! s:YRGetChar()$/;"	f
YRGetElem	vimfiles/bundle/yankring/plugin/yankring.vim	/^command!                  -nargs=* YRGetElem      call s:YRGetElem(<args>)$/;"	c
YRGetElem	vimfiles/bundle/yankring/plugin/yankring.vim	/^function! s:YRGetElem(...) $/;"	f
YRGetMultiple	vimfiles/bundle/yankring/plugin/yankring.vim	/^command!        -bang     -nargs=? YRGetMultiple  call s:YRGetMultiple(<bang>0, <args>)$/;"	c
YRGetMultiple	vimfiles/bundle/yankring/plugin/yankring.vim	/^function! s:YRGetMultiple(reverse_order, ...) $/;"	f
YRGetNextElem	vimfiles/bundle/yankring/plugin/yankring.vim	/^function! s:YRGetNextElem(start, iter) $/;"	f
YRGetValElemNbr	vimfiles/bundle/yankring/plugin/yankring.vim	/^function! s:YRGetValElemNbr( position, type )$/;"	f
YRHistoryDelete	vimfiles/bundle/yankring/plugin/yankring.vim	/^function! s:YRHistoryDelete()$/;"	f
YRHistoryRead	vimfiles/bundle/yankring/plugin/yankring.vim	/^function! s:YRHistoryRead()$/;"	f
YRHistorySave	vimfiles/bundle/yankring/plugin/yankring.vim	/^function! s:YRHistorySave()$/;"	f
YRHistoryUpgrade	vimfiles/bundle/yankring/plugin/yankring.vim	/^function! s:YRHistoryUpgrade(version)$/;"	f
YRInit	vimfiles/bundle/yankring/plugin/yankring.vim	/^function! s:YRInit(...)$/;"	f
YRInsertLeave	vimfiles/bundle/yankring/plugin/yankring.vim	/^function! s:YRInsertLeave()$/;"	f
YRMRUAdd	vimfiles/bundle/yankring/plugin/yankring.vim	/^function! s:YRMRUAdd( mru_list, element, element_type )$/;"	f
YRMRUDel	vimfiles/bundle/yankring/plugin/yankring.vim	/^function! s:YRMRUDel( mru_list, elem_nbr )$/;"	f
YRMRUElemFormat	vimfiles/bundle/yankring/plugin/yankring.vim	/^function! s:YRMRUElemFormat( element, element_type )$/;"	f
YRMRUGet	vimfiles/bundle/yankring/plugin/yankring.vim	/^function! s:YRMRUGet( mru_list, position )$/;"	f
YRMRUHas	vimfiles/bundle/yankring/plugin/yankring.vim	/^function! s:YRMRUHas( mru_list, find_str )$/;"	f
YRMRUReset	vimfiles/bundle/yankring/plugin/yankring.vim	/^function! s:YRMRUReset( mru_list )$/;"	f
YRMRUSize	vimfiles/bundle/yankring/plugin/yankring.vim	/^function! s:YRMRUSize( mru_list )$/;"	f
YRMapsCreate	vimfiles/bundle/yankring/plugin/yankring.vim	/^command!                  -nargs=0 YRMapsCreate   call s:YRMapsCreate()$/;"	c
YRMapsCreate	vimfiles/bundle/yankring/plugin/yankring.vim	/^function! s:YRMapsCreate(...)$/;"	f
YRMapsDelete	vimfiles/bundle/yankring/plugin/yankring.vim	/^command!                  -nargs=0 YRMapsDelete   call s:YRMapsDelete()$/;"	c
YRMapsDelete	vimfiles/bundle/yankring/plugin/yankring.vim	/^function! s:YRMapsDelete(...)$/;"	f
YRMapsExpression	vimfiles/bundle/yankring/plugin/yankring.vim	/^function! YRMapsExpression(sid, motion, ...)$/;"	f
YRPaste	vimfiles/bundle/yankring/plugin/yankring.vim	/^command! -count -register -nargs=* YRPaste        call s:YRPaste(0,1,<args>)$/;"	c
YRPaste	vimfiles/bundle/yankring/plugin/yankring.vim	/^function! s:YRPaste(replace_last_paste_selection, nextvalue, direction, ...) $/;"	f
YRPop	vimfiles/bundle/yankring/plugin/yankring.vim	/^command!                  -nargs=? YRPop          <line1>,<line2>call s:YRPop(<args>)$/;"	c
YRPop	vimfiles/bundle/yankring/plugin/yankring.vim	/^function! s:YRPop(...)$/;"	f
YRPush	vimfiles/bundle/yankring/plugin/yankring.vim	/^command!        -register -nargs=? YRPush         call s:YRPush(<args>)$/;"	c
YRPush	vimfiles/bundle/yankring/plugin/yankring.vim	/^function! s:YRPush(...) $/;"	f
YRRecord	vimfiles/bundle/yankring/plugin/yankring.vim	/^function! YRRecord(...) $/;"	f
YRRecord3	vimfiles/bundle/yankring/plugin/yankring.vim	/^function! YRRecord3() $/;"	f
YRRegister	vimfiles/bundle/yankring/plugin/yankring.vim	/^function! s:YRRegister()$/;"	f
YRReplace	vimfiles/bundle/yankring/plugin/yankring.vim	/^command! -count -register -nargs=* YRReplace      call s:YRPaste(1,<args>)$/;"	c
YRReset	vimfiles/bundle/yankring/plugin/yankring.vim	/^function! s:YRReset()$/;"	f
YRSearch	vimfiles/bundle/yankring/plugin/yankring.vim	/^command!                  -nargs=? YRSearch       call s:YRSearch(<q-args>)$/;"	c
YRSearch	vimfiles/bundle/yankring/plugin/yankring.vim	/^function! s:YRSearch(...) $/;"	f
YRSetNumberedReg	vimfiles/bundle/yankring/plugin/yankring.vim	/^function! s:YRSetNumberedReg() $/;"	f
YRSetPrevOP	vimfiles/bundle/yankring/plugin/yankring.vim	/^function! s:YRSetPrevOP(op_code, count, reg, mode) $/;"	f
YRShow	vimfiles/bundle/yankring/plugin/yankring.vim	/^command!                  -nargs=? YRShow         call s:YRShow(<args>)$/;"	c
YRShow	vimfiles/bundle/yankring/plugin/yankring.vim	/^function! s:YRShow(...) $/;"	f
YRToggle	vimfiles/bundle/yankring/plugin/yankring.vim	/^command!                  -nargs=? YRToggle       call s:YRToggle(<args>)$/;"	c
YRToggle	vimfiles/bundle/yankring/plugin/yankring.vim	/^function! s:YRToggle(...)$/;"	f
YRWarningMsg	vimfiles/bundle/yankring/plugin/yankring.vim	/^function! s:YRWarningMsg(msg)$/;"	f
YRWinLeave	vimfiles/bundle/yankring/plugin/yankring.vim	/^function! s:YRWinLeave()$/;"	f
YRWindowAction	vimfiles/bundle/yankring/plugin/yankring.vim	/^function! s:YRWindowAction(op, cmd_mode) range$/;"	f
YRWindowActionN	vimfiles/bundle/yankring/plugin/yankring.vim	/^function! s:YRWindowActionN(op, cmd_mode) $/;"	f
YRWindowOpen	vimfiles/bundle/yankring/plugin/yankring.vim	/^function! s:YRWindowOpen(results)$/;"	f
YRWindowStatus	vimfiles/bundle/yankring/plugin/yankring.vim	/^function! s:YRWindowStatus(show_help)$/;"	f
YRWindowUpdate	vimfiles/bundle/yankring/plugin/yankring.vim	/^function! s:YRWindowUpdate()$/;"	f
YRYankCount	vimfiles/bundle/yankring/plugin/yankring.vim	/^command! -count -register -nargs=* YRYankCount    call s:YRYankCount(<args>)$/;"	c
YRYankCount	vimfiles/bundle/yankring/plugin/yankring.vim	/^function! s:YRYankCount(...) range$/;"	f
YRYankRange	vimfiles/bundle/yankring/plugin/yankring.vim	/^command! -range -bang     -nargs=? YRYankRange    <line1>,<line2>call s:YRYankRange(<bang>0, <args>)$/;"	c
YRYankRange	vimfiles/bundle/yankring/plugin/yankring.vim	/^function! s:YRYankRange(do_delete_selection, ...) range$/;"	f
YankRing	vimfiles/bundle/yankring/plugin/yankring.vim	/^augroup YankRing$/;"	a
[M	vimfiles/bundle/vim-ruby/ftplugin/ruby.vim	/^  nnoremap <silent> <buffer> [M :<C-U>call <SID>searchsyn('\\<end\\>','rubyDefine','b','n')<CR>$/;"	m
[[	vimfiles/bundle/vim-ruby/ftplugin/ruby.vim	/^  nnoremap <silent> <buffer> [[ :<C-U>call <SID>searchsyn('\\<\\%(class\\<Bar>module\\)\\>','rubyModule\\<Bar>rubyClass','b','n')<CR>$/;"	m
[]	vimfiles/bundle/vim-ruby/bin/vim-ruby-install.rb	/^    def [](path)$/;"	f	class:VimRubyInstaller.BackupDir
[]	vimfiles/bundle/vim-ruby/bin/vim-ruby-install.rb	/^  def [](path)$/;"	f	class:TargetDirectory
[]	vimfiles/bundle/vim-ruby/ftplugin/ruby.vim	/^  nnoremap <silent> <buffer> [] :<C-U>call <SID>searchsyn('\\<end\\>','rubyModule\\<Bar>rubyClass','b','n')<CR>$/;"	m
[m	vimfiles/bundle/vim-ruby/ftplugin/ruby.vim	/^  nnoremap <silent> <buffer> [m :<C-U>call <SID>searchsyn('\\<def\\>','rubyDefine','b','n')<CR>$/;"	m
]M	vimfiles/bundle/vim-ruby/ftplugin/ruby.vim	/^  nnoremap <silent> <buffer> ]M :<C-U>call <SID>searchsyn('\\<end\\>','rubyDefine','','n')<CR>$/;"	m
][	vimfiles/bundle/vim-ruby/ftplugin/ruby.vim	/^  nnoremap <silent> <buffer> ][ :<C-U>call <SID>searchsyn('\\<end\\>','rubyModule\\<Bar>rubyClass','','n')<CR>$/;"	m
]]	vimfiles/bundle/vim-ruby/ftplugin/ruby.vim	/^  nnoremap <silent> <buffer> ]] :<C-U>call <SID>searchsyn('\\<\\%(class\\<Bar>module\\)\\>','rubyModule\\<Bar>rubyClass','','n')<CR>$/;"	m
]m	vimfiles/bundle/vim-ruby/ftplugin/ruby.vim	/^  nnoremap <silent> <buffer> ]m :<C-U>call <SID>searchsyn('\\<def\\>','rubyDefine','','n')<CR>$/;"	m
__anon1::abbrev_len	vimfiles/bundle-disabled/command-t/ruby/command-t/match.c	/^    long    abbrev_len;             \/\/ length of same$/;"	m	struct:__anon1	file:	access:public
__anon1::abbrev_p	vimfiles/bundle-disabled/command-t/ruby/command-t/match.c	/^    char    *abbrev_p;              \/\/ pointer to search string (abbreviation)$/;"	m	struct:__anon1	file:	access:public
__anon1::always_show_dot_files	vimfiles/bundle-disabled/command-t/ruby/command-t/match.c	/^    int     always_show_dot_files;  \/\/ boolean$/;"	m	struct:__anon1	file:	access:public
__anon1::dot_file	vimfiles/bundle-disabled/command-t/ruby/command-t/match.c	/^    int     dot_file;               \/\/ boolean: true if str is a dot-file$/;"	m	struct:__anon1	file:	access:public
__anon1::max_score_per_char	vimfiles/bundle-disabled/command-t/ruby/command-t/match.c	/^    double  max_score_per_char;$/;"	m	struct:__anon1	file:	access:public
__anon1::never_show_dot_files	vimfiles/bundle-disabled/command-t/ruby/command-t/match.c	/^    int     never_show_dot_files;   \/\/ boolean$/;"	m	struct:__anon1	file:	access:public
__anon1::str_len	vimfiles/bundle-disabled/command-t/ruby/command-t/match.c	/^    long    str_len;                \/\/ length of same$/;"	m	struct:__anon1	file:	access:public
__anon1::str_p	vimfiles/bundle-disabled/command-t/ruby/command-t/match.c	/^    char    *str_p;                 \/\/ pointer to string to be searched$/;"	m	struct:__anon1	file:	access:public
__init__	vimfiles/bundle/l9/autoload/l9/async.py	/^    def __init__(self):$/;"	m	class:Asyncer	access:public
__init__	vimfiles/bundle/l9/autoload/l9/async.py	/^    def __init__(self):$/;"	m	class:Worker	access:public
__init__	vimfiles/bundle/l9/autoload/l9/async.py	/^    def __init__(self, command, cwd, input, appends):$/;"	m	class:Executor	access:public
_ensure_directory_exists	vimfiles/bundle/vim-ruby/bin/vim-ruby-install.rb	/^  def _ensure_directory_exists(path)$/;"	f	class:FileWriter
_potential_directories	vimfiles/bundle/vim-ruby/bin/vim-ruby-install.rb	/^  def _potential_directories$/;"	f	class:TargetDirectory
_same_contents?	vimfiles/bundle/vim-ruby/bin/vim-ruby-install.rb	/^  def _same_contents?(p1, p2)$/;"	f	class:VimRubyInstaller
_valid_vim_ruby_dir	vimfiles/bundle/vim-ruby/bin/vim-ruby-install.rb	/^  def Env._valid_vim_ruby_dir(dir)$/;"	F	class:Env
_vim_system_dir	vimfiles/bundle/vim-ruby/bin/vim-ruby-install.rb	/^  def _vim_system_dir$/;"	f	class:TargetDirectory
_vim_user_dir	vimfiles/bundle/vim-ruby/bin/vim-ruby-install.rb	/^  def _vim_user_dir$/;"	f	class:TargetDirectory
`o	vimfiles/bundle/elentok-otherfile/plugin/elentok-otherfile.vim	/^map `o :call OtherFile()<cr>$/;"	m
`p	vimfiles/bundle/elentok-otherfile/plugin/elentok-otherfile.vim	/^map `p :call SwitchBetweenSpecAndSource()<cr>$/;"	m
aM	vimfiles/bundle/vim-ruby/ftplugin/ruby.vim	/^    onoremap <silent> <buffer> aM :<C-U>call <SID>wrap_a('[[','][')<CR>$/;"	m
abbrev_len	vimfiles/bundle-disabled/command-t/ruby/command-t/match.c	/^    long    abbrev_len;             \/\/ length of same$/;"	m	struct:__anon1	file:	access:public
abbrev_p	vimfiles/bundle-disabled/command-t/ruby/command-t/match.c	/^    char    *abbrev_p;              \/\/ pointer to search string (abbreviation)$/;"	m	struct:__anon1	file:	access:public
abbrev_segments	vimfiles/bundle-disabled/command-t/ruby/command-t/prompt.rb	/^    def abbrev_segments$/;"	f	class:CommandT.Prompt
abolish_l	vimfiles/bundle/vim-rails/plugin/rails.vim	/^function! s:abolish_l(word)$/;"	f
abolish_setup	vimfiles/bundle/vim-rails/plugin/rails.vim	/^function! s:abolish_setup()$/;"	f
abolish_t	vimfiles/bundle/vim-rails/plugin/rails.vim	/^function! s:abolish_t(word)$/;"	f
accept_selection	vimfiles/bundle-disabled/command-t/ruby/command-t/controller.rb	/^    def accept_selection options = {}$/;"	f	class:CommandT.Controller
activateFufBuffer	vimfiles/bundle/fuzzyfinder/autoload/fuf.vim	/^function s:activateFufBuffer()$/;"	f
activateNode	vimfiles/bundle-disabled/nerdtree/plugin/NERD_tree.vim	/^function! s:activateNode(forceKeepWindowOpen)$/;"	f
add!	vimfiles/bundle-disabled/command-t/ruby/command-t/match_window.rb	/^    def add! char$/;"	f	class:CommandT.MatchWindow
add!	vimfiles/bundle-disabled/command-t/ruby/command-t/prompt.rb	/^    def add! char$/;"	f	class:CommandT.Prompt
add_methods	vimfiles/bundle/fugitive/plugin/fugitive.vim	/^function! s:add_methods(namespace, method_names) abort$/;"	f
add_methods	vimfiles/bundle/vim-rails/autoload/rails.vim	/^function! s:add_methods(namespace, method_names)$/;"	f
add_paths_for_directory	vimfiles/bundle-disabled/command-t/ruby/command-t/scanner/file_scanner.rb	/^    def add_paths_for_directory dir, accumulator$/;"	f	class:CommandT.FileScanner
addfilecmds	vimfiles/bundle/vim-rails/autoload/rails.vim	/^function! s:addfilecmds(type)$/;"	f
align_matrix	vimfiles/bundle/powerline/fontpatcher/fontpatcher	/^			align_matrix = psMat.translate(0, 0)$/;"	v
align_matrix	vimfiles/bundle/powerline/fontpatcher/fontpatcher	/^			align_matrix = psMat.translate(font_dim['width'] - sym_dim['width'], 0)$/;"	v
align_matrix	vimfiles/bundle/powerline/fontpatcher/fontpatcher	/^			align_matrix = psMat.translate(font_dim['width'] \/ 2 - sym_dim['width'] \/ 2 , 0)$/;"	v
always_show_dot_files	vimfiles/bundle-disabled/command-t/ruby/command-t/match.c	/^    int     always_show_dot_files;  \/\/ boolean$/;"	m	struct:__anon1	file:	access:public
am	vimfiles/bundle/vim-ruby/ftplugin/ruby.vim	/^    onoremap <silent> <buffer> am :<C-U>call <SID>wrap_a('[m',']M')<CR>$/;"	m
app_background_script_command	vimfiles/bundle/vim-rails/autoload/rails.vim	/^function! s:app_background_script_command(cmd) dict abort$/;"	f
app_dbext_settings	vimfiles/bundle/vim-rails/autoload/rails.vim	/^function! s:app_dbext_settings(environment) dict$/;"	f
app_default_locale	vimfiles/bundle/vim-rails/autoload/rails.vim	/^function! s:app_default_locale() dict abort$/;"	f
app_destroy_command	vimfiles/bundle/vim-rails/autoload/rails.vim	/^function! s:app_destroy_command(bang,...) dict$/;"	f
app_environments	vimfiles/bundle/vim-rails/autoload/rails.vim	/^function! s:app_environments() dict$/;"	f
app_eval	vimfiles/bundle/vim-rails/autoload/rails.vim	/^function! s:app_eval(ruby,...) dict abort$/;"	f
app_execute_script_command	vimfiles/bundle/vim-rails/autoload/rails.vim	/^function! s:app_execute_script_command(cmd) dict abort$/;"	f
app_file	vimfiles/bundle/vim-rails/autoload/rails.vim	/^function! s:app_file(name)$/;"	f
app_find_file	vimfiles/bundle/vim-rails/autoload/rails.vim	/^function! s:app_find_file(name, ...) dict abort$/;"	f
app_generate_command	vimfiles/bundle/vim-rails/autoload/rails.vim	/^function! s:app_generate_command(bang,...) dict$/;"	f
app_generators	vimfiles/bundle/vim-rails/autoload/rails.vim	/^function! s:app_generators() dict$/;"	f
app_has	vimfiles/bundle/vim-rails/autoload/rails.vim	/^function! s:app_has(feature) dict$/;"	f
app_has_file	vimfiles/bundle/vim-rails/autoload/rails.vim	/^function! s:app_has_file(file) dict$/;"	f
app_lightweight_ruby_eval	vimfiles/bundle/vim-rails/autoload/rails.vim	/^function! s:app_lightweight_ruby_eval(ruby,...) dict abort$/;"	f
app_migration	vimfiles/bundle/vim-rails/autoload/rails.vim	/^function! s:app_migration(file) dict$/;"	f
app_named_route_file	vimfiles/bundle/vim-rails/autoload/rails.vim	/^function! s:app_named_route_file(route) dict$/;"	f
app_path	vimfiles/bundle/vim-rails/autoload/rails.vim	/^function! s:app_path(...) dict$/;"	f
app_rake_tasks	vimfiles/bundle/vim-rails/autoload/rails.vim	/^function! s:app_rake_tasks() dict$/;"	f
app_relglob	vimfiles/bundle/vim-rails/autoload/rails.vim	/^function! s:app_relglob(path,glob,...) dict$/;"	f
app_route_names	vimfiles/bundle/vim-rails/autoload/rails.vim	/^function! s:app_route_names() dict$/;"	f
app_ruby_shell_command	vimfiles/bundle/vim-rails/autoload/rails.vim	/^function! s:app_ruby_shell_command(cmd) dict abort$/;"	f
app_runner_command	vimfiles/bundle/vim-rails/autoload/rails.vim	/^function! s:app_runner_command(count,args) dict$/;"	f
app_script_command	vimfiles/bundle/vim-rails/autoload/rails.vim	/^function! s:app_script_command(bang,...) dict$/;"	f
app_script_shell_command	vimfiles/bundle/vim-rails/autoload/rails.vim	/^function! s:app_script_shell_command(cmd) dict abort$/;"	f
app_server_command	vimfiles/bundle/vim-rails/autoload/rails.vim	/^function! s:app_server_command(bang,arg) dict$/;"	f
app_source_callback	vimfiles/bundle/vim-rails/autoload/rails.vim	/^function! s:app_source_callback(file) dict$/;"	f
app_tags_command	vimfiles/bundle/vim-rails/autoload/rails.vim	/^function! s:app_tags_command() dict$/;"	f
app_test_suites	vimfiles/bundle/vim-rails/autoload/rails.vim	/^function! s:app_test_suites() dict$/;"	f
app_user_assertions	vimfiles/bundle/vim-rails/autoload/rails.vim	/^function! s:app_user_assertions() dict$/;"	f
app_user_classes	vimfiles/bundle/vim-rails/autoload/rails.vim	/^function! s:app_user_classes() dict$/;"	f
arch	vimfiles/bundle-disabled/command-t/ruby/command-t/Makefile	/^arch = i386-mingw32$/;"	m
archdir	vimfiles/bundle-disabled/command-t/ruby/command-t/Makefile	/^archdir = $(rubylibdir)\/$(arch)$/;"	m
archflag	vimfiles/bundle-disabled/command-t/ruby/command-t/Makefile	/^archflag = $/;"	m
args	vimfiles/bundle/powerline/fontpatcher/fontpatcher	/^args = parser.parse_args()$/;"	v
ask_user	vimfiles/bundle/vim-ruby/bin/vim-ruby-install.rb	/^  def Env.ask_user(message)$/;"	F	class:Env
autocamelize	vimfiles/bundle/vim-rails/autoload/rails.vim	/^function! s:autocamelize(files,test)$/;"	f
autoload	vimfiles/bundle/vim-rails/plugin/rails.vim	/^function! s:autoload(...)$/;"	f
b:browsefilter	vimfiles/bundle/jade/ftplugin/jade.vim	/^  let b:browsefilter="Jade Files (*.jade)\\t*.jade\\n" . s:browsefilter$/;"	v
b:browsefilter	vimfiles/bundle/vim-ruby/ftplugin/eruby.vim	/^  let b:browsefilter="eRuby Files (*.erb, *.rhtml)\\t*.erb;*.rhtml\\n" . s:browsefilter$/;"	v
b:browsefilter	vimfiles/bundle/vim-ruby/ftplugin/ruby.vim	/^  let b:browsefilter = "Ruby Source Files (*.rb)\\t*.rb\\n" .$/;"	v
b:current_syntax	vimfiles/bundle/coffeescript/syntax/coffee.vim	/^  let b:current_syntax = 'coffee'$/;"	v
b:current_syntax	vimfiles/bundle/coffeescript/syntax/eco.vim	/^let b:current_syntax = 'eco'$/;"	v
b:current_syntax	vimfiles/bundle/jade/syntax/jade.vim	/^let b:current_syntax = "jade"$/;"	v
b:current_syntax	vimfiles/bundle/vim-javascript/syntax/javascript.vim	/^let b:current_syntax = "javascript"$/;"	v
b:current_syntax	vimfiles/bundle/vim-ruby/syntax/eruby.vim	/^let b:current_syntax = 'eruby'$/;"	v
b:current_syntax	vimfiles/bundle/vim-ruby/syntax/ruby.vim	/^let b:current_syntax = "ruby"$/;"	v
b:did_ftplugin	vimfiles/bundle/coffeescript/ftplugin/coffee.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	vimfiles/bundle/vim-ruby/ftplugin/eruby.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	vimfiles/bundle/vim-ruby/ftplugin/ruby.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_indent	vimfiles/bundle/coffeescript/indent/coffee.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	vimfiles/bundle/jade/indent/jade.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	vimfiles/bundle/vim-javascript/indent/javascript.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	vimfiles/bundle/vim-ruby/indent/eruby.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	vimfiles/bundle/vim-ruby/indent/ruby.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	vimfiles/bundle/vim-yaml/after/ftplugin/yaml.vim	/^let b:did_indent = 1$/;"	v
b:eco_subtype	vimfiles/bundle/coffeescript/syntax/eco.vim	/^      let b:eco_subtype = b:current_syntax$/;"	v
b:eco_subtype	vimfiles/bundle/coffeescript/syntax/eco.vim	/^      let b:eco_subtype = g:eco_default_subtype$/;"	v
b:eco_subtype	vimfiles/bundle/coffeescript/syntax/eco.vim	/^    let b:eco_subtype = 'html'$/;"	v
b:eco_subtype	vimfiles/bundle/coffeescript/syntax/eco.vim	/^    let b:eco_subtype = 'javascript'$/;"	v
b:eco_subtype	vimfiles/bundle/coffeescript/syntax/eco.vim	/^    let b:eco_subtype = 'ruby'$/;"	v
b:eco_subtype	vimfiles/bundle/coffeescript/syntax/eco.vim	/^    let b:eco_subtype = 'text'$/;"	v
b:eco_subtype	vimfiles/bundle/coffeescript/syntax/eco.vim	/^    let b:eco_subtype = 'yaml'$/;"	v
b:eco_subtype	vimfiles/bundle/coffeescript/syntax/eco.vim	/^    let b:eco_subtype = matchstr(substitute(expand("%:t"),'\\c\\%(\\.eco\\)\\+$','',''),'\\.\\zs\\w\\+$')$/;"	v
b:eco_subtype	vimfiles/bundle/coffeescript/syntax/eco.vim	/^  let b:eco_subtype = matchstr(s:lines,'eco_subtype=\\zs\\w\\+')$/;"	v
b:eruby_nest_level	vimfiles/bundle/vim-ruby/syntax/eruby.vim	/^  let b:eruby_nest_level = 1$/;"	v
b:eruby_nest_level	vimfiles/bundle/vim-ruby/syntax/eruby.vim	/^  let b:eruby_nest_level = strlen(substitute(substitute(substitute(expand("%:t"),'@','','g'),'\\c\\.\\%(erb\\|rhtml\\)\\>','@','g'),'[^@]','','g'))$/;"	v
b:eruby_subtype	vimfiles/bundle/vim-ruby/ftplugin/eruby.vim	/^    let b:eruby_subtype = 'html'$/;"	v
b:eruby_subtype	vimfiles/bundle/vim-ruby/ftplugin/eruby.vim	/^    let b:eruby_subtype = 'javascript'$/;"	v
b:eruby_subtype	vimfiles/bundle/vim-ruby/ftplugin/eruby.vim	/^    let b:eruby_subtype = 'ruby'$/;"	v
b:eruby_subtype	vimfiles/bundle/vim-ruby/ftplugin/eruby.vim	/^    let b:eruby_subtype = 'text'$/;"	v
b:eruby_subtype	vimfiles/bundle/vim-ruby/ftplugin/eruby.vim	/^    let b:eruby_subtype = 'yaml'$/;"	v
b:eruby_subtype	vimfiles/bundle/vim-ruby/ftplugin/eruby.vim	/^    let b:eruby_subtype = g:eruby_default_subtype$/;"	v
b:eruby_subtype	vimfiles/bundle/vim-ruby/ftplugin/eruby.vim	/^    let b:eruby_subtype = matchstr(substitute(expand("%:t"),'\\c\\%(\\.erb\\|\\.eruby\\|\\.erubis\\)\\+$','',''),'\\.\\zs\\w\\+$')$/;"	v
b:eruby_subtype	vimfiles/bundle/vim-ruby/ftplugin/eruby.vim	/^  let b:eruby_subtype = matchstr(&filetype,'^eruby\\.\\zs\\w\\+')$/;"	v
b:eruby_subtype	vimfiles/bundle/vim-ruby/ftplugin/eruby.vim	/^  let b:eruby_subtype = matchstr(s:lines,'eruby_subtype=\\zs\\w\\+')$/;"	v
b:eruby_subtype	vimfiles/bundle/vim-ruby/syntax/eruby.vim	/^    let b:eruby_subtype = 'html'$/;"	v
b:eruby_subtype	vimfiles/bundle/vim-ruby/syntax/eruby.vim	/^    let b:eruby_subtype = 'javascript'$/;"	v
b:eruby_subtype	vimfiles/bundle/vim-ruby/syntax/eruby.vim	/^    let b:eruby_subtype = 'ruby'$/;"	v
b:eruby_subtype	vimfiles/bundle/vim-ruby/syntax/eruby.vim	/^    let b:eruby_subtype = 'text'$/;"	v
b:eruby_subtype	vimfiles/bundle/vim-ruby/syntax/eruby.vim	/^    let b:eruby_subtype = 'yaml'$/;"	v
b:eruby_subtype	vimfiles/bundle/vim-ruby/syntax/eruby.vim	/^    let b:eruby_subtype = g:eruby_default_subtype$/;"	v
b:eruby_subtype	vimfiles/bundle/vim-ruby/syntax/eruby.vim	/^    let b:eruby_subtype = matchstr(substitute(expand("%:t"),'\\c\\%(\\.erb\\|\\.eruby\\|\\.erubis\\)\\+$','',''),'\\.\\zs\\w\\+$')$/;"	v
b:eruby_subtype	vimfiles/bundle/vim-ruby/syntax/eruby.vim	/^  let b:eruby_subtype = matchstr(&filetype,'^eruby\\.\\zs\\w\\+')$/;"	v
b:eruby_subtype	vimfiles/bundle/vim-ruby/syntax/eruby.vim	/^  let b:eruby_subtype = matchstr(s:lines,'eruby_subtype=\\zs\\w\\+')$/;"	v
b:eruby_subtype_indentexpr	vimfiles/bundle/vim-ruby/indent/eruby.vim	/^let b:eruby_subtype_indentexpr = &l:indentexpr$/;"	v
b:javascript_fold	vimfiles/bundle/vim-javascript/syntax/javascript.vim	/^let b:javascript_fold='true'$/;"	v
b:match_ignorecase	vimfiles/bundle/vim-ruby/ftplugin/ruby.vim	/^  let b:match_ignorecase = 0$/;"	v
b:match_skip	vimfiles/bundle/vim-ruby/ftplugin/ruby.vim	/^  let b:match_skip =$/;"	v
b:match_words	vimfiles/bundle/jade/ftplugin/jade.vim	/^  let b:match_words = s:match_words$/;"	v
b:match_words	vimfiles/bundle/vim-ruby/ftplugin/eruby.vim	/^  let b:match_words = s:match_words$/;"	v
b:match_words	vimfiles/bundle/vim-ruby/ftplugin/ruby.vim	/^  let b:match_words =$/;"	v
b:ruby_no_expensive	vimfiles/bundle/vim-ruby/syntax/ruby.vim	/^  let b:ruby_no_expensive = 1$/;"	v
b:undo_ftplugin	vimfiles/bundle/jade/ftplugin/jade.vim	/^let b:undo_ftplugin = "setl cms< com< "$/;"	v
b:undo_ftplugin	vimfiles/bundle/vim-ruby/ftplugin/eruby.vim	/^let b:undo_ftplugin = "setl cms< "$/;"	v
b:undo_ftplugin	vimfiles/bundle/vim-ruby/ftplugin/ruby.vim	/^    let b:undo_ftplugin = b:undo_ftplugin$/;"	v
b:undo_ftplugin	vimfiles/bundle/vim-ruby/ftplugin/ruby.vim	/^  let b:undo_ftplugin = b:undo_ftplugin$/;"	v
b:undo_ftplugin	vimfiles/bundle/vim-ruby/ftplugin/ruby.vim	/^let b:undo_ftplugin = "setl fo< inc< inex< sua< def< com< cms< path< tags< kp<"$/;"	v
backspace	vimfiles/bundle-disabled/command-t/ruby/command-t/controller.rb	/^    def backspace$/;"	f	class:CommandT.Controller
backspace!	vimfiles/bundle-disabled/command-t/ruby/command-t/match_window.rb	/^    def backspace!$/;"	f	class:CommandT.MatchWindow
backspace!	vimfiles/bundle-disabled/command-t/ruby/command-t/prompt.rb	/^    def backspace!$/;"	f	class:CommandT.Prompt
backup	vimfiles/bundle/vim-ruby/bin/vim-ruby-install.rb	/^    def backup(basedir, path)$/;"	f	class:VimRubyInstaller.BackupDir
bindMappings	vimfiles/bundle-disabled/nerdtree/plugin/NERD_tree.vim	/^function! s:bindMappings()$/;"	f
bindir	vimfiles/bundle-disabled/command-t/ruby/command-t/Makefile	/^bindir = $(exec_prefix)\/bin$/;"	m
bookmark	vimfiles/bundle/fuzzyfinder/autoload/fuf/bookmarkdir.vim	/^function s:bookmark(word)$/;"	f
bookmarkHere	vimfiles/bundle/fuzzyfinder/autoload/fuf/bookmarkfile.vim	/^function s:bookmarkHere(word)$/;"	f
bookmarkNode	vimfiles/bundle-disabled/nerdtree/plugin/NERD_tree.vim	/^function! s:bookmarkNode(name)$/;"	f
bufInWindows	vimfiles/bundle-disabled/nerdtree/plugin/NERD_tree.vim	/^function! s:bufInWindows(bnum)$/;"	f
buffer	vimfiles/bundle/fugitive/plugin/fugitive.vim	/^function! s:buffer(...) abort$/;"	f
buffer_app	vimfiles/bundle/vim-rails/autoload/rails.vim	/^function! s:buffer_app() dict abort$/;"	f
buffer_commit	vimfiles/bundle/fugitive/plugin/fugitive.vim	/^function! s:buffer_commit() dict abort$/;"	f
buffer_compare_age	vimfiles/bundle/fugitive/plugin/fugitive.vim	/^function! s:buffer_compare_age(commit) dict abort$/;"	f
buffer_containing_commit	vimfiles/bundle/fugitive/plugin/fugitive.vim	/^function! s:buffer_containing_commit() dict abort$/;"	f
buffer_expand	vimfiles/bundle/fugitive/plugin/fugitive.vim	/^function! s:buffer_expand(rev) dict abort$/;"	f
buffer_getline	vimfiles/bundle/fugitive/plugin/fugitive.vim	/^function! s:buffer_getline(lnum) dict abort$/;"	f
buffer_getline	vimfiles/bundle/vim-rails/autoload/rails.vim	/^function! s:buffer_getline(...) dict abort$/;"	f
buffer_getvar	vimfiles/bundle/fugitive/plugin/fugitive.vim	/^function! s:buffer_getvar(var) dict abort$/;"	f
buffer_getvar	vimfiles/bundle/vim-rails/autoload/rails.vim	/^function! s:buffer_getvar(varname) dict abort$/;"	f
buffer_lines	vimfiles/bundle/vim-rails/autoload/rails.vim	/^function! s:buffer_lines() dict abort$/;"	f
buffer_name	vimfiles/bundle/fugitive/plugin/fugitive.vim	/^function! s:buffer_name() dict abort$/;"	f
buffer_name	vimfiles/bundle/vim-rails/autoload/rails.vim	/^function! s:buffer_name() dict abort$/;"	f
buffer_number	vimfiles/bundle/vim-rails/autoload/rails.vim	/^function! s:buffer_number() dict abort$/;"	f
buffer_path	vimfiles/bundle/fugitive/plugin/fugitive.vim	/^function! s:buffer_path(...) dict abort$/;"	f
buffer_path	vimfiles/bundle/vim-rails/autoload/rails.vim	/^function! s:buffer_path() dict abort$/;"	f
buffer_repo	vimfiles/bundle/fugitive/plugin/fugitive.vim	/^function! s:buffer_repo() dict abort$/;"	f
buffer_rev	vimfiles/bundle/fugitive/plugin/fugitive.vim	/^function! s:buffer_rev() dict abort$/;"	f
buffer_setvar	vimfiles/bundle/fugitive/plugin/fugitive.vim	/^function! s:buffer_setvar(var,value) dict abort$/;"	f
buffer_setvar	vimfiles/bundle/vim-rails/autoload/rails.vim	/^function! s:buffer_setvar(varname, val) dict abort$/;"	f
buffer_sha1	vimfiles/bundle/fugitive/plugin/fugitive.vim	/^function! s:buffer_sha1() dict abort$/;"	f
buffer_spec	vimfiles/bundle/fugitive/plugin/fugitive.vim	/^  function! s:buffer_spec() dict abort$/;"	f
buffer_type	vimfiles/bundle/fugitive/plugin/fugitive.vim	/^function! s:buffer_type(...) dict abort$/;"	f
buffer_type_name	vimfiles/bundle/vim-rails/autoload/rails.vim	/^function! s:buffer_type_name(...) dict abort$/;"	f
cCommandTMatch	vimfiles/bundle-disabled/command-t/ruby/command-t/ext.c	/^VALUE cCommandTMatch    = 0; \/\/ class CommandT::Match$/;"	v
cCommandTMatcher	vimfiles/bundle-disabled/command-t/ruby/command-t/ext.c	/^VALUE cCommandTMatcher  = 0; \/\/ class CommandT::Matcher$/;"	v
cache_clear	vimfiles/bundle/vim-rails/autoload/rails.vim	/^function! s:cache_clear(...) dict$/;"	f
cache_get	vimfiles/bundle/vim-rails/autoload/rails.vim	/^function! s:cache_get(...) dict$/;"	f
cache_has	vimfiles/bundle/vim-rails/autoload/rails.vim	/^function! s:cache_has(key) dict$/;"	f
cache_needs	vimfiles/bundle/vim-rails/autoload/rails.vim	/^function! s:cache_needs(key) dict$/;"	f
cache_set	vimfiles/bundle/vim-rails/autoload/rails.vim	/^function! s:cache_set(key,value) dict$/;"	f
cancel	vimfiles/bundle-disabled/command-t/ruby/command-t/controller.rb	/^    def cancel$/;"	f	class:CommandT.Controller
centerView	vimfiles/bundle-disabled/nerdtree/plugin/NERD_tree.vim	/^function! s:centerView()$/;"	f
chCwd	vimfiles/bundle-disabled/nerdtree/plugin/NERD_tree.vim	/^function! s:chCwd()$/;"	f
chRoot	vimfiles/bundle-disabled/nerdtree/plugin/NERD_tree.vim	/^function! s:chRoot()$/;"	f
changeCoverage	vimfiles/bundle/fuzzyfinder/autoload/fuf/coveragefile.vim	/^function s:changeCoverage(name)$/;"	f
checkDataFileCompatibility	vimfiles/bundle/fuzzyfinder/autoload/fuf.vim	/^function s:checkDataFileCompatibility()$/;"	f
checkForActivate	vimfiles/bundle-disabled/nerdtree/plugin/NERD_tree.vim	/^function! s:checkForActivate()$/;"	f
checkForBrowse	vimfiles/bundle-disabled/nerdtree/plugin/NERD_tree.vim	/^function! s:checkForBrowse(dir)$/;"	f
checkKey	vimfiles/bundle/l9/autoload/l9/async.vim	/^function s:checkKey(key)$/;"	f
clear	vimfiles/bundle-disabled/command-t/ruby/command-t/controller.rb	/^    def clear$/;"	f	class:CommandT.Controller
clear	vimfiles/bundle-disabled/command-t/ruby/command-t/match_window.rb	/^    def clear$/;"	f	class:CommandT.MatchWindow
clear!	vimfiles/bundle-disabled/command-t/ruby/command-t/prompt.rb	/^    def clear!$/;"	f	class:CommandT.Prompt
clearBookmarks	vimfiles/bundle-disabled/nerdtree/plugin/NERD_tree.vim	/^function! s:clearBookmarks(bookmarks)$/;"	f
clear_outputs	vimfiles/bundle/l9/autoload/l9/async.py	/^    def clear_outputs(self):$/;"	m	class:Worker	access:public
close	vimfiles/bundle-disabled/command-t/ruby/command-t/match_window.rb	/^    def close$/;"	f	class:CommandT.MatchWindow
closeChildren	vimfiles/bundle-disabled/nerdtree/plugin/NERD_tree.vim	/^function! s:closeChildren()$/;"	f
closeCurrentDir	vimfiles/bundle-disabled/nerdtree/plugin/NERD_tree.vim	/^function! s:closeCurrentDir()$/;"	f
closeTree	vimfiles/bundle-disabled/nerdtree/plugin/NERD_tree.vim	/^function! s:closeTree()$/;"	f
closeTreeIfOpen	vimfiles/bundle-disabled/nerdtree/plugin/NERD_tree.vim	/^function! s:closeTreeIfOpen()$/;"	f
closeTreeIfQuitOnOpen	vimfiles/bundle-disabled/nerdtree/plugin/NERD_tree.vim	/^function! s:closeTreeIfQuitOnOpen()$/;"	f
closeTreeWindow	vimfiles/bundle-disabled/nerdtree/plugin/NERD_tree.vim	/^function! s:closeTreeWindow()$/;"	f
coffee_make_options	vimfiles/bundle/coffeescript/compiler/coffee.vim	/^  let coffee_make_options = ""$/;"	v
colors_name	vimfiles/colors/wombat.vim	/^let colors_name = "wombat"$/;"	v
command	vimfiles/bundle/fugitive/plugin/fugitive.vim	/^function! s:command(definition) abort$/;"	f
comp_alpha	vimfiles/bundle-disabled/command-t/ruby/command-t/matcher.c	/^int comp_alpha(const void *a, const void *b)$/;"	f	signature:(const void *a, const void *b)
comp_score	vimfiles/bundle-disabled/command-t/ruby/command-t/matcher.c	/^int comp_score(const void *a, const void *b)$/;"	f	signature:(const void *a, const void *b)
compact	vimfiles/bundle/vim-rails/autoload/rails.vim	/^function! s:compact(ary)$/;"	f
compareBookmarks	vimfiles/bundle-disabled/nerdtree/plugin/NERD_tree.vim	/^function! s:compareBookmarks(first, second)$/;"	f
compareNodes	vimfiles/bundle-disabled/nerdtree/plugin/NERD_tree.vim	/^function! s:compareNodes(n1, n2)$/;"	f
compareTimeDescending	vimfiles/bundle/fuzzyfinder/autoload/fuf/buffer.vim	/^function s:compareTimeDescending(i1, i2)$/;"	f
compatibility_check	vimfiles/bundle/fugitive/plugin/fugitive.vim	/^function! s:compatibility_check()$/;"	f
completeBookmarks	vimfiles/bundle-disabled/nerdtree/plugin/NERD_tree.vim	/^function! s:completeBookmarks(A,L,P)$/;"	f
completion_filter	vimfiles/bundle/vim-rails/autoload/rails.vim	/^function! s:completion_filter(results,A)$/;"	f
contents	vimfiles/bundle/vim-ruby/bin/vim-ruby-install.rb	/^    def contents$/;"	f	class:VimRubyInstaller.BackupDir
controller	vimfiles/bundle/vim-rails/autoload/rails.vim	/^function! s:controller(...)$/;"	f
controllerEdit	vimfiles/bundle/vim-rails/autoload/rails.vim	/^function! s:controllerEdit(cmd,...)$/;"	f
controllerList	vimfiles/bundle/vim-rails/autoload/rails.vim	/^function! s:controllerList(A,L,P)$/;"	f
copy	vimfiles/bundle/vim-ruby/bin/vim-ruby-install.rb	/^  def copy(path)$/;"	f	class:TargetDirectory
copy	vimfiles/bundle/vim-ruby/bin/vim-ruby-install.rb	/^  def copy(source_path, target_path)$/;"	f	class:FileWriter
copy_outputs	vimfiles/bundle/l9/autoload/l9/async.py	/^    def copy_outputs(self):$/;"	m	class:Worker	access:public
createChangeCoverageListener	vimfiles/bundle/fuzzyfinder/autoload/fuf/coveragefile.vim	/^function s:createChangeCoverageListener()$/;"	f
createDataBufferListener	vimfiles/bundle/fuzzyfinder/autoload/fuf.vim	/^function s:createDataBufferListener(dataFile)$/;"	f
createEditDataListener	vimfiles/bundle/fuzzyfinder/autoload/fuf.vim	/^function s:createEditDataListener()$/;"	f
createTreeWin	vimfiles/bundle-disabled/nerdtree/plugin/NERD_tree.vim	/^function! s:createTreeWin()$/;"	f
current_compiler	vimfiles/bundle/coffeescript/compiler/coffee.vim	/^let current_compiler = 'coffee'$/;"	v
current_compiler	vimfiles/bundle/vim-ruby/compiler/eruby.vim	/^let current_compiler = "eruby"$/;"	v
current_compiler	vimfiles/bundle/vim-ruby/compiler/rspec.vim	/^let current_compiler = "rspec"$/;"	v
current_compiler	vimfiles/bundle/vim-ruby/compiler/ruby.vim	/^let current_compiler = "ruby"$/;"	v
current_compiler	vimfiles/bundle/vim-ruby/compiler/rubyunit.vim	/^let current_compiler = "rubyunit"$/;"	v
cursor_end	vimfiles/bundle-disabled/command-t/ruby/command-t/controller.rb	/^    def cursor_end$/;"	f	class:CommandT.Controller
cursor_end	vimfiles/bundle-disabled/command-t/ruby/command-t/prompt.rb	/^    def cursor_end$/;"	f	class:CommandT.Prompt
cursor_left	vimfiles/bundle-disabled/command-t/ruby/command-t/controller.rb	/^    def cursor_left$/;"	f	class:CommandT.Controller
cursor_left	vimfiles/bundle-disabled/command-t/ruby/command-t/prompt.rb	/^    def cursor_left$/;"	f	class:CommandT.Prompt
cursor_right	vimfiles/bundle-disabled/command-t/ruby/command-t/controller.rb	/^    def cursor_right$/;"	f	class:CommandT.Controller
cursor_right	vimfiles/bundle-disabled/command-t/ruby/command-t/prompt.rb	/^    def cursor_right$/;"	f	class:CommandT.Prompt
cursor_start	vimfiles/bundle-disabled/command-t/ruby/command-t/controller.rb	/^    def cursor_start$/;"	f	class:CommandT.Controller
cursor_start	vimfiles/bundle-disabled/command-t/ruby/command-t/prompt.rb	/^    def cursor_start$/;"	f	class:CommandT.Prompt
datadir	vimfiles/bundle-disabled/command-t/ruby/command-t/Makefile	/^datadir = $(datarootdir)$/;"	m
datarootdir	vimfiles/bundle-disabled/command-t/ruby/command-t/Makefile	/^datarootdir = $(prefix)\/share$/;"	m
deactivateFufBuffer	vimfiles/bundle/fuzzyfinder/autoload/fuf.vim	/^function s:deactivateFufBuffer()$/;"	f
debug	vimfiles/bundle/vim-rails/autoload/rails.vim	/^function! s:debug(str)$/;"	f
default_open_command	vimfiles/bundle-disabled/command-t/ruby/command-t/controller.rb	/^    def default_open_command$/;"	f	class:CommandT.Controller
define_commands	vimfiles/bundle/fugitive/plugin/fugitive.vim	/^function! s:define_commands()$/;"	f
delete	vimfiles/bundle-disabled/command-t/ruby/command-t/controller.rb	/^    def delete$/;"	f	class:CommandT.Controller
delete!	vimfiles/bundle-disabled/command-t/ruby/command-t/prompt.rb	/^    def delete!$/;"	f	class:CommandT.Prompt
deleteBookmark	vimfiles/bundle-disabled/nerdtree/plugin/NERD_tree.vim	/^function! s:deleteBookmark()$/;"	f
determine_home_dir	vimfiles/bundle/vim-ruby/bin/vim-ruby-install.rb	/^  def Env.determine_home_dir$/;"	F	class:Env
determine_source_directory	vimfiles/bundle/vim-ruby/bin/vim-ruby-install.rb	/^  def Env.determine_source_directory$/;"	F	class:Env
determine_target_os	vimfiles/bundle/vim-ruby/bin/vim-ruby-install.rb	/^  def Env.determine_target_os$/;"	F	class:Env
determine_vim_dir	vimfiles/bundle/vim-ruby/bin/vim-ruby-install.rb	/^  def Env.determine_vim_dir$/;"	F	class:Env
did_javascript_syn_inits	vimfiles/bundle/vim-javascript/syntax/javascript.vim	/^    let did_javascript_syn_inits = 1$/;"	v
diff_window_count	vimfiles/bundle/fugitive/plugin/fugitive.vim	/^function! s:diff_window_count()$/;"	f
diffoff	vimfiles/bundle/fugitive/plugin/fugitive.vim	/^function! s:diffoff()$/;"	f
diffoff_all	vimfiles/bundle/fugitive/plugin/fugitive.vim	/^function! s:diffoff_all(dir)$/;"	f
diffthis	vimfiles/bundle/fugitive/plugin/fugitive.vim	/^function! s:diffthis()$/;"	f
displayHelp	vimfiles/bundle-disabled/nerdtree/plugin/NERD_tree.vim	/^function! s:displayHelp()$/;"	f
dispose	vimfiles/bundle-disabled/command-t/ruby/command-t/prompt.rb	/^    def dispose$/;"	f	class:CommandT.Prompt
djump	vimfiles/bundle/vim-rails/autoload/rails.vim	/^function! s:djump(def)$/;"	f
dldflags	vimfiles/bundle-disabled/command-t/ruby/command-t/Makefile	/^dldflags =  -Wl,--enable-auto-image-base,--enable-auto-import,--export-all$/;"	m
docdir	vimfiles/bundle-disabled/command-t/ruby/command-t/Makefile	/^docdir = $(datarootdir)\/doc\/$(PACKAGE)$/;"	m
dot_file	vimfiles/bundle-disabled/command-t/ruby/command-t/match.c	/^    int     dot_file;               \/\/ boolean: true if str is a dot-file$/;"	m	struct:__anon1	file:	access:public
dprint	vimfiles/bundle/vim-ruby/autoload/rubycomplete.vim	/^function! s:dprint(msg)$/;"	f
dumpHelp	vimfiles/bundle-disabled/nerdtree/plugin/NERD_tree.vim	/^function! s:dumpHelp()$/;"	f
dvidir	vimfiles/bundle-disabled/command-t/ruby/command-t/Makefile	/^dvidir = $(docdir)$/;"	m
echo	vimfiles/bundle-disabled/nerdtree/nerdtree_plugin/fs_menu.vim	/^function! s:echo(msg)$/;"	f
echo	vimfiles/bundle-disabled/nerdtree/plugin/NERD_tree.vim	/^function! s:echo(msg)$/;"	f
echoError	vimfiles/bundle-disabled/nerdtree/plugin/NERD_tree.vim	/^function! s:echoError(msg)$/;"	f
echoWarning	vimfiles/bundle-disabled/nerdtree/nerdtree_plugin/fs_menu.vim	/^function! s:echoWarning(msg)$/;"	f
echoWarning	vimfiles/bundle-disabled/nerdtree/plugin/NERD_tree.vim	/^function! s:echoWarning(msg)$/;"	f
edit	vimfiles/bundle/vim-rails/autoload/rails.vim	/^function! s:edit(cmd,file,...)$/;"	f
editcmdfor	vimfiles/bundle/vim-rails/autoload/rails.vim	/^function! s:editcmdfor(cmd)$/;"	f
endof	vimfiles/bundle/vim-rails/autoload/rails.vim	/^function! s:endof(lnum)$/;"	f
ensure_appropriate_window_selection	vimfiles/bundle-disabled/command-t/ruby/command-t/controller.rb	/^    def ensure_appropriate_window_selection$/;"	f	class:CommandT.Controller
enumHelpTags	vimfiles/bundle/fuzzyfinder/autoload/fuf/help.vim	/^function s:enumHelpTags(tagFiles)$/;"	f
enumItems	vimfiles/bundle/fuzzyfinder/autoload/fuf/callbackfile.vim	/^function s:enumItems(dir)$/;"	f
enumItems	vimfiles/bundle/fuzzyfinder/autoload/fuf/coveragefile.vim	/^function s:enumItems()$/;"	f
enumItems	vimfiles/bundle/fuzzyfinder/autoload/fuf/dir.vim	/^function s:enumItems(dir)$/;"	f
enumItems	vimfiles/bundle/fuzzyfinder/autoload/fuf/file.vim	/^function s:enumItems(dir)$/;"	f
enumNonCurrentItems	vimfiles/bundle/fuzzyfinder/autoload/fuf/file.vim	/^function s:enumNonCurrentItems(dir, bufNrPrev, cache)$/;"	f
enumTaggedFiles	vimfiles/bundle/fuzzyfinder/autoload/fuf/taggedfile.vim	/^function s:enumTaggedFiles(tagFiles)$/;"	f
enumTags	vimfiles/bundle/fuzzyfinder/autoload/fuf/tag.vim	/^function s:enumTags(tagFiles)$/;"	f
environment	vimfiles/bundle/vim-rails/autoload/rails.vim	/^function! s:environment()$/;"	f
environmentEdit	vimfiles/bundle/vim-rails/autoload/rails.vim	/^function! s:environmentEdit(cmd,...)$/;"	f
environmentList	vimfiles/bundle/vim-rails/autoload/rails.vim	/^function! s:environmentList(A,L,P)$/;"	f
error	vimfiles/bundle/vim-rails/autoload/rails.vim	/^function! s:error(str)$/;"	f
error	vimfiles/bundle/vim-rails/plugin/rails.vim	/^function! s:error(str)$/;"	f
error_exit	vimfiles/bundle/vim-ruby/etc/release/cvsrelease	/^function error_exit() {$/;"	f
escape_for_single_quotes	vimfiles/bundle-disabled/command-t/ruby/command-t/vim.rb	/^    def self.escape_for_single_quotes str$/;"	F	class:CommandT.VIM
escarg	vimfiles/bundle/vim-rails/autoload/rails.vim	/^function! s:escarg(p)$/;"	f
esccmd	vimfiles/bundle/vim-rails/autoload/rails.vim	/^function! s:esccmd(p)$/;"	f
escvar	vimfiles/bundle/vim-rails/plugin/rails.vim	/^function! s:escvar(r)$/;"	f
evaluateLearningRank	vimfiles/bundle/fuzzyfinder/autoload/fuf.vim	/^function s:evaluateLearningRank(word, stats)$/;"	f
exec	vimfiles/bundle-disabled/nerdtree/plugin/NERD_tree.vim	/^function! s:exec(cmd)$/;"	f
exec_prefix	vimfiles/bundle-disabled/command-t/ruby/command-t/Makefile	/^exec_prefix = $(prefix)$/;"	m
execute	vimfiles/bundle/l9/autoload/l9/async.py	/^    def execute(self, var_key, var_command, var_cwd, var_input, var_appends):$/;"	m	class:Asyncer	access:public
execute	vimfiles/bundle/l9/autoload/l9/async.py	/^    def execute(self, worker):$/;"	m	class:Executor	access:public
exists?	vimfiles/bundle-disabled/command-t/ruby/command-t/controller.rb	/^    def exists? name$/;"	f	class:CommandT.Controller
expandAbbrevMap	vimfiles/bundle/fuzzyfinder/autoload/fuf.vim	/^function s:expandAbbrevMap(pattern, abbrevMap)$/;"	f
expandSearchDir	vimfiles/bundle/fuzzyfinder/autoload/fuf/mrufile.vim	/^function s:expandSearchDir(dir, level)$/;"	f
extension	vimfiles/bundle/powerline/fontpatcher/fontpatcher	/^		extension = 'otf'$/;"	v
extout	vimfiles/bundle-disabled/command-t/ruby/command-t/Makefile	/^extout = $/;"	m
extout_prefix	vimfiles/bundle-disabled/command-t/ruby/command-t/Makefile	/^extout_prefix = $/;"	m
extractdbvar	vimfiles/bundle/vim-rails/autoload/rails.vim	/^function! s:extractdbvar(str,arg)$/;"	f
file_getline	vimfiles/bundle/vim-rails/autoload/rails.vim	/^function! s:file_getline(lnum,...) dict abort$/;"	f
file_lines	vimfiles/bundle/vim-rails/autoload/rails.vim	/^function! s:file_lines() dict abort$/;"	f
file_name	vimfiles/bundle/vim-rails/autoload/rails.vim	/^function! s:file_name() dict abort$/;"	f
file_path	vimfiles/bundle/vim-rails/autoload/rails.vim	/^function! s:file_path() dict abort$/;"	f
find	vimfiles/autoload/pathogen.vim	/^function! s:find(count,cmd,file,...) " {{{1$/;"	f
find	vimfiles/bundle-disabled/command-t/ruby/command-t/match_window.rb	/^    def find char$/;"	f	class:CommandT.MatchWindow
findAndRevealPath	vimfiles/bundle-disabled/nerdtree/plugin/NERD_tree.vim	/^function! s:findAndRevealPath()$/;"	f
findItem	vimfiles/bundle/fuzzyfinder/autoload/fuf/bookmarkdir.vim	/^function s:findItem(items, word)$/;"	f
findItem	vimfiles/bundle/fuzzyfinder/autoload/fuf/bookmarkfile.vim	/^function s:findItem(items, word)$/;"	f
findItem	vimfiles/bundle/fuzzyfinder/autoload/fuf/buffer.vim	/^function s:findItem(items, word)$/;"	f
find_target_directory	vimfiles/bundle/vim-ruby/bin/vim-ruby-install.rb	/^  def find_target_directory$/;"	f	class:TargetDirectory
findamethod	vimfiles/bundle/vim-rails/autoload/rails.vim	/^function! s:findamethod(func,repl)$/;"	f
findasymbol	vimfiles/bundle/vim-rails/autoload/rails.vim	/^function! s:findasymbol(sym,repl)$/;"	f
findcmdfor	vimfiles/bundle/vim-rails/autoload/rails.vim	/^function! s:findcmdfor(cmd)$/;"	f
findedit	vimfiles/bundle/vim-rails/autoload/rails.vim	/^function! s:findedit(cmd,files,...) abort$/;"	f
finder	vimfiles/bundle/vim-ruby/bin/vim-ruby-install.rb	/^  def self.finder$/;"	F	class:TargetDirectory
findfromview	vimfiles/bundle/vim-rails/autoload/rails.vim	/^function! s:findfromview(func,repl)$/;"	f
findit	vimfiles/bundle/vim-rails/autoload/rails.vim	/^function! s:findit(pat,repl)$/;"	f
findlayout	vimfiles/bundle/vim-rails/autoload/rails.vim	/^function! s:findlayout(name)$/;"	f
findview	vimfiles/bundle/vim-rails/autoload/rails.vim	/^function! s:findview(name)$/;"	f
firstUsableWindow	vimfiles/bundle-disabled/nerdtree/plugin/NERD_tree.vim	/^function! s:firstUsableWindow()$/;"	f
fixturesEdit	vimfiles/bundle/vim-rails/autoload/rails.vim	/^function! s:fixturesEdit(cmd,...)$/;"	f
fixturesList	vimfiles/bundle/vim-rails/autoload/rails.vim	/^function! s:fixturesList(A,L,P)$/;"	f
flush	vimfiles/bundle-disabled/command-t/ruby/command-t/controller.rb	/^    def flush$/;"	f	class:CommandT.Controller
flush	vimfiles/bundle-disabled/command-t/ruby/command-t/finder.rb	/^    def flush$/;"	f	class:CommandT.Finder
flush	vimfiles/bundle-disabled/command-t/ruby/command-t/scanner/file_scanner.rb	/^    def flush$/;"	f	class:CommandT.FileScanner
flush	vimfiles/bundle-disabled/command-t/ruby/command-t/stub.rb	/^    def flush$/;"	f	class:CommandT.Stub
fnameescape	vimfiles/bundle/fugitive/plugin/fugitive.vim	/^function! s:fnameescape(file) abort$/;"	f
focus	vimfiles/bundle-disabled/command-t/ruby/command-t/match_window.rb	/^    def focus$/;"	f	class:CommandT.MatchWindow
focus	vimfiles/bundle-disabled/command-t/ruby/command-t/prompt.rb	/^    def focus$/;"	f	class:CommandT.Prompt
font	vimfiles/bundle/powerline/fontpatcher/fontpatcher	/^		font = fontforge.open(font_path)$/;"	v
font_dim	vimfiles/bundle/powerline/fontpatcher/fontpatcher	/^	font_dim = {$/;"	v
font_ycenter	vimfiles/bundle/powerline/fontpatcher/fontpatcher	/^		font_ycenter = font_dim['height'] \/ 2$/;"	v
format	vimfiles/bundle/vim-rails/autoload/rails.vim	/^function! s:format(...)$/;"	f
formatItemUsingCache	vimfiles/bundle/fuzzyfinder/autoload/fuf/mrufile.vim	/^function s:formatItemUsingCache(item)$/;"	f
fuf#addMode	vimfiles/bundle/fuzzyfinder/autoload/fuf.vim	/^function fuf#addMode(modeName)$/;"	f
fuf#bookmarkdir#createHandler	vimfiles/bundle/fuzzyfinder/autoload/fuf/bookmarkdir.vim	/^function fuf#bookmarkdir#createHandler(base)$/;"	f
fuf#bookmarkdir#getEditableDataNames	vimfiles/bundle/fuzzyfinder/autoload/fuf/bookmarkdir.vim	/^function fuf#bookmarkdir#getEditableDataNames()$/;"	f
fuf#bookmarkdir#getSwitchOrder	vimfiles/bundle/fuzzyfinder/autoload/fuf/bookmarkdir.vim	/^function fuf#bookmarkdir#getSwitchOrder()$/;"	f
fuf#bookmarkdir#onInit	vimfiles/bundle/fuzzyfinder/autoload/fuf/bookmarkdir.vim	/^function fuf#bookmarkdir#onInit()$/;"	f
fuf#bookmarkdir#renewCache	vimfiles/bundle/fuzzyfinder/autoload/fuf/bookmarkdir.vim	/^function fuf#bookmarkdir#renewCache()$/;"	f
fuf#bookmarkdir#requiresOnCommandPre	vimfiles/bundle/fuzzyfinder/autoload/fuf/bookmarkdir.vim	/^function fuf#bookmarkdir#requiresOnCommandPre()$/;"	f
fuf#bookmarkfile#createHandler	vimfiles/bundle/fuzzyfinder/autoload/fuf/bookmarkfile.vim	/^function fuf#bookmarkfile#createHandler(base)$/;"	f
fuf#bookmarkfile#getEditableDataNames	vimfiles/bundle/fuzzyfinder/autoload/fuf/bookmarkfile.vim	/^function fuf#bookmarkfile#getEditableDataNames()$/;"	f
fuf#bookmarkfile#getSwitchOrder	vimfiles/bundle/fuzzyfinder/autoload/fuf/bookmarkfile.vim	/^function fuf#bookmarkfile#getSwitchOrder()$/;"	f
fuf#bookmarkfile#onInit	vimfiles/bundle/fuzzyfinder/autoload/fuf/bookmarkfile.vim	/^function fuf#bookmarkfile#onInit()$/;"	f
fuf#bookmarkfile#renewCache	vimfiles/bundle/fuzzyfinder/autoload/fuf/bookmarkfile.vim	/^function fuf#bookmarkfile#renewCache()$/;"	f
fuf#bookmarkfile#requiresOnCommandPre	vimfiles/bundle/fuzzyfinder/autoload/fuf/bookmarkfile.vim	/^function fuf#bookmarkfile#requiresOnCommandPre()$/;"	f
fuf#buffer#createHandler	vimfiles/bundle/fuzzyfinder/autoload/fuf/buffer.vim	/^function fuf#buffer#createHandler(base)$/;"	f
fuf#buffer#getEditableDataNames	vimfiles/bundle/fuzzyfinder/autoload/fuf/buffer.vim	/^function fuf#buffer#getEditableDataNames()$/;"	f
fuf#buffer#getSwitchOrder	vimfiles/bundle/fuzzyfinder/autoload/fuf/buffer.vim	/^function fuf#buffer#getSwitchOrder()$/;"	f
fuf#buffer#onInit	vimfiles/bundle/fuzzyfinder/autoload/fuf/buffer.vim	/^function fuf#buffer#onInit()$/;"	f
fuf#buffer#renewCache	vimfiles/bundle/fuzzyfinder/autoload/fuf/buffer.vim	/^function fuf#buffer#renewCache()$/;"	f
fuf#buffer#requiresOnCommandPre	vimfiles/bundle/fuzzyfinder/autoload/fuf/buffer.vim	/^function fuf#buffer#requiresOnCommandPre()$/;"	f
fuf#buffertag#createHandler	vimfiles/bundle/fuzzyfinder/autoload/fuf/buffertag.vim	/^function fuf#buffertag#createHandler(base)$/;"	f
fuf#buffertag#getEditableDataNames	vimfiles/bundle/fuzzyfinder/autoload/fuf/buffertag.vim	/^function fuf#buffertag#getEditableDataNames()$/;"	f
fuf#buffertag#getSwitchOrder	vimfiles/bundle/fuzzyfinder/autoload/fuf/buffertag.vim	/^function fuf#buffertag#getSwitchOrder()$/;"	f
fuf#buffertag#onInit	vimfiles/bundle/fuzzyfinder/autoload/fuf/buffertag.vim	/^function fuf#buffertag#onInit()$/;"	f
fuf#buffertag#renewCache	vimfiles/bundle/fuzzyfinder/autoload/fuf/buffertag.vim	/^function fuf#buffertag#renewCache()$/;"	f
fuf#buffertag#requiresOnCommandPre	vimfiles/bundle/fuzzyfinder/autoload/fuf/buffertag.vim	/^function fuf#buffertag#requiresOnCommandPre()$/;"	f
fuf#callbackfile#createHandler	vimfiles/bundle/fuzzyfinder/autoload/fuf/callbackfile.vim	/^function fuf#callbackfile#createHandler(base)$/;"	f
fuf#callbackfile#getEditableDataNames	vimfiles/bundle/fuzzyfinder/autoload/fuf/callbackfile.vim	/^function fuf#callbackfile#getEditableDataNames()$/;"	f
fuf#callbackfile#getSwitchOrder	vimfiles/bundle/fuzzyfinder/autoload/fuf/callbackfile.vim	/^function fuf#callbackfile#getSwitchOrder()$/;"	f
fuf#callbackfile#launch	vimfiles/bundle/fuzzyfinder/autoload/fuf/callbackfile.vim	/^function fuf#callbackfile#launch(initialPattern, partialMatching, prompt, exclude, listener)$/;"	f
fuf#callbackfile#onInit	vimfiles/bundle/fuzzyfinder/autoload/fuf/callbackfile.vim	/^function fuf#callbackfile#onInit()$/;"	f
fuf#callbackfile#renewCache	vimfiles/bundle/fuzzyfinder/autoload/fuf/callbackfile.vim	/^function fuf#callbackfile#renewCache()$/;"	f
fuf#callbackfile#requiresOnCommandPre	vimfiles/bundle/fuzzyfinder/autoload/fuf/callbackfile.vim	/^function fuf#callbackfile#requiresOnCommandPre()$/;"	f
fuf#callbackitem#createHandler	vimfiles/bundle/fuzzyfinder/autoload/fuf/callbackitem.vim	/^function fuf#callbackitem#createHandler(base)$/;"	f
fuf#callbackitem#getEditableDataNames	vimfiles/bundle/fuzzyfinder/autoload/fuf/callbackitem.vim	/^function fuf#callbackitem#getEditableDataNames()$/;"	f
fuf#callbackitem#getSwitchOrder	vimfiles/bundle/fuzzyfinder/autoload/fuf/callbackitem.vim	/^function fuf#callbackitem#getSwitchOrder()$/;"	f
fuf#callbackitem#launch	vimfiles/bundle/fuzzyfinder/autoload/fuf/callbackitem.vim	/^function fuf#callbackitem#launch(initialPattern, partialMatching, prompt, listener, items, forPath)$/;"	f
fuf#callbackitem#onInit	vimfiles/bundle/fuzzyfinder/autoload/fuf/callbackitem.vim	/^function fuf#callbackitem#onInit()$/;"	f
fuf#callbackitem#renewCache	vimfiles/bundle/fuzzyfinder/autoload/fuf/callbackitem.vim	/^function fuf#callbackitem#renewCache()$/;"	f
fuf#callbackitem#requiresOnCommandPre	vimfiles/bundle/fuzzyfinder/autoload/fuf/callbackitem.vim	/^function fuf#callbackitem#requiresOnCommandPre()$/;"	f
fuf#changelist#createHandler	vimfiles/bundle/fuzzyfinder/autoload/fuf/changelist.vim	/^function fuf#changelist#createHandler(base)$/;"	f
fuf#changelist#getEditableDataNames	vimfiles/bundle/fuzzyfinder/autoload/fuf/changelist.vim	/^function fuf#changelist#getEditableDataNames()$/;"	f
fuf#changelist#getSwitchOrder	vimfiles/bundle/fuzzyfinder/autoload/fuf/changelist.vim	/^function fuf#changelist#getSwitchOrder()$/;"	f
fuf#changelist#onInit	vimfiles/bundle/fuzzyfinder/autoload/fuf/changelist.vim	/^function fuf#changelist#onInit()$/;"	f
fuf#changelist#renewCache	vimfiles/bundle/fuzzyfinder/autoload/fuf/changelist.vim	/^function fuf#changelist#renewCache()$/;"	f
fuf#changelist#requiresOnCommandPre	vimfiles/bundle/fuzzyfinder/autoload/fuf/changelist.vim	/^function fuf#changelist#requiresOnCommandPre()$/;"	f
fuf#compareRanks	vimfiles/bundle/fuzzyfinder/autoload/fuf.vim	/^function fuf#compareRanks(i1, i2)$/;"	f
fuf#countModifiedFiles	vimfiles/bundle/fuzzyfinder/autoload/fuf.vim	/^function fuf#countModifiedFiles(files, time)$/;"	f
fuf#coveragefile#createHandler	vimfiles/bundle/fuzzyfinder/autoload/fuf/coveragefile.vim	/^function fuf#coveragefile#createHandler(base)$/;"	f
fuf#coveragefile#getEditableDataNames	vimfiles/bundle/fuzzyfinder/autoload/fuf/coveragefile.vim	/^function fuf#coveragefile#getEditableDataNames()$/;"	f
fuf#coveragefile#getSwitchOrder	vimfiles/bundle/fuzzyfinder/autoload/fuf/coveragefile.vim	/^function fuf#coveragefile#getSwitchOrder()$/;"	f
fuf#coveragefile#onInit	vimfiles/bundle/fuzzyfinder/autoload/fuf/coveragefile.vim	/^function fuf#coveragefile#onInit()$/;"	f
fuf#coveragefile#renewCache	vimfiles/bundle/fuzzyfinder/autoload/fuf/coveragefile.vim	/^function fuf#coveragefile#renewCache()$/;"	f
fuf#coveragefile#requiresOnCommandPre	vimfiles/bundle/fuzzyfinder/autoload/fuf/coveragefile.vim	/^function fuf#coveragefile#requiresOnCommandPre()$/;"	f
fuf#defineKeyMappingInHandler	vimfiles/bundle/fuzzyfinder/autoload/fuf.vim	/^function fuf#defineKeyMappingInHandler(key, func)$/;"	f
fuf#defineLaunchCommand	vimfiles/bundle/fuzzyfinder/autoload/fuf.vim	/^function fuf#defineLaunchCommand(CmdName, modeName, prefixInitialPattern, tempVars)$/;"	f
fuf#dir#createHandler	vimfiles/bundle/fuzzyfinder/autoload/fuf/dir.vim	/^function fuf#dir#createHandler(base)$/;"	f
fuf#dir#getEditableDataNames	vimfiles/bundle/fuzzyfinder/autoload/fuf/dir.vim	/^function fuf#dir#getEditableDataNames()$/;"	f
fuf#dir#getSwitchOrder	vimfiles/bundle/fuzzyfinder/autoload/fuf/dir.vim	/^function fuf#dir#getSwitchOrder()$/;"	f
fuf#dir#onInit	vimfiles/bundle/fuzzyfinder/autoload/fuf/dir.vim	/^function fuf#dir#onInit()$/;"	f
fuf#dir#renewCache	vimfiles/bundle/fuzzyfinder/autoload/fuf/dir.vim	/^function fuf#dir#renewCache()$/;"	f
fuf#dir#requiresOnCommandPre	vimfiles/bundle/fuzzyfinder/autoload/fuf/dir.vim	/^function fuf#dir#requiresOnCommandPre()$/;"	f
fuf#echoError	vimfiles/bundle/fuzzyfinder/autoload/fuf.vim	/^function fuf#echoError(msg)$/;"	f
fuf#echoWarning	vimfiles/bundle/fuzzyfinder/autoload/fuf.vim	/^function fuf#echoWarning(msg)$/;"	f
fuf#editDataFile	vimfiles/bundle/fuzzyfinder/autoload/fuf.vim	/^function fuf#editDataFile()$/;"	f
fuf#enumExpandedDirsEntries	vimfiles/bundle/fuzzyfinder/autoload/fuf.vim	/^function fuf#enumExpandedDirsEntries(dir, exclude)$/;"	f
fuf#expandTailDotSequenceToParentDir	vimfiles/bundle/fuzzyfinder/autoload/fuf.vim	/^function fuf#expandTailDotSequenceToParentDir(pattern)$/;"	f
fuf#file#createHandler	vimfiles/bundle/fuzzyfinder/autoload/fuf/file.vim	/^function fuf#file#createHandler(base)$/;"	f
fuf#file#getEditableDataNames	vimfiles/bundle/fuzzyfinder/autoload/fuf/file.vim	/^function fuf#file#getEditableDataNames()$/;"	f
fuf#file#getSwitchOrder	vimfiles/bundle/fuzzyfinder/autoload/fuf/file.vim	/^function fuf#file#getSwitchOrder()$/;"	f
fuf#file#onInit	vimfiles/bundle/fuzzyfinder/autoload/fuf/file.vim	/^function fuf#file#onInit()$/;"	f
fuf#file#renewCache	vimfiles/bundle/fuzzyfinder/autoload/fuf/file.vim	/^function fuf#file#renewCache()$/;"	f
fuf#file#requiresOnCommandPre	vimfiles/bundle/fuzzyfinder/autoload/fuf/file.vim	/^function fuf#file#requiresOnCommandPre()$/;"	f
fuf#formatPrompt	vimfiles/bundle/fuzzyfinder/autoload/fuf.vim	/^function fuf#formatPrompt(prompt, partialMatching, otherString)$/;"	f
fuf#getCurrentTagFiles	vimfiles/bundle/fuzzyfinder/autoload/fuf.vim	/^function fuf#getCurrentTagFiles()$/;"	f
fuf#getDataFileTime	vimfiles/bundle/fuzzyfinder/autoload/fuf.vim	/^function fuf#getDataFileTime(modeName, dataName)$/;"	f
fuf#getFileLines	vimfiles/bundle/fuzzyfinder/autoload/fuf.vim	/^function fuf#getFileLines(file)$/;"	f
fuf#getModeNames	vimfiles/bundle/fuzzyfinder/autoload/fuf.vim	/^function fuf#getModeNames()$/;"	f
fuf#getRunningHandler	vimfiles/bundle/fuzzyfinder/autoload/fuf.vim	/^function fuf#getRunningHandler()$/;"	f
fuf#givencmd#createHandler	vimfiles/bundle/fuzzyfinder/autoload/fuf/givencmd.vim	/^function fuf#givencmd#createHandler(base)$/;"	f
fuf#givencmd#getEditableDataNames	vimfiles/bundle/fuzzyfinder/autoload/fuf/givencmd.vim	/^function fuf#givencmd#getEditableDataNames()$/;"	f
fuf#givencmd#getSwitchOrder	vimfiles/bundle/fuzzyfinder/autoload/fuf/givencmd.vim	/^function fuf#givencmd#getSwitchOrder()$/;"	f
fuf#givencmd#launch	vimfiles/bundle/fuzzyfinder/autoload/fuf/givencmd.vim	/^function fuf#givencmd#launch(initialPattern, partialMatching, prompt, items)$/;"	f
fuf#givencmd#onInit	vimfiles/bundle/fuzzyfinder/autoload/fuf/givencmd.vim	/^function fuf#givencmd#onInit()$/;"	f
fuf#givencmd#renewCache	vimfiles/bundle/fuzzyfinder/autoload/fuf/givencmd.vim	/^function fuf#givencmd#renewCache()$/;"	f
fuf#givencmd#requiresOnCommandPre	vimfiles/bundle/fuzzyfinder/autoload/fuf/givencmd.vim	/^function fuf#givencmd#requiresOnCommandPre()$/;"	f
fuf#givendir#createHandler	vimfiles/bundle/fuzzyfinder/autoload/fuf/givendir.vim	/^function fuf#givendir#createHandler(base)$/;"	f
fuf#givendir#getEditableDataNames	vimfiles/bundle/fuzzyfinder/autoload/fuf/givendir.vim	/^function fuf#givendir#getEditableDataNames()$/;"	f
fuf#givendir#getSwitchOrder	vimfiles/bundle/fuzzyfinder/autoload/fuf/givendir.vim	/^function fuf#givendir#getSwitchOrder()$/;"	f
fuf#givendir#launch	vimfiles/bundle/fuzzyfinder/autoload/fuf/givendir.vim	/^function fuf#givendir#launch(initialPattern, partialMatching, prompt, items)$/;"	f
fuf#givendir#onInit	vimfiles/bundle/fuzzyfinder/autoload/fuf/givendir.vim	/^function fuf#givendir#onInit()$/;"	f
fuf#givendir#renewCache	vimfiles/bundle/fuzzyfinder/autoload/fuf/givendir.vim	/^function fuf#givendir#renewCache()$/;"	f
fuf#givendir#requiresOnCommandPre	vimfiles/bundle/fuzzyfinder/autoload/fuf/givendir.vim	/^function fuf#givendir#requiresOnCommandPre()$/;"	f
fuf#givenfile#createHandler	vimfiles/bundle/fuzzyfinder/autoload/fuf/givenfile.vim	/^function fuf#givenfile#createHandler(base)$/;"	f
fuf#givenfile#getEditableDataNames	vimfiles/bundle/fuzzyfinder/autoload/fuf/givenfile.vim	/^function fuf#givenfile#getEditableDataNames()$/;"	f
fuf#givenfile#getSwitchOrder	vimfiles/bundle/fuzzyfinder/autoload/fuf/givenfile.vim	/^function fuf#givenfile#getSwitchOrder()$/;"	f
fuf#givenfile#launch	vimfiles/bundle/fuzzyfinder/autoload/fuf/givenfile.vim	/^function fuf#givenfile#launch(initialPattern, partialMatching, prompt, items)$/;"	f
fuf#givenfile#onInit	vimfiles/bundle/fuzzyfinder/autoload/fuf/givenfile.vim	/^function fuf#givenfile#onInit()$/;"	f
fuf#givenfile#renewCache	vimfiles/bundle/fuzzyfinder/autoload/fuf/givenfile.vim	/^function fuf#givenfile#renewCache()$/;"	f
fuf#givenfile#requiresOnCommandPre	vimfiles/bundle/fuzzyfinder/autoload/fuf/givenfile.vim	/^function fuf#givenfile#requiresOnCommandPre()$/;"	f
fuf#glob	vimfiles/bundle/fuzzyfinder/autoload/fuf.vim	/^function fuf#glob(expr)$/;"	f
fuf#help#createHandler	vimfiles/bundle/fuzzyfinder/autoload/fuf/help.vim	/^function fuf#help#createHandler(base)$/;"	f
fuf#help#getEditableDataNames	vimfiles/bundle/fuzzyfinder/autoload/fuf/help.vim	/^function fuf#help#getEditableDataNames()$/;"	f
fuf#help#getSwitchOrder	vimfiles/bundle/fuzzyfinder/autoload/fuf/help.vim	/^function fuf#help#getSwitchOrder()$/;"	f
fuf#help#onInit	vimfiles/bundle/fuzzyfinder/autoload/fuf/help.vim	/^function fuf#help#onInit()$/;"	f
fuf#help#renewCache	vimfiles/bundle/fuzzyfinder/autoload/fuf/help.vim	/^function fuf#help#renewCache()$/;"	f
fuf#help#requiresOnCommandPre	vimfiles/bundle/fuzzyfinder/autoload/fuf/help.vim	/^function fuf#help#requiresOnCommandPre()$/;"	f
fuf#jumplist#createHandler	vimfiles/bundle/fuzzyfinder/autoload/fuf/jumplist.vim	/^function fuf#jumplist#createHandler(base)$/;"	f
fuf#jumplist#getEditableDataNames	vimfiles/bundle/fuzzyfinder/autoload/fuf/jumplist.vim	/^function fuf#jumplist#getEditableDataNames()$/;"	f
fuf#jumplist#getSwitchOrder	vimfiles/bundle/fuzzyfinder/autoload/fuf/jumplist.vim	/^function fuf#jumplist#getSwitchOrder()$/;"	f
fuf#jumplist#onInit	vimfiles/bundle/fuzzyfinder/autoload/fuf/jumplist.vim	/^function fuf#jumplist#onInit()$/;"	f
fuf#jumplist#renewCache	vimfiles/bundle/fuzzyfinder/autoload/fuf/jumplist.vim	/^function fuf#jumplist#renewCache()$/;"	f
fuf#jumplist#requiresOnCommandPre	vimfiles/bundle/fuzzyfinder/autoload/fuf/jumplist.vim	/^function fuf#jumplist#requiresOnCommandPre()$/;"	f
fuf#launch	vimfiles/bundle/fuzzyfinder/autoload/fuf.vim	/^function fuf#launch(modeName, initialPattern, partialMatching)$/;"	f
fuf#line#createHandler	vimfiles/bundle/fuzzyfinder/autoload/fuf/line.vim	/^function fuf#line#createHandler(base)$/;"	f
fuf#line#getEditableDataNames	vimfiles/bundle/fuzzyfinder/autoload/fuf/line.vim	/^function fuf#line#getEditableDataNames()$/;"	f
fuf#line#getSwitchOrder	vimfiles/bundle/fuzzyfinder/autoload/fuf/line.vim	/^function fuf#line#getSwitchOrder()$/;"	f
fuf#line#onInit	vimfiles/bundle/fuzzyfinder/autoload/fuf/line.vim	/^function fuf#line#onInit()$/;"	f
fuf#line#renewCache	vimfiles/bundle/fuzzyfinder/autoload/fuf/line.vim	/^function fuf#line#renewCache()$/;"	f
fuf#line#requiresOnCommandPre	vimfiles/bundle/fuzzyfinder/autoload/fuf/line.vim	/^function fuf#line#requiresOnCommandPre()$/;"	f
fuf#loadDataFile	vimfiles/bundle/fuzzyfinder/autoload/fuf.vim	/^function fuf#loadDataFile(modeName, dataName)$/;"	f
fuf#makeNonPathItem	vimfiles/bundle/fuzzyfinder/autoload/fuf.vim	/^function fuf#makeNonPathItem(word, menu)$/;"	f
fuf#makePathItem	vimfiles/bundle/fuzzyfinder/autoload/fuf.vim	/^function fuf#makePathItem(fname, menu, appendsDirSuffix)$/;"	f
fuf#makePatternSet	vimfiles/bundle/fuzzyfinder/autoload/fuf.vim	/^function fuf#makePatternSet(patternBase, interpreter, partialMatching)$/;"	f
fuf#makePreviewLinesAround	vimfiles/bundle/fuzzyfinder/autoload/fuf.vim	/^function fuf#makePreviewLinesAround(lines, indices, page, maxHeight)$/;"	f
fuf#makePreviewLinesForFile	vimfiles/bundle/fuzzyfinder/autoload/fuf.vim	/^function fuf#makePreviewLinesForFile(file, count, maxHeight)$/;"	f
fuf#mapToSetAbbrWithSnippedWordAsPath	vimfiles/bundle/fuzzyfinder/autoload/fuf.vim	/^function fuf#mapToSetAbbrWithSnippedWordAsPath(items)$/;"	f
fuf#mapToSetSerialIndex	vimfiles/bundle/fuzzyfinder/autoload/fuf.vim	/^function fuf#mapToSetSerialIndex(in, offset)$/;"	f
fuf#mrucmd#createHandler	vimfiles/bundle/fuzzyfinder/autoload/fuf/mrucmd.vim	/^function fuf#mrucmd#createHandler(base)$/;"	f
fuf#mrucmd#getEditableDataNames	vimfiles/bundle/fuzzyfinder/autoload/fuf/mrucmd.vim	/^function fuf#mrucmd#getEditableDataNames()$/;"	f
fuf#mrucmd#getSwitchOrder	vimfiles/bundle/fuzzyfinder/autoload/fuf/mrucmd.vim	/^function fuf#mrucmd#getSwitchOrder()$/;"	f
fuf#mrucmd#onCommandPre	vimfiles/bundle/fuzzyfinder/autoload/fuf/mrucmd.vim	/^function fuf#mrucmd#onCommandPre(cmd)$/;"	f
fuf#mrucmd#onInit	vimfiles/bundle/fuzzyfinder/autoload/fuf/mrucmd.vim	/^function fuf#mrucmd#onInit()$/;"	f
fuf#mrucmd#renewCache	vimfiles/bundle/fuzzyfinder/autoload/fuf/mrucmd.vim	/^function fuf#mrucmd#renewCache()$/;"	f
fuf#mrucmd#requiresOnCommandPre	vimfiles/bundle/fuzzyfinder/autoload/fuf/mrucmd.vim	/^function fuf#mrucmd#requiresOnCommandPre()$/;"	f
fuf#mrufile#createHandler	vimfiles/bundle/fuzzyfinder/autoload/fuf/mrufile.vim	/^function fuf#mrufile#createHandler(base)$/;"	f
fuf#mrufile#getEditableDataNames	vimfiles/bundle/fuzzyfinder/autoload/fuf/mrufile.vim	/^function fuf#mrufile#getEditableDataNames()$/;"	f
fuf#mrufile#getSwitchOrder	vimfiles/bundle/fuzzyfinder/autoload/fuf/mrufile.vim	/^function fuf#mrufile#getSwitchOrder()$/;"	f
fuf#mrufile#onInit	vimfiles/bundle/fuzzyfinder/autoload/fuf/mrufile.vim	/^function fuf#mrufile#onInit()$/;"	f
fuf#mrufile#renewCache	vimfiles/bundle/fuzzyfinder/autoload/fuf/mrufile.vim	/^function fuf#mrufile#renewCache()$/;"	f
fuf#mrufile#requiresOnCommandPre	vimfiles/bundle/fuzzyfinder/autoload/fuf/mrufile.vim	/^function fuf#mrufile#requiresOnCommandPre()$/;"	f
fuf#onComplete	vimfiles/bundle/fuzzyfinder/autoload/fuf.vim	/^function fuf#onComplete(findstart, base)$/;"	f
fuf#openBuffer	vimfiles/bundle/fuzzyfinder/autoload/fuf.vim	/^function fuf#openBuffer(bufNr, mode, reuse)$/;"	f
fuf#openFile	vimfiles/bundle/fuzzyfinder/autoload/fuf.vim	/^function fuf#openFile(path, mode, reuse)$/;"	f
fuf#openHelp	vimfiles/bundle/fuzzyfinder/autoload/fuf.vim	/^function fuf#openHelp(tag, mode)$/;"	f
fuf#openTag	vimfiles/bundle/fuzzyfinder/autoload/fuf.vim	/^function fuf#openTag(tag, mode)$/;"	f
fuf#prejump	vimfiles/bundle/fuzzyfinder/autoload/fuf.vim	/^function fuf#prejump(mode)$/;"	f
fuf#quickfix#createHandler	vimfiles/bundle/fuzzyfinder/autoload/fuf/quickfix.vim	/^function fuf#quickfix#createHandler(base)$/;"	f
fuf#quickfix#getEditableDataNames	vimfiles/bundle/fuzzyfinder/autoload/fuf/quickfix.vim	/^function fuf#quickfix#getEditableDataNames()$/;"	f
fuf#quickfix#getSwitchOrder	vimfiles/bundle/fuzzyfinder/autoload/fuf/quickfix.vim	/^function fuf#quickfix#getSwitchOrder()$/;"	f
fuf#quickfix#onInit	vimfiles/bundle/fuzzyfinder/autoload/fuf/quickfix.vim	/^function fuf#quickfix#onInit()$/;"	f
fuf#quickfix#renewCache	vimfiles/bundle/fuzzyfinder/autoload/fuf/quickfix.vim	/^function fuf#quickfix#renewCache()$/;"	f
fuf#quickfix#requiresOnCommandPre	vimfiles/bundle/fuzzyfinder/autoload/fuf/quickfix.vim	/^function fuf#quickfix#requiresOnCommandPre()$/;"	f
fuf#saveDataFile	vimfiles/bundle/fuzzyfinder/autoload/fuf.vim	/^function fuf#saveDataFile(modeName, dataName, items)$/;"	f
fuf#setAbbrWithFormattedWord	vimfiles/bundle/fuzzyfinder/autoload/fuf.vim	/^function fuf#setAbbrWithFormattedWord(item, abbrIndex)$/;"	f
fuf#setOneTimeVariables	vimfiles/bundle/fuzzyfinder/autoload/fuf.vim	/^function fuf#setOneTimeVariables(...)$/;"	f
fuf#splitPath	vimfiles/bundle/fuzzyfinder/autoload/fuf.vim	/^function fuf#splitPath(path)$/;"	f
fuf#suffixNumber	vimfiles/bundle/fuzzyfinder/autoload/fuf.vim	/^function fuf#suffixNumber(str)$/;"	f
fuf#tag#createHandler	vimfiles/bundle/fuzzyfinder/autoload/fuf/tag.vim	/^function fuf#tag#createHandler(base)$/;"	f
fuf#tag#getEditableDataNames	vimfiles/bundle/fuzzyfinder/autoload/fuf/tag.vim	/^function fuf#tag#getEditableDataNames()$/;"	f
fuf#tag#getSwitchOrder	vimfiles/bundle/fuzzyfinder/autoload/fuf/tag.vim	/^function fuf#tag#getSwitchOrder()$/;"	f
fuf#tag#onInit	vimfiles/bundle/fuzzyfinder/autoload/fuf/tag.vim	/^function fuf#tag#onInit()$/;"	f
fuf#tag#renewCache	vimfiles/bundle/fuzzyfinder/autoload/fuf/tag.vim	/^function fuf#tag#renewCache()$/;"	f
fuf#tag#requiresOnCommandPre	vimfiles/bundle/fuzzyfinder/autoload/fuf/tag.vim	/^function fuf#tag#requiresOnCommandPre()$/;"	f
fuf#taggedfile#createHandler	vimfiles/bundle/fuzzyfinder/autoload/fuf/taggedfile.vim	/^function fuf#taggedfile#createHandler(base)$/;"	f
fuf#taggedfile#getEditableDataNames	vimfiles/bundle/fuzzyfinder/autoload/fuf/taggedfile.vim	/^function fuf#taggedfile#getEditableDataNames()$/;"	f
fuf#taggedfile#getSwitchOrder	vimfiles/bundle/fuzzyfinder/autoload/fuf/taggedfile.vim	/^function fuf#taggedfile#getSwitchOrder()$/;"	f
fuf#taggedfile#onInit	vimfiles/bundle/fuzzyfinder/autoload/fuf/taggedfile.vim	/^function fuf#taggedfile#onInit()$/;"	f
fuf#taggedfile#renewCache	vimfiles/bundle/fuzzyfinder/autoload/fuf/taggedfile.vim	/^function fuf#taggedfile#renewCache()$/;"	f
fuf#taggedfile#requiresOnCommandPre	vimfiles/bundle/fuzzyfinder/autoload/fuf/taggedfile.vim	/^function fuf#taggedfile#requiresOnCommandPre()$/;"	f
fuf#updateMruList	vimfiles/bundle/fuzzyfinder/autoload/fuf.vim	/^function fuf#updateMruList(mrulist, newItem, maxItem, exclude)$/;"	f
fugitive	vimfiles/bundle/fugitive/plugin/fugitive.vim	/^augroup fugitive$/;"	a
fugitive#buffer	vimfiles/bundle/fugitive/plugin/fugitive.vim	/^function! fugitive#buffer(...) abort$/;"	f
fugitive#reload_status	vimfiles/bundle/fugitive/plugin/fugitive.vim	/^function! fugitive#reload_status() abort$/;"	f
fugitive#repo	vimfiles/bundle/fugitive/plugin/fugitive.vim	/^function! fugitive#repo(...)$/;"	f
fugitive#statusline	vimfiles/bundle/fugitive/plugin/fugitive.vim	/^function! fugitive#statusline(...)$/;"	f
fugitive_blame	vimfiles/bundle/fugitive/plugin/fugitive.vim	/^augroup fugitive_blame$/;"	a
fugitive_commit	vimfiles/bundle/fugitive/plugin/fugitive.vim	/^augroup fugitive_commit$/;"	a
fugitive_diff	vimfiles/bundle/fugitive/plugin/fugitive.vim	/^augroup fugitive_diff$/;"	a
fugitive_files	vimfiles/bundle/fugitive/plugin/fugitive.vim	/^augroup fugitive_files$/;"	a
fugitive_remove	vimfiles/bundle/fugitive/plugin/fugitive.vim	/^augroup fugitive_remove$/;"	a
fugitive_temp	vimfiles/bundle/fugitive/plugin/fugitive.vim	/^augroup fugitive_temp$/;"	a
fugitive_utility	vimfiles/bundle/fugitive/plugin/fugitive.vim	/^augroup fugitive_utility$/;"	a
function	vimfiles/bundle/fugitive/plugin/fugitive.vim	/^function! s:function(name) abort$/;"	f
function	vimfiles/bundle/vim-rails/autoload/rails.vim	/^function! s:function(name)$/;"	f
function	vimfiles/bundle/vim-rails/plugin/rails.vim	/^function! s:function(name)$/;"	f
functionaltestEdit	vimfiles/bundle/vim-rails/autoload/rails.vim	/^function! s:functionaltestEdit(cmd,...)$/;"	f
functionaltestList	vimfiles/bundle/vim-rails/autoload/rails.vim	/^function! s:functionaltestList(A,L,P)$/;"	f
fuzzyglob	vimfiles/bundle/vim-rails/autoload/rails.vim	/^function! s:fuzzyglob(arg)$/;"	f
g:Executer_CommandByExtension	vimfiles/bundle/elentok-executer/plugin/elentok-executer.vim	/^let g:Executer_CommandByExtension = {$/;"	v
g:NERDCustomDelimiters	vimfiles/bundle/nerdcommenter/plugin/NERD_commenter.vim	/^    let g:NERDCustomDelimiters = {}$/;"	v
g:NERDTreeBookmark	vimfiles/bundle-disabled/nerdtree/plugin/NERD_tree.vim	/^let g:NERDTreeBookmark = s:Bookmark$/;"	v
g:NERDTreeDirNode	vimfiles/bundle-disabled/nerdtree/plugin/NERD_tree.vim	/^let g:NERDTreeDirNode = s:TreeDirNode$/;"	v
g:NERDTreeFileNode	vimfiles/bundle-disabled/nerdtree/plugin/NERD_tree.vim	/^let g:NERDTreeFileNode = s:TreeFileNode$/;"	v
g:NERDTreeIgnore	vimfiles/bundle-disabled/nerdtree/plugin/NERD_tree.vim	/^    let g:NERDTreeIgnore = ['\\~$']$/;"	v
g:NERDTreePath	vimfiles/bundle-disabled/nerdtree/plugin/NERD_tree.vim	/^let g:NERDTreePath = s:Path$/;"	v
g:NERDTreeSortOrder	vimfiles/bundle-disabled/nerdtree/plugin/NERD_tree.vim	/^    let g:NERDTreeSortOrder = ['\\\/$', '*', '\\.swp$',  '\\.bak$', '\\~$']$/;"	v
g:NERDTreeStatusline	vimfiles/bundle-disabled/nerdtree/plugin/NERD_tree.vim	/^    let g:NERDTreeStatusline = "%{exists('b:NERDTreeRoot')?b:NERDTreeRoot.path.str():''}"$/;"	v
g:Pl#HL	vimfiles/bundle/powerline/autoload/Pl.vim	/^	let g:Pl#HL = []$/;"	v
g:Pl#OLD_STL	vimfiles/bundle/powerline/autoload/Pl.vim	/^	let g:Pl#OLD_STL = ''$/;"	v
g:Pl#Parser#Symbols	vimfiles/bundle/powerline/autoload/Pl/Parser.vim	/^let g:Pl#Parser#Symbols = {$/;"	v
g:Pl#THEME	vimfiles/bundle/powerline/autoload/Pl.vim	/^	let g:Pl#THEME = []$/;"	v
g:Powerline#Colorschemes#distinguished#colorscheme	vimfiles/bundle/powerline/autoload/Powerline/Colorschemes/distinguished.vim	/^let g:Powerline#Colorschemes#distinguished#colorscheme = Pl#Colorscheme#Init([$/;"	v
g:Powerline#Matches#matches	vimfiles/bundle/powerline/autoload/Powerline/Matches.vim	/^let g:Powerline#Matches#matches = {$/;"	v
g:Powerline#Segments#cfi#segments	vimfiles/bundle/powerline/autoload/Powerline/Segments/cfi.vim	/^let g:Powerline#Segments#cfi#segments = Pl#Segment#Init('cfi',$/;"	v
g:Powerline#Segments#ft_man#segments	vimfiles/bundle/powerline/autoload/Powerline/Segments/ft_man.vim	/^let g:Powerline#Segments#ft_man#segments = Pl#Segment#Init('ft_man',$/;"	v
g:Powerline#Segments#fugitive#segments	vimfiles/bundle/powerline/autoload/Powerline/Segments/fugitive.vim	/^let g:Powerline#Segments#fugitive#segments = Pl#Segment#Init('fugitive',$/;"	v
g:Powerline#Segments#segments	vimfiles/bundle/powerline/autoload/Powerline/Segments.vim	/^let g:Powerline#Segments#segments = Pl#Segment#Init($/;"	v
g:Powerline#Segments#syntastic#segments	vimfiles/bundle/powerline/autoload/Powerline/Segments/syntastic.vim	/^let g:Powerline#Segments#syntastic#segments = Pl#Segment#Init('syntastic',$/;"	v
g:Powerline#Themes#distinguished#theme	vimfiles/bundle/powerline/autoload/Powerline/Themes/distinguished.vim	/^let g:Powerline#Themes#distinguished#theme = Pl#Theme#Create($/;"	v
g:Powerline_loaded	vimfiles/bundle/powerline/plugin/Powerline.vim	/^	let g:Powerline_loaded = 1$/;"	v
g:autoloaded_rails	vimfiles/bundle/vim-rails/autoload/rails.vim	/^let g:autoloaded_rails = '4.4'$/;"	v
g:colors_name	vimfiles/colors/molokai-nobold.vim	/^let g:colors_name="molokai"$/;"	v
g:colors_name	vimfiles/colors/molokai.vim	/^let g:colors_name="molokai"$/;"	v
g:colors_name	vimfiles/colors/robokai.vim	/^let g:colors_name = "robokai"$/;"	v
g:command_t_loaded	vimfiles/bundle-disabled/command-t/plugin/command-t.vim	/^let g:command_t_loaded = 1$/;"	v
g:did_ft	vimfiles/bundle/snipMate/plugin/snipMate.vim	/^let g:did_ft = {}$/;"	v
g:did_ruby_ftplugin_functions	vimfiles/bundle/vim-ruby/ftplugin/ruby.vim	/^let g:did_ruby_ftplugin_functions = 1$/;"	v
g:eco_default_subtype	vimfiles/bundle/coffeescript/syntax/eco.vim	/^  let g:eco_default_subtype = "html"$/;"	v
g:eruby_default_subtype	vimfiles/bundle/vim-ruby/ftplugin/eruby.vim	/^  let g:eruby_default_subtype = "html"$/;"	v
g:eruby_default_subtype	vimfiles/bundle/vim-ruby/syntax/eruby.vim	/^  let g:eruby_default_subtype = "html"$/;"	v
g:fugitive_git_executable	vimfiles/bundle/fugitive/plugin/fugitive.vim	/^  let g:fugitive_git_executable = 'git'$/;"	v
g:fugitive_summary_format	vimfiles/bundle/fugitive/plugin/fugitive.vim	/^  let g:fugitive_summary_format = '%s'$/;"	v
g:jade_self_closing_tags	vimfiles/bundle/jade/indent/jade.vim	/^  let g:jade_self_closing_tags = 'meta|link|img|hr|br'$/;"	v
g:loaded_autoload_l9	vimfiles/bundle/l9/autoload/l9.vim	/^let g:loaded_autoload_l9 = 1$/;"	v
g:loaded_fugitive	vimfiles/bundle/fugitive/plugin/fugitive.vim	/^let g:loaded_fugitive = 1$/;"	v
g:loaded_nerdtree_exec_menuitem	vimfiles/bundle-disabled/nerdtree/nerdtree_plugin/exec_menuitem.vim	/^let g:loaded_nerdtree_exec_menuitem = 1$/;"	v
g:loaded_nerdtree_fs_menu	vimfiles/bundle-disabled/nerdtree/nerdtree_plugin/fs_menu.vim	/^let g:loaded_nerdtree_fs_menu = 1$/;"	v
g:loaded_pathogen	vimfiles/autoload/pathogen.vim	/^let g:loaded_pathogen = 1$/;"	v
g:loaded_rails	vimfiles/bundle/vim-rails/plugin/rails.vim	/^let g:loaded_rails = 1$/;"	v
g:minWindowHeight	vimfiles/bundle/elentok-big-enough-window/plugin/elentok-big-enough-window.vim	/^let g:minWindowHeight = 20$/;"	v
g:minWindowWidth	vimfiles/bundle/elentok-big-enough-window/plugin/elentok-big-enough-window.vim	/^let g:minWindowWidth = 80$/;"	v
g:rubycomplete_buffer_loading	vimfiles/bundle/vim-ruby/autoload/rubycomplete.vim	/^    let g:rubycomplete_buffer_loading = 0$/;"	v
g:rubycomplete_classes_in_global	vimfiles/bundle/vim-ruby/autoload/rubycomplete.vim	/^    let g:rubycomplete_classes_in_global = 0$/;"	v
g:rubycomplete_include_object	vimfiles/bundle/vim-ruby/autoload/rubycomplete.vim	/^    let g:rubycomplete_include_object = 0$/;"	v
g:rubycomplete_include_objectspace	vimfiles/bundle/vim-ruby/autoload/rubycomplete.vim	/^    let g:rubycomplete_include_objectspace = 0$/;"	v
g:rubycomplete_rails	vimfiles/bundle/vim-ruby/autoload/rubycomplete.vim	/^    let g:rubycomplete_rails = 0$/;"	v
g:yankring_clipboard_monitor	vimfiles/bundle/yankring/plugin/yankring.vim	/^    let g:yankring_clipboard_monitor = (has('clipboard')?1:0)$/;"	v
g:yankring_default_menu_mode	vimfiles/bundle/yankring/plugin/yankring.vim	/^    let g:yankring_default_menu_mode = 3$/;"	v
g:yankring_del_v_key	vimfiles/bundle/yankring/plugin/yankring.vim	/^    let g:yankring_del_v_key = 'd x'$/;"	v
g:yankring_dot_repeat_yank	vimfiles/bundle/yankring/plugin/yankring.vim	/^    let g:yankring_dot_repeat_yank = (&cpoptions=~'y'?1:0)$/;"	v
g:yankring_enabled	vimfiles/bundle/yankring/plugin/yankring.vim	/^    let g:yankring_enabled = 1$/;"	v
g:yankring_history_dir	vimfiles/bundle/yankring/plugin/yankring.vim	/^    let g:yankring_history_dir = expand('$HOME')$/;"	v
g:yankring_history_dir	vimfiles/bundle/yankring/plugin/yankring.vim	/^    let g:yankring_history_dir = expand(g:yankring_history_dir)$/;"	v
g:yankring_history_file	vimfiles/bundle/yankring/plugin/yankring.vim	/^    let g:yankring_history_file = 'yankring_history'$/;"	v
g:yankring_ignore_duplicate	vimfiles/bundle/yankring/plugin/yankring.vim	/^    let g:yankring_ignore_duplicate = 1$/;"	v
g:yankring_ignore_operator	vimfiles/bundle/yankring/plugin/yankring.vim	/^    let g:yankring_ignore_operator = 'g~ gu gU ! = gq g? > < zf g@'$/;"	v
g:yankring_ignore_operator	vimfiles/bundle/yankring/plugin/yankring.vim	/^let g:yankring_ignore_operator = ' '.g:yankring_ignore_operator.' '$/;"	v
g:yankring_manage_numbered_reg	vimfiles/bundle/yankring/plugin/yankring.vim	/^    let g:yankring_manage_numbered_reg = 0$/;"	v
g:yankring_map_dot	vimfiles/bundle/yankring/plugin/yankring.vim	/^    let g:yankring_map_dot = 1$/;"	v
g:yankring_max_display	vimfiles/bundle/yankring/plugin/yankring.vim	/^    let g:yankring_max_display = 0$/;"	v
g:yankring_max_element_length	vimfiles/bundle/yankring/plugin/yankring.vim	/^    let g:yankring_max_element_length = 1048576$/;"	v
g:yankring_max_history	vimfiles/bundle/yankring/plugin/yankring.vim	/^    let g:yankring_max_history = 100$/;"	v
g:yankring_min_element_length	vimfiles/bundle/yankring/plugin/yankring.vim	/^    let g:yankring_min_element_length = 1$/;"	v
g:yankring_n_keys	vimfiles/bundle/yankring/plugin/yankring.vim	/^        let g:yankring_n_keys = 'Y D x X'$/;"	v
g:yankring_n_keys	vimfiles/bundle/yankring/plugin/yankring.vim	/^        let g:yankring_n_keys = 'x yy dd yw dw ye de yE dE yiw diw yaw daw y$ d$ Y D yG dG ygg dgg'$/;"	v
g:yankring_o_keys	vimfiles/bundle/yankring/plugin/yankring.vim	/^    let g:yankring_o_keys  = 'b B w W e E d h j k l H M L y G ^ 0 $ , ;'$/;"	v
g:yankring_o_keys	vimfiles/bundle/yankring/plugin/yankring.vim	/^    let g:yankring_o_keys .= ' g_  g^ gm g$ gk gj gg ge gE - + _ '$/;"	v
g:yankring_o_keys	vimfiles/bundle/yankring/plugin/yankring.vim	/^    let g:yankring_o_keys .= ' iw iW aw aW as is ap ip a] a[ i] i[ a) a( ab i) i( ib a> a< i> i< at it a} a{ aB i} i{ iB a" a'' a` i" i'' i`'$/;"	v
g:yankring_paste_check_default_buffer	vimfiles/bundle/yankring/plugin/yankring.vim	/^    let g:yankring_paste_check_default_buffer = 1$/;"	v
g:yankring_paste_n_akey	vimfiles/bundle/yankring/plugin/yankring.vim	/^    let g:yankring_paste_n_akey = 'p'$/;"	v
g:yankring_paste_n_bkey	vimfiles/bundle/yankring/plugin/yankring.vim	/^    let g:yankring_paste_n_bkey = 'P'$/;"	v
g:yankring_paste_using_g	vimfiles/bundle/yankring/plugin/yankring.vim	/^    let g:yankring_paste_using_g = 1$/;"	v
g:yankring_paste_v_akey	vimfiles/bundle/yankring/plugin/yankring.vim	/^    let g:yankring_paste_v_akey = 'p'$/;"	v
g:yankring_paste_v_bkey	vimfiles/bundle/yankring/plugin/yankring.vim	/^    let g:yankring_paste_v_bkey = 'P'$/;"	v
g:yankring_persist	vimfiles/bundle/yankring/plugin/yankring.vim	/^    let g:yankring_persist = 1$/;"	v
g:yankring_replace_n_nkey	vimfiles/bundle/yankring/plugin/yankring.vim	/^    let g:yankring_replace_n_nkey = '<C-N>'$/;"	v
g:yankring_replace_n_pkey	vimfiles/bundle/yankring/plugin/yankring.vim	/^    let g:yankring_replace_n_pkey = '<C-P>'$/;"	v
g:yankring_share_between_instances	vimfiles/bundle/yankring/plugin/yankring.vim	/^    let g:yankring_share_between_instances = 1$/;"	v
g:yankring_v_key	vimfiles/bundle/yankring/plugin/yankring.vim	/^    let g:yankring_v_key = 'y'$/;"	v
g:yankring_warn_on_truncate	vimfiles/bundle/yankring/plugin/yankring.vim	/^    let g:yankring_warn_on_truncate = 1$/;"	v
g:yankring_window_auto_close	vimfiles/bundle/yankring/plugin/yankring.vim	/^    let g:yankring_window_auto_close = 1$/;"	v
g:yankring_window_height	vimfiles/bundle/yankring/plugin/yankring.vim	/^    let g:yankring_window_height = 8$/;"	v
g:yankring_window_increment	vimfiles/bundle/yankring/plugin/yankring.vim	/^    let g:yankring_window_increment = 50$/;"	v
g:yankring_window_use_bottom	vimfiles/bundle/yankring/plugin/yankring.vim	/^    let g:yankring_window_use_bottom = 1$/;"	v
g:yankring_window_use_horiz	vimfiles/bundle/yankring/plugin/yankring.vim	/^    let g:yankring_window_use_horiz = 1$/;"	v
g:yankring_window_use_right	vimfiles/bundle/yankring/plugin/yankring.vim	/^    let g:yankring_window_use_right = 1$/;"	v
g:yankring_window_use_separate	vimfiles/bundle/yankring/plugin/yankring.vim	/^    let g:yankring_window_use_separate = 1$/;"	v
g:yankring_window_width	vimfiles/bundle/yankring/plugin/yankring.vim	/^    let g:yankring_window_width = 30$/;"	v
g:yankring_zap_keys	vimfiles/bundle/yankring/plugin/yankring.vim	/^    let g:yankring_zap_keys = 'f F t T \/ ? @'$/;"	v
g<C-]>	vimfiles/bundle/vim-ruby/ftplugin/ruby.vim	/^    nnoremap <silent> <buffer> g<C-]>      :<C-U>exe         "tjump <C-R>=RubyCursorIdentifier()<CR>"<CR>$/;"	m
gReplace	vimfiles/bundle/greplace/plugin/greplace.vim	/^function! s:gReplace()$/;"	f
gReplace_show_matches	vimfiles/bundle/greplace/plugin/greplace.vim	/^function! s:gReplace_show_matches()$/;"	f
gSearch	vimfiles/bundle/greplace/plugin/greplace.vim	/^function! s:gSearch(type, ...)$/;"	f
g]	vimfiles/bundle/vim-ruby/ftplugin/ruby.vim	/^    nnoremap <silent> <buffer> g]          :<C-U>exe       "tselect <C-R>=RubyCursorIdentifier()<CR>"<CR>$/;"	m
getBufIndicator	vimfiles/bundle/fuzzyfinder/autoload/fuf/buffer.vim	/^function s:getBufIndicator(bufNr)$/;"	f
getChangesLines	vimfiles/bundle/fuzzyfinder/autoload/fuf/changelist.vim	/^function s:getChangesLines()$/;"	f
getCurrentHelpTagFiles	vimfiles/bundle/fuzzyfinder/autoload/fuf/help.vim	/^function s:getCurrentHelpTagFiles()$/;"	f
getEditableDataFiles	vimfiles/bundle/fuzzyfinder/autoload/fuf.vim	/^function s:getEditableDataFiles(modeName)$/;"	f
getFileType	vimfiles/bundle/fuzzyfinder/autoload/fuf/buffertag.vim	/^function s:getFileType(bufNr)$/;"	f
getHelpTagEntries	vimfiles/bundle/fuzzyfinder/autoload/fuf/help.vim	/^function s:getHelpTagEntries(tagFile)$/;"	f
getJumpsLines	vimfiles/bundle/fuzzyfinder/autoload/fuf/jumplist.vim	/^function s:getJumpsLines()$/;"	f
getJumpsLines	vimfiles/bundle/fuzzyfinder/autoload/fuf/quickfix.vim	/^function s:getJumpsLines()$/;"	f
getLastBlockLength	vimfiles/bundle/fuzzyfinder/autoload/fuf.vim	/^function s:getLastBlockLength(pattern, patternIsPath)$/;"	f
getLinePattern	vimfiles/bundle/fuzzyfinder/autoload/fuf/bookmarkfile.vim	/^function s:getLinePattern(lnum)$/;"	f
getMatchingIndex	vimfiles/bundle/fuzzyfinder/autoload/fuf/help.vim	/^function s:getMatchingIndex(lines, pattern)$/;"	f
getMatchingIndex	vimfiles/bundle/fuzzyfinder/autoload/fuf/tag.vim	/^function s:getMatchingIndex(lines, cmd)$/;"	f
getMatchingLineNumber	vimfiles/bundle/fuzzyfinder/autoload/fuf/bookmarkfile.vim	/^function s:getMatchingLineNumber(lines, pattern, lnumBegin)$/;"	f
getPath	vimfiles/bundle-disabled/nerdtree/plugin/NERD_tree.vim	/^function! s:getPath(ln)$/;"	f
getSnippedHead	vimfiles/bundle/fuzzyfinder/autoload/fuf.vim	/^function s:getSnippedHead(head, baseLen)$/;"	f
getTagData	vimfiles/bundle/fuzzyfinder/autoload/fuf/buffertag.vim	/^function s:getTagData(bufNrs)$/;"	f
getTagItems	vimfiles/bundle/fuzzyfinder/autoload/fuf/buffertag.vim	/^function s:getTagItems(bufNr)$/;"	f
getTagNames	vimfiles/bundle/fuzzyfinder/autoload/fuf/tag.vim	/^function s:getTagNames(tagFile)$/;"	f
getTaggedFileList	vimfiles/bundle/fuzzyfinder/autoload/fuf/taggedfile.vim	/^function s:getTaggedFileList(tagfile)$/;"	f
getTreeWinNum	vimfiles/bundle-disabled/nerdtree/plugin/NERD_tree.vim	/^function! s:getTreeWinNum()$/;"	f
getWordBoundaries	vimfiles/bundle/fuzzyfinder/autoload/fuf.vim	/^function s:getWordBoundaries(word)$/;"	f
get_bool	vimfiles/bundle-disabled/command-t/ruby/command-t/controller.rb	/^    def get_bool name$/;"	f	class:CommandT.Controller
get_bool	vimfiles/bundle-disabled/command-t/ruby/command-t/settings.rb	/^    def get_bool setting$/;"	f	class:CommandT.Settings
get_cursor_highlight	vimfiles/bundle-disabled/command-t/ruby/command-t/match_window.rb	/^    def get_cursor_highlight$/;"	f	class:CommandT.MatchWindow
get_dim	vimfiles/bundle/powerline/fontpatcher/fontpatcher	/^	def get_dim(glyph):$/;"	f	access:public
get_list_or_string	vimfiles/bundle-disabled/command-t/ruby/command-t/controller.rb	/^    def get_list_or_string name$/;"	f	class:CommandT.Controller
get_number	vimfiles/bundle-disabled/command-t/ruby/command-t/controller.rb	/^    def get_number name$/;"	f	class:CommandT.Controller
get_number	vimfiles/bundle-disabled/command-t/ruby/command-t/settings.rb	/^    def get_number setting$/;"	f	class:CommandT.Settings
get_string	vimfiles/bundle-disabled/command-t/ruby/command-t/controller.rb	/^    def get_string name$/;"	f	class:CommandT.Controller
getopt	vimfiles/bundle/vim-rails/autoload/rails.vim	/^function! s:getopt(opt,...)$/;"	f
getpidfor	vimfiles/bundle/vim-rails/autoload/rails.vim	/^function! s:getpidfor(bind,port)$/;"	f
gf	vimfiles/bundle/vim-ruby/ftplugin/ruby.vim	/^    nnoremap <silent> <buffer> gf         :<C-U>exe <SID>gf(v:count1,"gf",'edit')<CR>$/;"	m
gf	vimfiles/bundle/vim-ruby/ftplugin/ruby.vim	/^function! s:gf(count,map,edit) abort$/;"	f
github_url	vimfiles/bundle/fugitive/plugin/fugitive.vim	/^function! s:github_url(repo,url,rev,commit,path,type,line1,line2) abort$/;"	f
gsub	vimfiles/bundle/fugitive/plugin/fugitive.vim	/^function! s:gsub(str,pat,rep) abort$/;"	f
gsub	vimfiles/bundle/vim-rails/autoload/rails.vim	/^function! s:gsub(str,pat,rep)$/;"	f
gsub	vimfiles/bundle/vim-rails/plugin/rails.vim	/^function! s:gsub(str,pat,rep)$/;"	f
handleFailedAssersion	vimfiles/bundle/l9/plugin/l9.vim	/^  function s:handleFailedAssersion(expr)$/;"	f
handleMiddleMouse	vimfiles/bundle-disabled/nerdtree/plugin/NERD_tree.vim	/^function! s:handleMiddleMouse()$/;"	f
handle_key	vimfiles/bundle-disabled/command-t/ruby/command-t/controller.rb	/^    def handle_key$/;"	f	class:CommandT.Controller
handler.getCompleteItems	vimfiles/bundle/fuzzyfinder/autoload/fuf/bookmarkdir.vim	/^function s:handler.getCompleteItems(patternPrimary)$/;"	f
handler.getCompleteItems	vimfiles/bundle/fuzzyfinder/autoload/fuf/bookmarkfile.vim	/^function s:handler.getCompleteItems(patternPrimary)$/;"	f
handler.getCompleteItems	vimfiles/bundle/fuzzyfinder/autoload/fuf/buffer.vim	/^function s:handler.getCompleteItems(patternPrimary)$/;"	f
handler.getCompleteItems	vimfiles/bundle/fuzzyfinder/autoload/fuf/buffertag.vim	/^function s:handler.getCompleteItems(patternPrimary)$/;"	f
handler.getCompleteItems	vimfiles/bundle/fuzzyfinder/autoload/fuf/callbackfile.vim	/^function s:handler.getCompleteItems(patternPrimary)$/;"	f
handler.getCompleteItems	vimfiles/bundle/fuzzyfinder/autoload/fuf/callbackitem.vim	/^function s:handler.getCompleteItems(patternPrimary)$/;"	f
handler.getCompleteItems	vimfiles/bundle/fuzzyfinder/autoload/fuf/changelist.vim	/^function s:handler.getCompleteItems(patternPrimary)$/;"	f
handler.getCompleteItems	vimfiles/bundle/fuzzyfinder/autoload/fuf/coveragefile.vim	/^function s:handler.getCompleteItems(patternPrimary)$/;"	f
handler.getCompleteItems	vimfiles/bundle/fuzzyfinder/autoload/fuf/dir.vim	/^function s:handler.getCompleteItems(patternPrimary)$/;"	f
handler.getCompleteItems	vimfiles/bundle/fuzzyfinder/autoload/fuf/file.vim	/^function s:handler.getCompleteItems(patternPrimary)$/;"	f
handler.getCompleteItems	vimfiles/bundle/fuzzyfinder/autoload/fuf/givencmd.vim	/^function s:handler.getCompleteItems(patternPrimary)$/;"	f
handler.getCompleteItems	vimfiles/bundle/fuzzyfinder/autoload/fuf/givendir.vim	/^function s:handler.getCompleteItems(patternPrimary)$/;"	f
handler.getCompleteItems	vimfiles/bundle/fuzzyfinder/autoload/fuf/givenfile.vim	/^function s:handler.getCompleteItems(patternPrimary)$/;"	f
handler.getCompleteItems	vimfiles/bundle/fuzzyfinder/autoload/fuf/help.vim	/^function s:handler.getCompleteItems(patternPrimary)$/;"	f
handler.getCompleteItems	vimfiles/bundle/fuzzyfinder/autoload/fuf/jumplist.vim	/^function s:handler.getCompleteItems(patternPrimary)$/;"	f
handler.getCompleteItems	vimfiles/bundle/fuzzyfinder/autoload/fuf/line.vim	/^function s:handler.getCompleteItems(patternPrimary)$/;"	f
handler.getCompleteItems	vimfiles/bundle/fuzzyfinder/autoload/fuf/mrucmd.vim	/^function s:handler.getCompleteItems(patternPrimary)$/;"	f
handler.getCompleteItems	vimfiles/bundle/fuzzyfinder/autoload/fuf/mrufile.vim	/^function s:handler.getCompleteItems(patternPrimary)$/;"	f
handler.getCompleteItems	vimfiles/bundle/fuzzyfinder/autoload/fuf/quickfix.vim	/^function s:handler.getCompleteItems(patternPrimary)$/;"	f
handler.getCompleteItems	vimfiles/bundle/fuzzyfinder/autoload/fuf/tag.vim	/^function s:handler.getCompleteItems(patternPrimary)$/;"	f
handler.getCompleteItems	vimfiles/bundle/fuzzyfinder/autoload/fuf/taggedfile.vim	/^function s:handler.getCompleteItems(patternPrimary)$/;"	f
handler.getModeName	vimfiles/bundle/fuzzyfinder/autoload/fuf/bookmarkdir.vim	/^function s:handler.getModeName()$/;"	f
handler.getModeName	vimfiles/bundle/fuzzyfinder/autoload/fuf/bookmarkfile.vim	/^function s:handler.getModeName()$/;"	f
handler.getModeName	vimfiles/bundle/fuzzyfinder/autoload/fuf/buffer.vim	/^function s:handler.getModeName()$/;"	f
handler.getModeName	vimfiles/bundle/fuzzyfinder/autoload/fuf/buffertag.vim	/^function s:handler.getModeName()$/;"	f
handler.getModeName	vimfiles/bundle/fuzzyfinder/autoload/fuf/callbackfile.vim	/^function s:handler.getModeName()$/;"	f
handler.getModeName	vimfiles/bundle/fuzzyfinder/autoload/fuf/callbackitem.vim	/^function s:handler.getModeName()$/;"	f
handler.getModeName	vimfiles/bundle/fuzzyfinder/autoload/fuf/changelist.vim	/^function s:handler.getModeName()$/;"	f
handler.getModeName	vimfiles/bundle/fuzzyfinder/autoload/fuf/coveragefile.vim	/^function s:handler.getModeName()$/;"	f
handler.getModeName	vimfiles/bundle/fuzzyfinder/autoload/fuf/dir.vim	/^function s:handler.getModeName()$/;"	f
handler.getModeName	vimfiles/bundle/fuzzyfinder/autoload/fuf/file.vim	/^function s:handler.getModeName()$/;"	f
handler.getModeName	vimfiles/bundle/fuzzyfinder/autoload/fuf/givencmd.vim	/^function s:handler.getModeName()$/;"	f
handler.getModeName	vimfiles/bundle/fuzzyfinder/autoload/fuf/givendir.vim	/^function s:handler.getModeName()$/;"	f
handler.getModeName	vimfiles/bundle/fuzzyfinder/autoload/fuf/givenfile.vim	/^function s:handler.getModeName()$/;"	f
handler.getModeName	vimfiles/bundle/fuzzyfinder/autoload/fuf/help.vim	/^function s:handler.getModeName()$/;"	f
handler.getModeName	vimfiles/bundle/fuzzyfinder/autoload/fuf/jumplist.vim	/^function s:handler.getModeName()$/;"	f
handler.getModeName	vimfiles/bundle/fuzzyfinder/autoload/fuf/line.vim	/^function s:handler.getModeName()$/;"	f
handler.getModeName	vimfiles/bundle/fuzzyfinder/autoload/fuf/mrucmd.vim	/^function s:handler.getModeName()$/;"	f
handler.getModeName	vimfiles/bundle/fuzzyfinder/autoload/fuf/mrufile.vim	/^function s:handler.getModeName()$/;"	f
handler.getModeName	vimfiles/bundle/fuzzyfinder/autoload/fuf/quickfix.vim	/^function s:handler.getModeName()$/;"	f
handler.getModeName	vimfiles/bundle/fuzzyfinder/autoload/fuf/tag.vim	/^function s:handler.getModeName()$/;"	f
handler.getModeName	vimfiles/bundle/fuzzyfinder/autoload/fuf/taggedfile.vim	/^function s:handler.getModeName()$/;"	f
handler.getPreviewHeight	vimfiles/bundle/fuzzyfinder/autoload/fuf/bookmarkdir.vim	/^function s:handler.getPreviewHeight()$/;"	f
handler.getPreviewHeight	vimfiles/bundle/fuzzyfinder/autoload/fuf/bookmarkfile.vim	/^function s:handler.getPreviewHeight()$/;"	f
handler.getPreviewHeight	vimfiles/bundle/fuzzyfinder/autoload/fuf/buffer.vim	/^function s:handler.getPreviewHeight()$/;"	f
handler.getPreviewHeight	vimfiles/bundle/fuzzyfinder/autoload/fuf/buffertag.vim	/^function s:handler.getPreviewHeight()$/;"	f
handler.getPreviewHeight	vimfiles/bundle/fuzzyfinder/autoload/fuf/callbackfile.vim	/^function s:handler.getPreviewHeight()$/;"	f
handler.getPreviewHeight	vimfiles/bundle/fuzzyfinder/autoload/fuf/callbackitem.vim	/^function s:handler.getPreviewHeight()$/;"	f
handler.getPreviewHeight	vimfiles/bundle/fuzzyfinder/autoload/fuf/changelist.vim	/^function s:handler.getPreviewHeight()$/;"	f
handler.getPreviewHeight	vimfiles/bundle/fuzzyfinder/autoload/fuf/coveragefile.vim	/^function s:handler.getPreviewHeight()$/;"	f
handler.getPreviewHeight	vimfiles/bundle/fuzzyfinder/autoload/fuf/dir.vim	/^function s:handler.getPreviewHeight()$/;"	f
handler.getPreviewHeight	vimfiles/bundle/fuzzyfinder/autoload/fuf/file.vim	/^function s:handler.getPreviewHeight()$/;"	f
handler.getPreviewHeight	vimfiles/bundle/fuzzyfinder/autoload/fuf/givencmd.vim	/^function s:handler.getPreviewHeight()$/;"	f
handler.getPreviewHeight	vimfiles/bundle/fuzzyfinder/autoload/fuf/givendir.vim	/^function s:handler.getPreviewHeight()$/;"	f
handler.getPreviewHeight	vimfiles/bundle/fuzzyfinder/autoload/fuf/givenfile.vim	/^function s:handler.getPreviewHeight()$/;"	f
handler.getPreviewHeight	vimfiles/bundle/fuzzyfinder/autoload/fuf/help.vim	/^function s:handler.getPreviewHeight()$/;"	f
handler.getPreviewHeight	vimfiles/bundle/fuzzyfinder/autoload/fuf/jumplist.vim	/^function s:handler.getPreviewHeight()$/;"	f
handler.getPreviewHeight	vimfiles/bundle/fuzzyfinder/autoload/fuf/line.vim	/^function s:handler.getPreviewHeight()$/;"	f
handler.getPreviewHeight	vimfiles/bundle/fuzzyfinder/autoload/fuf/mrucmd.vim	/^function s:handler.getPreviewHeight()$/;"	f
handler.getPreviewHeight	vimfiles/bundle/fuzzyfinder/autoload/fuf/mrufile.vim	/^function s:handler.getPreviewHeight()$/;"	f
handler.getPreviewHeight	vimfiles/bundle/fuzzyfinder/autoload/fuf/quickfix.vim	/^function s:handler.getPreviewHeight()$/;"	f
handler.getPreviewHeight	vimfiles/bundle/fuzzyfinder/autoload/fuf/tag.vim	/^function s:handler.getPreviewHeight()$/;"	f
handler.getPreviewHeight	vimfiles/bundle/fuzzyfinder/autoload/fuf/taggedfile.vim	/^function s:handler.getPreviewHeight()$/;"	f
handler.getPrompt	vimfiles/bundle/fuzzyfinder/autoload/fuf/bookmarkdir.vim	/^function s:handler.getPrompt()$/;"	f
handler.getPrompt	vimfiles/bundle/fuzzyfinder/autoload/fuf/bookmarkfile.vim	/^function s:handler.getPrompt()$/;"	f
handler.getPrompt	vimfiles/bundle/fuzzyfinder/autoload/fuf/buffer.vim	/^function s:handler.getPrompt()$/;"	f
handler.getPrompt	vimfiles/bundle/fuzzyfinder/autoload/fuf/buffertag.vim	/^function s:handler.getPrompt()$/;"	f
handler.getPrompt	vimfiles/bundle/fuzzyfinder/autoload/fuf/callbackfile.vim	/^function s:handler.getPrompt()$/;"	f
handler.getPrompt	vimfiles/bundle/fuzzyfinder/autoload/fuf/callbackitem.vim	/^function s:handler.getPrompt()$/;"	f
handler.getPrompt	vimfiles/bundle/fuzzyfinder/autoload/fuf/changelist.vim	/^function s:handler.getPrompt()$/;"	f
handler.getPrompt	vimfiles/bundle/fuzzyfinder/autoload/fuf/coveragefile.vim	/^function s:handler.getPrompt()$/;"	f
handler.getPrompt	vimfiles/bundle/fuzzyfinder/autoload/fuf/dir.vim	/^function s:handler.getPrompt()$/;"	f
handler.getPrompt	vimfiles/bundle/fuzzyfinder/autoload/fuf/file.vim	/^function s:handler.getPrompt()$/;"	f
handler.getPrompt	vimfiles/bundle/fuzzyfinder/autoload/fuf/givencmd.vim	/^function s:handler.getPrompt()$/;"	f
handler.getPrompt	vimfiles/bundle/fuzzyfinder/autoload/fuf/givendir.vim	/^function s:handler.getPrompt()$/;"	f
handler.getPrompt	vimfiles/bundle/fuzzyfinder/autoload/fuf/givenfile.vim	/^function s:handler.getPrompt()$/;"	f
handler.getPrompt	vimfiles/bundle/fuzzyfinder/autoload/fuf/help.vim	/^function s:handler.getPrompt()$/;"	f
handler.getPrompt	vimfiles/bundle/fuzzyfinder/autoload/fuf/jumplist.vim	/^function s:handler.getPrompt()$/;"	f
handler.getPrompt	vimfiles/bundle/fuzzyfinder/autoload/fuf/line.vim	/^function s:handler.getPrompt()$/;"	f
handler.getPrompt	vimfiles/bundle/fuzzyfinder/autoload/fuf/mrucmd.vim	/^function s:handler.getPrompt()$/;"	f
handler.getPrompt	vimfiles/bundle/fuzzyfinder/autoload/fuf/mrufile.vim	/^function s:handler.getPrompt()$/;"	f
handler.getPrompt	vimfiles/bundle/fuzzyfinder/autoload/fuf/quickfix.vim	/^function s:handler.getPrompt()$/;"	f
handler.getPrompt	vimfiles/bundle/fuzzyfinder/autoload/fuf/tag.vim	/^function s:handler.getPrompt()$/;"	f
handler.getPrompt	vimfiles/bundle/fuzzyfinder/autoload/fuf/taggedfile.vim	/^function s:handler.getPrompt()$/;"	f
handler.isOpenable	vimfiles/bundle/fuzzyfinder/autoload/fuf/bookmarkdir.vim	/^function s:handler.isOpenable(enteredPattern)$/;"	f
handler.isOpenable	vimfiles/bundle/fuzzyfinder/autoload/fuf/bookmarkfile.vim	/^function s:handler.isOpenable(enteredPattern)$/;"	f
handler.isOpenable	vimfiles/bundle/fuzzyfinder/autoload/fuf/buffer.vim	/^function s:handler.isOpenable(enteredPattern)$/;"	f
handler.isOpenable	vimfiles/bundle/fuzzyfinder/autoload/fuf/buffertag.vim	/^function s:handler.isOpenable(enteredPattern)$/;"	f
handler.isOpenable	vimfiles/bundle/fuzzyfinder/autoload/fuf/callbackfile.vim	/^function s:handler.isOpenable(enteredPattern)$/;"	f
handler.isOpenable	vimfiles/bundle/fuzzyfinder/autoload/fuf/callbackitem.vim	/^function s:handler.isOpenable(enteredPattern)$/;"	f
handler.isOpenable	vimfiles/bundle/fuzzyfinder/autoload/fuf/changelist.vim	/^function s:handler.isOpenable(enteredPattern)$/;"	f
handler.isOpenable	vimfiles/bundle/fuzzyfinder/autoload/fuf/coveragefile.vim	/^function s:handler.isOpenable(enteredPattern)$/;"	f
handler.isOpenable	vimfiles/bundle/fuzzyfinder/autoload/fuf/dir.vim	/^function s:handler.isOpenable(enteredPattern)$/;"	f
handler.isOpenable	vimfiles/bundle/fuzzyfinder/autoload/fuf/file.vim	/^function s:handler.isOpenable(enteredPattern)$/;"	f
handler.isOpenable	vimfiles/bundle/fuzzyfinder/autoload/fuf/givencmd.vim	/^function s:handler.isOpenable(enteredPattern)$/;"	f
handler.isOpenable	vimfiles/bundle/fuzzyfinder/autoload/fuf/givendir.vim	/^function s:handler.isOpenable(enteredPattern)$/;"	f
handler.isOpenable	vimfiles/bundle/fuzzyfinder/autoload/fuf/givenfile.vim	/^function s:handler.isOpenable(enteredPattern)$/;"	f
handler.isOpenable	vimfiles/bundle/fuzzyfinder/autoload/fuf/help.vim	/^function s:handler.isOpenable(enteredPattern)$/;"	f
handler.isOpenable	vimfiles/bundle/fuzzyfinder/autoload/fuf/jumplist.vim	/^function s:handler.isOpenable(enteredPattern)$/;"	f
handler.isOpenable	vimfiles/bundle/fuzzyfinder/autoload/fuf/line.vim	/^function s:handler.isOpenable(enteredPattern)$/;"	f
handler.isOpenable	vimfiles/bundle/fuzzyfinder/autoload/fuf/mrucmd.vim	/^function s:handler.isOpenable(enteredPattern)$/;"	f
handler.isOpenable	vimfiles/bundle/fuzzyfinder/autoload/fuf/mrufile.vim	/^function s:handler.isOpenable(enteredPattern)$/;"	f
handler.isOpenable	vimfiles/bundle/fuzzyfinder/autoload/fuf/quickfix.vim	/^function s:handler.isOpenable(enteredPattern)$/;"	f
handler.isOpenable	vimfiles/bundle/fuzzyfinder/autoload/fuf/tag.vim	/^function s:handler.isOpenable(enteredPattern)$/;"	f
handler.isOpenable	vimfiles/bundle/fuzzyfinder/autoload/fuf/taggedfile.vim	/^function s:handler.isOpenable(enteredPattern)$/;"	f
handler.makePatternSet	vimfiles/bundle/fuzzyfinder/autoload/fuf/bookmarkdir.vim	/^function s:handler.makePatternSet(patternBase)$/;"	f
handler.makePatternSet	vimfiles/bundle/fuzzyfinder/autoload/fuf/bookmarkfile.vim	/^function s:handler.makePatternSet(patternBase)$/;"	f
handler.makePatternSet	vimfiles/bundle/fuzzyfinder/autoload/fuf/buffer.vim	/^function s:handler.makePatternSet(patternBase)$/;"	f
handler.makePatternSet	vimfiles/bundle/fuzzyfinder/autoload/fuf/buffertag.vim	/^function s:handler.makePatternSet(patternBase)$/;"	f
handler.makePatternSet	vimfiles/bundle/fuzzyfinder/autoload/fuf/callbackfile.vim	/^function s:handler.makePatternSet(patternBase)$/;"	f
handler.makePatternSet	vimfiles/bundle/fuzzyfinder/autoload/fuf/callbackitem.vim	/^function s:handler.makePatternSet(patternBase)$/;"	f
handler.makePatternSet	vimfiles/bundle/fuzzyfinder/autoload/fuf/changelist.vim	/^function s:handler.makePatternSet(patternBase)$/;"	f
handler.makePatternSet	vimfiles/bundle/fuzzyfinder/autoload/fuf/coveragefile.vim	/^function s:handler.makePatternSet(patternBase)$/;"	f
handler.makePatternSet	vimfiles/bundle/fuzzyfinder/autoload/fuf/dir.vim	/^function s:handler.makePatternSet(patternBase)$/;"	f
handler.makePatternSet	vimfiles/bundle/fuzzyfinder/autoload/fuf/file.vim	/^function s:handler.makePatternSet(patternBase)$/;"	f
handler.makePatternSet	vimfiles/bundle/fuzzyfinder/autoload/fuf/givencmd.vim	/^function s:handler.makePatternSet(patternBase)$/;"	f
handler.makePatternSet	vimfiles/bundle/fuzzyfinder/autoload/fuf/givendir.vim	/^function s:handler.makePatternSet(patternBase)$/;"	f
handler.makePatternSet	vimfiles/bundle/fuzzyfinder/autoload/fuf/givenfile.vim	/^function s:handler.makePatternSet(patternBase)$/;"	f
handler.makePatternSet	vimfiles/bundle/fuzzyfinder/autoload/fuf/help.vim	/^function s:handler.makePatternSet(patternBase)$/;"	f
handler.makePatternSet	vimfiles/bundle/fuzzyfinder/autoload/fuf/jumplist.vim	/^function s:handler.makePatternSet(patternBase)$/;"	f
handler.makePatternSet	vimfiles/bundle/fuzzyfinder/autoload/fuf/line.vim	/^function s:handler.makePatternSet(patternBase)$/;"	f
handler.makePatternSet	vimfiles/bundle/fuzzyfinder/autoload/fuf/mrucmd.vim	/^function s:handler.makePatternSet(patternBase)$/;"	f
handler.makePatternSet	vimfiles/bundle/fuzzyfinder/autoload/fuf/mrufile.vim	/^function s:handler.makePatternSet(patternBase)$/;"	f
handler.makePatternSet	vimfiles/bundle/fuzzyfinder/autoload/fuf/quickfix.vim	/^function s:handler.makePatternSet(patternBase)$/;"	f
handler.makePatternSet	vimfiles/bundle/fuzzyfinder/autoload/fuf/tag.vim	/^function s:handler.makePatternSet(patternBase)$/;"	f
handler.makePatternSet	vimfiles/bundle/fuzzyfinder/autoload/fuf/taggedfile.vim	/^function s:handler.makePatternSet(patternBase)$/;"	f
handler.makePreviewLines	vimfiles/bundle/fuzzyfinder/autoload/fuf/bookmarkdir.vim	/^function s:handler.makePreviewLines(word, count)$/;"	f
handler.makePreviewLines	vimfiles/bundle/fuzzyfinder/autoload/fuf/bookmarkfile.vim	/^function s:handler.makePreviewLines(word, count)$/;"	f
handler.makePreviewLines	vimfiles/bundle/fuzzyfinder/autoload/fuf/buffer.vim	/^function s:handler.makePreviewLines(word, count)$/;"	f
handler.makePreviewLines	vimfiles/bundle/fuzzyfinder/autoload/fuf/buffertag.vim	/^function s:handler.makePreviewLines(word, count)$/;"	f
handler.makePreviewLines	vimfiles/bundle/fuzzyfinder/autoload/fuf/callbackfile.vim	/^function s:handler.makePreviewLines(word, count)$/;"	f
handler.makePreviewLines	vimfiles/bundle/fuzzyfinder/autoload/fuf/callbackitem.vim	/^function s:handler.makePreviewLines(word, count)$/;"	f
handler.makePreviewLines	vimfiles/bundle/fuzzyfinder/autoload/fuf/changelist.vim	/^function s:handler.makePreviewLines(word, count)$/;"	f
handler.makePreviewLines	vimfiles/bundle/fuzzyfinder/autoload/fuf/coveragefile.vim	/^function s:handler.makePreviewLines(word, count)$/;"	f
handler.makePreviewLines	vimfiles/bundle/fuzzyfinder/autoload/fuf/dir.vim	/^function s:handler.makePreviewLines(word, count)$/;"	f
handler.makePreviewLines	vimfiles/bundle/fuzzyfinder/autoload/fuf/file.vim	/^function s:handler.makePreviewLines(word, count)$/;"	f
handler.makePreviewLines	vimfiles/bundle/fuzzyfinder/autoload/fuf/givencmd.vim	/^function s:handler.makePreviewLines(word, count)$/;"	f
handler.makePreviewLines	vimfiles/bundle/fuzzyfinder/autoload/fuf/givendir.vim	/^function s:handler.makePreviewLines(word, count)$/;"	f
handler.makePreviewLines	vimfiles/bundle/fuzzyfinder/autoload/fuf/givenfile.vim	/^function s:handler.makePreviewLines(word, count)$/;"	f
handler.makePreviewLines	vimfiles/bundle/fuzzyfinder/autoload/fuf/help.vim	/^function s:handler.makePreviewLines(word, count)$/;"	f
handler.makePreviewLines	vimfiles/bundle/fuzzyfinder/autoload/fuf/jumplist.vim	/^function s:handler.makePreviewLines(word, count)$/;"	f
handler.makePreviewLines	vimfiles/bundle/fuzzyfinder/autoload/fuf/line.vim	/^function s:handler.makePreviewLines(word, count)$/;"	f
handler.makePreviewLines	vimfiles/bundle/fuzzyfinder/autoload/fuf/mrucmd.vim	/^function s:handler.makePreviewLines(word, count)$/;"	f
handler.makePreviewLines	vimfiles/bundle/fuzzyfinder/autoload/fuf/mrufile.vim	/^function s:handler.makePreviewLines(word, count)$/;"	f
handler.makePreviewLines	vimfiles/bundle/fuzzyfinder/autoload/fuf/quickfix.vim	/^function s:handler.makePreviewLines(word, count)$/;"	f
handler.makePreviewLines	vimfiles/bundle/fuzzyfinder/autoload/fuf/tag.vim	/^function s:handler.makePreviewLines(word, count)$/;"	f
handler.makePreviewLines	vimfiles/bundle/fuzzyfinder/autoload/fuf/taggedfile.vim	/^function s:handler.makePreviewLines(word, count)$/;"	f
handler.onModeEnterPost	vimfiles/bundle/fuzzyfinder/autoload/fuf/bookmarkdir.vim	/^function s:handler.onModeEnterPost()$/;"	f
handler.onModeEnterPost	vimfiles/bundle/fuzzyfinder/autoload/fuf/bookmarkfile.vim	/^function s:handler.onModeEnterPost()$/;"	f
handler.onModeEnterPost	vimfiles/bundle/fuzzyfinder/autoload/fuf/buffer.vim	/^function s:handler.onModeEnterPost()$/;"	f
handler.onModeEnterPost	vimfiles/bundle/fuzzyfinder/autoload/fuf/buffertag.vim	/^function s:handler.onModeEnterPost()$/;"	f
handler.onModeEnterPost	vimfiles/bundle/fuzzyfinder/autoload/fuf/callbackfile.vim	/^function s:handler.onModeEnterPost()$/;"	f
handler.onModeEnterPost	vimfiles/bundle/fuzzyfinder/autoload/fuf/callbackitem.vim	/^function s:handler.onModeEnterPost()$/;"	f
handler.onModeEnterPost	vimfiles/bundle/fuzzyfinder/autoload/fuf/changelist.vim	/^function s:handler.onModeEnterPost()$/;"	f
handler.onModeEnterPost	vimfiles/bundle/fuzzyfinder/autoload/fuf/coveragefile.vim	/^function s:handler.onModeEnterPost()$/;"	f
handler.onModeEnterPost	vimfiles/bundle/fuzzyfinder/autoload/fuf/dir.vim	/^function s:handler.onModeEnterPost()$/;"	f
handler.onModeEnterPost	vimfiles/bundle/fuzzyfinder/autoload/fuf/file.vim	/^function s:handler.onModeEnterPost()$/;"	f
handler.onModeEnterPost	vimfiles/bundle/fuzzyfinder/autoload/fuf/givencmd.vim	/^function s:handler.onModeEnterPost()$/;"	f
handler.onModeEnterPost	vimfiles/bundle/fuzzyfinder/autoload/fuf/givendir.vim	/^function s:handler.onModeEnterPost()$/;"	f
handler.onModeEnterPost	vimfiles/bundle/fuzzyfinder/autoload/fuf/givenfile.vim	/^function s:handler.onModeEnterPost()$/;"	f
handler.onModeEnterPost	vimfiles/bundle/fuzzyfinder/autoload/fuf/help.vim	/^function s:handler.onModeEnterPost()$/;"	f
handler.onModeEnterPost	vimfiles/bundle/fuzzyfinder/autoload/fuf/jumplist.vim	/^function s:handler.onModeEnterPost()$/;"	f
handler.onModeEnterPost	vimfiles/bundle/fuzzyfinder/autoload/fuf/line.vim	/^function s:handler.onModeEnterPost()$/;"	f
handler.onModeEnterPost	vimfiles/bundle/fuzzyfinder/autoload/fuf/mrucmd.vim	/^function s:handler.onModeEnterPost()$/;"	f
handler.onModeEnterPost	vimfiles/bundle/fuzzyfinder/autoload/fuf/mrufile.vim	/^function s:handler.onModeEnterPost()$/;"	f
handler.onModeEnterPost	vimfiles/bundle/fuzzyfinder/autoload/fuf/quickfix.vim	/^function s:handler.onModeEnterPost()$/;"	f
handler.onModeEnterPost	vimfiles/bundle/fuzzyfinder/autoload/fuf/tag.vim	/^function s:handler.onModeEnterPost()$/;"	f
handler.onModeEnterPost	vimfiles/bundle/fuzzyfinder/autoload/fuf/taggedfile.vim	/^function s:handler.onModeEnterPost()$/;"	f
handler.onModeEnterPre	vimfiles/bundle/fuzzyfinder/autoload/fuf/bookmarkdir.vim	/^function s:handler.onModeEnterPre()$/;"	f
handler.onModeEnterPre	vimfiles/bundle/fuzzyfinder/autoload/fuf/bookmarkfile.vim	/^function s:handler.onModeEnterPre()$/;"	f
handler.onModeEnterPre	vimfiles/bundle/fuzzyfinder/autoload/fuf/buffer.vim	/^function s:handler.onModeEnterPre()$/;"	f
handler.onModeEnterPre	vimfiles/bundle/fuzzyfinder/autoload/fuf/buffertag.vim	/^function s:handler.onModeEnterPre()$/;"	f
handler.onModeEnterPre	vimfiles/bundle/fuzzyfinder/autoload/fuf/callbackfile.vim	/^function s:handler.onModeEnterPre()$/;"	f
handler.onModeEnterPre	vimfiles/bundle/fuzzyfinder/autoload/fuf/callbackitem.vim	/^function s:handler.onModeEnterPre()$/;"	f
handler.onModeEnterPre	vimfiles/bundle/fuzzyfinder/autoload/fuf/changelist.vim	/^function s:handler.onModeEnterPre()$/;"	f
handler.onModeEnterPre	vimfiles/bundle/fuzzyfinder/autoload/fuf/coveragefile.vim	/^function s:handler.onModeEnterPre()$/;"	f
handler.onModeEnterPre	vimfiles/bundle/fuzzyfinder/autoload/fuf/dir.vim	/^function s:handler.onModeEnterPre()$/;"	f
handler.onModeEnterPre	vimfiles/bundle/fuzzyfinder/autoload/fuf/file.vim	/^function s:handler.onModeEnterPre()$/;"	f
handler.onModeEnterPre	vimfiles/bundle/fuzzyfinder/autoload/fuf/givencmd.vim	/^function s:handler.onModeEnterPre()$/;"	f
handler.onModeEnterPre	vimfiles/bundle/fuzzyfinder/autoload/fuf/givendir.vim	/^function s:handler.onModeEnterPre()$/;"	f
handler.onModeEnterPre	vimfiles/bundle/fuzzyfinder/autoload/fuf/givenfile.vim	/^function s:handler.onModeEnterPre()$/;"	f
handler.onModeEnterPre	vimfiles/bundle/fuzzyfinder/autoload/fuf/help.vim	/^function s:handler.onModeEnterPre()$/;"	f
handler.onModeEnterPre	vimfiles/bundle/fuzzyfinder/autoload/fuf/jumplist.vim	/^function s:handler.onModeEnterPre()$/;"	f
handler.onModeEnterPre	vimfiles/bundle/fuzzyfinder/autoload/fuf/line.vim	/^function s:handler.onModeEnterPre()$/;"	f
handler.onModeEnterPre	vimfiles/bundle/fuzzyfinder/autoload/fuf/mrucmd.vim	/^function s:handler.onModeEnterPre()$/;"	f
handler.onModeEnterPre	vimfiles/bundle/fuzzyfinder/autoload/fuf/mrufile.vim	/^function s:handler.onModeEnterPre()$/;"	f
handler.onModeEnterPre	vimfiles/bundle/fuzzyfinder/autoload/fuf/quickfix.vim	/^function s:handler.onModeEnterPre()$/;"	f
handler.onModeEnterPre	vimfiles/bundle/fuzzyfinder/autoload/fuf/tag.vim	/^function s:handler.onModeEnterPre()$/;"	f
handler.onModeEnterPre	vimfiles/bundle/fuzzyfinder/autoload/fuf/taggedfile.vim	/^function s:handler.onModeEnterPre()$/;"	f
handler.onModeLeavePost	vimfiles/bundle/fuzzyfinder/autoload/fuf/bookmarkdir.vim	/^function s:handler.onModeLeavePost(opened)$/;"	f
handler.onModeLeavePost	vimfiles/bundle/fuzzyfinder/autoload/fuf/bookmarkfile.vim	/^function s:handler.onModeLeavePost(opened)$/;"	f
handler.onModeLeavePost	vimfiles/bundle/fuzzyfinder/autoload/fuf/buffer.vim	/^function s:handler.onModeLeavePost(opened)$/;"	f
handler.onModeLeavePost	vimfiles/bundle/fuzzyfinder/autoload/fuf/buffertag.vim	/^function s:handler.onModeLeavePost(opened)$/;"	f
handler.onModeLeavePost	vimfiles/bundle/fuzzyfinder/autoload/fuf/callbackfile.vim	/^function s:handler.onModeLeavePost(opened)$/;"	f
handler.onModeLeavePost	vimfiles/bundle/fuzzyfinder/autoload/fuf/callbackitem.vim	/^function s:handler.onModeLeavePost(opened)$/;"	f
handler.onModeLeavePost	vimfiles/bundle/fuzzyfinder/autoload/fuf/changelist.vim	/^function s:handler.onModeLeavePost(opened)$/;"	f
handler.onModeLeavePost	vimfiles/bundle/fuzzyfinder/autoload/fuf/coveragefile.vim	/^function s:handler.onModeLeavePost(opened)$/;"	f
handler.onModeLeavePost	vimfiles/bundle/fuzzyfinder/autoload/fuf/dir.vim	/^function s:handler.onModeLeavePost(opened)$/;"	f
handler.onModeLeavePost	vimfiles/bundle/fuzzyfinder/autoload/fuf/file.vim	/^function s:handler.onModeLeavePost(opened)$/;"	f
handler.onModeLeavePost	vimfiles/bundle/fuzzyfinder/autoload/fuf/givencmd.vim	/^function s:handler.onModeLeavePost(opened)$/;"	f
handler.onModeLeavePost	vimfiles/bundle/fuzzyfinder/autoload/fuf/givendir.vim	/^function s:handler.onModeLeavePost(opened)$/;"	f
handler.onModeLeavePost	vimfiles/bundle/fuzzyfinder/autoload/fuf/givenfile.vim	/^function s:handler.onModeLeavePost(opened)$/;"	f
handler.onModeLeavePost	vimfiles/bundle/fuzzyfinder/autoload/fuf/help.vim	/^function s:handler.onModeLeavePost(opened)$/;"	f
handler.onModeLeavePost	vimfiles/bundle/fuzzyfinder/autoload/fuf/jumplist.vim	/^function s:handler.onModeLeavePost(opened)$/;"	f
handler.onModeLeavePost	vimfiles/bundle/fuzzyfinder/autoload/fuf/line.vim	/^function s:handler.onModeLeavePost(opened)$/;"	f
handler.onModeLeavePost	vimfiles/bundle/fuzzyfinder/autoload/fuf/mrucmd.vim	/^function s:handler.onModeLeavePost(opened)$/;"	f
handler.onModeLeavePost	vimfiles/bundle/fuzzyfinder/autoload/fuf/mrufile.vim	/^function s:handler.onModeLeavePost(opened)$/;"	f
handler.onModeLeavePost	vimfiles/bundle/fuzzyfinder/autoload/fuf/quickfix.vim	/^function s:handler.onModeLeavePost(opened)$/;"	f
handler.onModeLeavePost	vimfiles/bundle/fuzzyfinder/autoload/fuf/tag.vim	/^function s:handler.onModeLeavePost(opened)$/;"	f
handler.onModeLeavePost	vimfiles/bundle/fuzzyfinder/autoload/fuf/taggedfile.vim	/^function s:handler.onModeLeavePost(opened)$/;"	f
handler.onOpen	vimfiles/bundle/fuzzyfinder/autoload/fuf/bookmarkdir.vim	/^function s:handler.onOpen(word, mode)$/;"	f
handler.onOpen	vimfiles/bundle/fuzzyfinder/autoload/fuf/bookmarkfile.vim	/^function s:handler.onOpen(word, mode)$/;"	f
handler.onOpen	vimfiles/bundle/fuzzyfinder/autoload/fuf/buffer.vim	/^function s:handler.onOpen(word, mode)$/;"	f
handler.onOpen	vimfiles/bundle/fuzzyfinder/autoload/fuf/buffertag.vim	/^function s:handler.onOpen(word, mode)$/;"	f
handler.onOpen	vimfiles/bundle/fuzzyfinder/autoload/fuf/callbackfile.vim	/^function s:handler.onOpen(word, mode)$/;"	f
handler.onOpen	vimfiles/bundle/fuzzyfinder/autoload/fuf/callbackitem.vim	/^function s:handler.onOpen(word, mode)$/;"	f
handler.onOpen	vimfiles/bundle/fuzzyfinder/autoload/fuf/changelist.vim	/^function s:handler.onOpen(word, mode)$/;"	f
handler.onOpen	vimfiles/bundle/fuzzyfinder/autoload/fuf/coveragefile.vim	/^function s:handler.onOpen(word, mode)$/;"	f
handler.onOpen	vimfiles/bundle/fuzzyfinder/autoload/fuf/dir.vim	/^function s:handler.onOpen(word, mode)$/;"	f
handler.onOpen	vimfiles/bundle/fuzzyfinder/autoload/fuf/file.vim	/^function s:handler.onOpen(word, mode)$/;"	f
handler.onOpen	vimfiles/bundle/fuzzyfinder/autoload/fuf/givencmd.vim	/^function s:handler.onOpen(word, mode)$/;"	f
handler.onOpen	vimfiles/bundle/fuzzyfinder/autoload/fuf/givendir.vim	/^function s:handler.onOpen(word, mode)$/;"	f
handler.onOpen	vimfiles/bundle/fuzzyfinder/autoload/fuf/givenfile.vim	/^function s:handler.onOpen(word, mode)$/;"	f
handler.onOpen	vimfiles/bundle/fuzzyfinder/autoload/fuf/help.vim	/^function s:handler.onOpen(word, mode)$/;"	f
handler.onOpen	vimfiles/bundle/fuzzyfinder/autoload/fuf/jumplist.vim	/^function s:handler.onOpen(word, mode)$/;"	f
handler.onOpen	vimfiles/bundle/fuzzyfinder/autoload/fuf/line.vim	/^function s:handler.onOpen(word, mode)$/;"	f
handler.onOpen	vimfiles/bundle/fuzzyfinder/autoload/fuf/mrucmd.vim	/^function s:handler.onOpen(word, mode)$/;"	f
handler.onOpen	vimfiles/bundle/fuzzyfinder/autoload/fuf/mrufile.vim	/^function s:handler.onOpen(word, mode)$/;"	f
handler.onOpen	vimfiles/bundle/fuzzyfinder/autoload/fuf/quickfix.vim	/^function s:handler.onOpen(word, mode)$/;"	f
handler.onOpen	vimfiles/bundle/fuzzyfinder/autoload/fuf/tag.vim	/^function s:handler.onOpen(word, mode)$/;"	f
handler.onOpen	vimfiles/bundle/fuzzyfinder/autoload/fuf/taggedfile.vim	/^function s:handler.onOpen(word, mode)$/;"	f
handlerBase.addStat	vimfiles/bundle/fuzzyfinder/autoload/fuf.vim	/^function s:handlerBase.addStat(pattern, word)$/;"	f
handlerBase.concretize	vimfiles/bundle/fuzzyfinder/autoload/fuf.vim	/^function s:handlerBase.concretize(deriv)$/;"	f
handlerBase.existsPrompt	vimfiles/bundle/fuzzyfinder/autoload/fuf.vim	/^function s:handlerBase.existsPrompt(line)$/;"	f
handlerBase.getMatchingCompleteItems	vimfiles/bundle/fuzzyfinder/autoload/fuf.vim	/^function s:handlerBase.getMatchingCompleteItems(patternBase)$/;"	f
handlerBase.onBs	vimfiles/bundle/fuzzyfinder/autoload/fuf.vim	/^function s:handlerBase.onBs()$/;"	f
handlerBase.onComplete	vimfiles/bundle/fuzzyfinder/autoload/fuf.vim	/^function s:handlerBase.onComplete(findstart, base)$/;"	f
handlerBase.onCr	vimfiles/bundle/fuzzyfinder/autoload/fuf.vim	/^function s:handlerBase.onCr(openType)$/;"	f
handlerBase.onCursorMovedI	vimfiles/bundle/fuzzyfinder/autoload/fuf.vim	/^function s:handlerBase.onCursorMovedI()$/;"	f
handlerBase.onDeleteWord	vimfiles/bundle/fuzzyfinder/autoload/fuf.vim	/^function s:handlerBase.onDeleteWord()$/;"	f
handlerBase.onInsertLeave	vimfiles/bundle/fuzzyfinder/autoload/fuf.vim	/^function s:handlerBase.onInsertLeave()$/;"	f
handlerBase.onPreviewBase	vimfiles/bundle/fuzzyfinder/autoload/fuf.vim	/^function s:handlerBase.onPreviewBase(repeatable)$/;"	f
handlerBase.onRecallPattern	vimfiles/bundle/fuzzyfinder/autoload/fuf.vim	/^function s:handlerBase.onRecallPattern(shift)$/;"	f
handlerBase.onSwitchMatching	vimfiles/bundle/fuzzyfinder/autoload/fuf.vim	/^function s:handlerBase.onSwitchMatching()$/;"	f
handlerBase.onSwitchMode	vimfiles/bundle/fuzzyfinder/autoload/fuf.vim	/^function s:handlerBase.onSwitchMode(shift)$/;"	f
handlerBase.removePrompt	vimfiles/bundle/fuzzyfinder/autoload/fuf.vim	/^function s:handlerBase.removePrompt(line)$/;"	f
handlerBase.restorePrompt	vimfiles/bundle/fuzzyfinder/autoload/fuf.vim	/^function s:handlerBase.restorePrompt(line)$/;"	f
has_syntax	vimfiles/bundle-disabled/command-t/ruby/command-t/vim.rb	/^    def self.has_syntax?$/;"	F	class:CommandT.VIM
hdrdir	vimfiles/bundle-disabled/command-t/ruby/command-t/Makefile	/^hdrdir = $(topdir)$/;"	m
helperEdit	vimfiles/bundle/vim-rails/autoload/rails.vim	/^function! s:helperEdit(cmd,...)$/;"	f
helperList	vimfiles/bundle/vim-rails/autoload/rails.vim	/^function! s:helperList(A,L,P)$/;"	f
helpermethods	vimfiles/bundle/vim-rails/autoload/rails.vim	/^function! s:helpermethods()$/;"	f
hide	vimfiles/bundle-disabled/command-t/ruby/command-t/controller.rb	/^    def hide$/;"	f	class:CommandT.Controller
hide_cursor	vimfiles/bundle-disabled/command-t/ruby/command-t/match_window.rb	/^    def hide_cursor$/;"	f	class:CommandT.MatchWindow
highlightError	vimfiles/bundle/fuzzyfinder/autoload/fuf.vim	/^function s:highlightError()$/;"	f
highlightPrompt	vimfiles/bundle/fuzzyfinder/autoload/fuf.vim	/^function s:highlightPrompt(prompt)$/;"	f
htmldir	vimfiles/bundle-disabled/command-t/ruby/command-t/Makefile	/^htmldir = $(docdir)$/;"	m
iM	vimfiles/bundle/vim-ruby/ftplugin/ruby.vim	/^    onoremap <silent> <buffer> iM :<C-U>call <SID>wrap_i('[[','][')<CR>$/;"	m
im	vimfiles/bundle/vim-ruby/ftplugin/ruby.vim	/^    onoremap <silent> <buffer> im :<C-U>call <SID>wrap_i('[m',']M')<CR>$/;"	m
includedir	vimfiles/bundle-disabled/command-t/ruby/command-t/Makefile	/^includedir = $(prefix)\/include$/;"	m
indentLevelFor	vimfiles/bundle-disabled/nerdtree/plugin/NERD_tree.vim	/^function! s:indentLevelFor(line)$/;"	f
infodir	vimfiles/bundle-disabled/command-t/ruby/command-t/Makefile	/^infodir = $(datarootdir)\/info$/;"	m
initNerdTree	vimfiles/bundle-disabled/nerdtree/plugin/NERD_tree.vim	/^function! s:initNerdTree(name)$/;"	f
initNerdTreeInPlace	vimfiles/bundle-disabled/nerdtree/plugin/NERD_tree.vim	/^function! s:initNerdTreeInPlace(dir)$/;"	f
initNerdTreeMirror	vimfiles/bundle-disabled/nerdtree/plugin/NERD_tree.vim	/^function! s:initNerdTreeMirror()$/;"	f
initOpenURL	vimfiles/bundle/vim-rails/autoload/rails.vim	/^function! s:initOpenURL()$/;"	f
initVariable	vimfiles/bundle-disabled/nerdtree/plugin/NERD_tree.vim	/^function! s:initVariable(var, value)$/;"	f
initialize	vimfiles/bundle-disabled/command-t/ruby/command-t/controller.rb	/^    def initialize$/;"	f	class:CommandT.Controller
initialize	vimfiles/bundle-disabled/command-t/ruby/command-t/finder.rb	/^    def initialize path = Dir.pwd, options = {}$/;"	f	class:CommandT.Finder
initialize	vimfiles/bundle-disabled/command-t/ruby/command-t/finder/buffer_finder.rb	/^    def initialize$/;"	f	class:CommandT.BufferFinder
initialize	vimfiles/bundle-disabled/command-t/ruby/command-t/finder/file_finder.rb	/^    def initialize path = Dir.pwd, options = {}$/;"	f	class:CommandT.FileFinder
initialize	vimfiles/bundle-disabled/command-t/ruby/command-t/match_window.rb	/^    def initialize options = {}$/;"	f	class:CommandT.MatchWindow
initialize	vimfiles/bundle-disabled/command-t/ruby/command-t/prompt.rb	/^    def initialize$/;"	f	class:CommandT.Prompt
initialize	vimfiles/bundle-disabled/command-t/ruby/command-t/scanner/file_scanner.rb	/^    def initialize path = Dir.pwd, options = {}$/;"	f	class:CommandT.FileScanner
initialize	vimfiles/bundle-disabled/command-t/ruby/command-t/settings.rb	/^    def initialize$/;"	f	class:CommandT.Settings
initialize	vimfiles/bundle/fuzzyfinder/plugin/fuf.vim	/^function s:initialize()$/;"	f
initialize	vimfiles/bundle/vim-ruby/bin/vim-ruby-install.rb	/^    def initialize(path)$/;"	f	class:VimRubyInstaller.BackupDir
initialize	vimfiles/bundle/vim-ruby/bin/vim-ruby-install.rb	/^  def initialize(directory, writer)$/;"	f	class:TargetDirectory
initialize	vimfiles/bundle/vim-ruby/bin/vim-ruby-install.rb	/^  def initialize(ending, file_permissions=0644, directory_permissions=0755)$/;"	f	class:FileWriter
initialize	vimfiles/bundle/vim-ruby/bin/vim-ruby-install.rb	/^  def initialize(source, target)$/;"	f	class:VimRubyInstaller
initializerEdit	vimfiles/bundle/vim-rails/autoload/rails.vim	/^function! s:initializerEdit(cmd,...)$/;"	f
initializerList	vimfiles/bundle/vim-rails/autoload/rails.vim	/^function! s:initializerList(A,L,P)$/;"	f
install	vimfiles/bundle/vim-ruby/bin/vim-ruby-install.rb	/^  def install$/;"	f	class:VimRubyInstaller
instaweb_url	vimfiles/bundle/fugitive/plugin/fugitive.vim	/^function! s:instaweb_url(repo,rev,commit,path,type,...) abort$/;"	f
integrationtestEdit	vimfiles/bundle/vim-rails/autoload/rails.vim	/^function! s:integrationtestEdit(cmd,...)$/;"	f
integrationtestList	vimfiles/bundle/vim-rails/autoload/rails.vim	/^function! s:integrationtestList(A,L,P)$/;"	f
interpretPrimaryPatternForNonPath	vimfiles/bundle/fuzzyfinder/autoload/fuf.vim	/^function s:interpretPrimaryPatternForNonPath(pattern)$/;"	f
interpretPrimaryPatternForPath	vimfiles/bundle/fuzzyfinder/autoload/fuf.vim	/^function s:interpretPrimaryPatternForPath(pattern)$/;"	f
interpretPrimaryPatternForPathTail	vimfiles/bundle/fuzzyfinder/autoload/fuf.vim	/^function s:interpretPrimaryPatternForPathTail(pattern)$/;"	f
invertrange	vimfiles/bundle/vim-rails/autoload/rails.vim	/^function! s:invertrange(beg,end)$/;"	f
isTreeOpen	vimfiles/bundle-disabled/nerdtree/plugin/NERD_tree.vim	/^function! s:isTreeOpen()$/;"	f
isWindowUsable	vimfiles/bundle-disabled/nerdtree/plugin/NERD_tree.vim	/^function! s:isWindowUsable(winnumber)$/;"	f
javascriptEdit	vimfiles/bundle/vim-rails/autoload/rails.vim	/^function! s:javascriptEdit(cmd,...)$/;"	f
javascriptList	vimfiles/bundle/vim-rails/autoload/rails.vim	/^function! s:javascriptList(A,L,P)$/;"	f
jumpToBookmark	vimfiles/bundle/fuzzyfinder/autoload/fuf/bookmarkfile.vim	/^function s:jumpToBookmark(path, mode, pattern, lnum)$/;"	f
jumpToChild	vimfiles/bundle-disabled/nerdtree/plugin/NERD_tree.vim	/^function! s:jumpToChild(direction)$/;"	f
jumpToFirstChild	vimfiles/bundle-disabled/nerdtree/plugin/NERD_tree.vim	/^function! s:jumpToFirstChild()$/;"	f
jumpToLastChild	vimfiles/bundle-disabled/nerdtree/plugin/NERD_tree.vim	/^function! s:jumpToLastChild()$/;"	f
jumpToParent	vimfiles/bundle-disabled/nerdtree/plugin/NERD_tree.vim	/^function! s:jumpToParent()$/;"	f
jumpToRoot	vimfiles/bundle-disabled/nerdtree/plugin/NERD_tree.vim	/^function! s:jumpToRoot()$/;"	f
jumpToSibling	vimfiles/bundle-disabled/nerdtree/plugin/NERD_tree.vim	/^function! s:jumpToSibling(forward)$/;"	f
jumpToTag	vimfiles/bundle/fuzzyfinder/autoload/fuf/buffertag.vim	/^function s:jumpToTag(item, mode)$/;"	f
l9#async#execute	vimfiles/bundle/l9/autoload/l9/async.vim	/^function l9#async#execute(key, cmd, cwd, input, appends)$/;"	f
l9#async#listActiveWorkers	vimfiles/bundle/l9/autoload/l9/async.vim	/^function l9#async#listActiveWorkers()$/;"	f
l9#async#listWorkers	vimfiles/bundle/l9/autoload/l9/async.vim	/^function l9#async#listWorkers()$/;"	f
l9#async#read	vimfiles/bundle/l9/autoload/l9/async.vim	/^function l9#async#read(key)$/;"	f
l9#completeForInputHl	vimfiles/bundle/l9/autoload/l9.vim	/^function l9#completeForInputHl(lead, line, pos)$/;"	f
l9#concat	vimfiles/bundle/l9/autoload/l9.vim	/^function l9#concat(items)$/;"	f
l9#concatPaths	vimfiles/bundle/l9/autoload/l9.vim	/^function l9#concatPaths(paths)$/;"	f
l9#convertWildcardToRegexp	vimfiles/bundle/l9/autoload/l9.vim	/^function l9#convertWildcardToRegexp(expr)$/;"	f
l9#defineVariableDefault	vimfiles/bundle/l9/autoload/l9.vim	/^function l9#defineVariableDefault(name, default)$/;"	f
l9#deleteAllBuffersExcept	vimfiles/bundle/l9/autoload/l9.vim	/^function l9#deleteAllBuffersExcept(files)$/;"	f
l9#echoHl	vimfiles/bundle/l9/autoload/l9.vim	/^function l9#echoHl(hl, msg, prefix, addingHistory)$/;"	f
l9#filterWithLimit	vimfiles/bundle/l9/autoload/l9.vim	/^function l9#filterWithLimit(items, expr, limit)$/;"	f
l9#getPathSeparator	vimfiles/bundle/l9/autoload/l9.vim	/^function l9#getPathSeparator()$/;"	f
l9#getSelectedText	vimfiles/bundle/l9/autoload/l9.vim	/^function l9#getSelectedText()$/;"	f
l9#getVersion	vimfiles/bundle/l9/autoload/l9.vim	/^function l9#getVersion()$/;"	f
l9#grepBuffers	vimfiles/bundle/l9/autoload/l9.vim	/^function l9#grepBuffers(pattern, bufNrs)$/;"	f
l9#grepFiles	vimfiles/bundle/l9/autoload/l9.vim	/^function l9#grepFiles(pattern, files)$/;"	f
l9#guardScriptLoading	vimfiles/bundle/l9/autoload/l9.vim	/^function l9#guardScriptLoading(path, vimVersion, l9Version, exprs)$/;"	f
l9#hash224	vimfiles/bundle/l9/autoload/l9.vim	/^function l9#hash224(str)$/;"	f
l9#inputHl	vimfiles/bundle/l9/autoload/l9.vim	/^function l9#inputHl(hl, ...)$/;"	f
l9#isCompatible	vimfiles/bundle/l9/autoload/l9.vim	/^function l9#isCompatible(ver)$/;"	f
l9#loadFilesToBuffers	vimfiles/bundle/l9/autoload/l9.vim	/^function l9#loadFilesToBuffers(files)$/;"	f
l9#loadScript	vimfiles/bundle/l9/autoload/l9.vim	/^function l9#loadScript(text)$/;"	f
l9#modifyPathRelativeToDir	vimfiles/bundle/l9/autoload/l9.vim	/^function l9#modifyPathRelativeToDir(path, dir)$/;"	f
l9#moveToBufferWindowInCurrentTabpage	vimfiles/bundle/l9/autoload/l9.vim	/^function l9#moveToBufferWindowInCurrentTabpage(bufNr)$/;"	f
l9#moveToBufferWindowInOtherTabpage	vimfiles/bundle/l9/autoload/l9.vim	/^function l9#moveToBufferWindowInOtherTabpage(bufNr)$/;"	f
l9#notifyBalloonly	vimfiles/bundle/l9/autoload/l9.vim	/^function l9#notifyBalloonly(msg)$/;"	f
l9#notifyExternally	vimfiles/bundle/l9/autoload/l9.vim	/^function l9#notifyExternally(msg)$/;"	f
l9#notifyScreen	vimfiles/bundle/l9/autoload/l9.vim	/^function l9#notifyScreen(msg)$/;"	f
l9#notifyTmux	vimfiles/bundle/l9/autoload/l9.vim	/^function l9#notifyTmux(msg)$/;"	f
l9#placeSign	vimfiles/bundle/l9/autoload/l9.vim	/^function l9#placeSign(linehl, text, texthl, locations)$/;"	f
l9#quickfix#compareEntries	vimfiles/bundle/l9/autoload/l9/quickfix.vim	/^function l9#quickfix#compareEntries(e0, e1)$/;"	f
l9#quickfix#isWindowOpened	vimfiles/bundle/l9/autoload/l9/quickfix.vim	/^function l9#quickfix#isWindowOpened()$/;"	f
l9#quickfix#openIfNotEmpty	vimfiles/bundle/l9/autoload/l9/quickfix.vim	/^function l9#quickfix#openIfNotEmpty(onlyRecognized, holdCursor)$/;"	f
l9#quickfix#placeSign	vimfiles/bundle/l9/autoload/l9/quickfix.vim	/^function l9#quickfix#placeSign()$/;"	f
l9#quickfix#setMakeResult	vimfiles/bundle/l9/autoload/l9/quickfix.vim	/^function l9#quickfix#setMakeResult(lines)$/;"	f
l9#quickfix#sort	vimfiles/bundle/l9/autoload/l9/quickfix.vim	/^function l9#quickfix#sort()$/;"	f
l9#quickfix#toggleWindow	vimfiles/bundle/l9/autoload/l9/quickfix.vim	/^function l9#quickfix#toggleWindow()$/;"	f
l9#readFile	vimfiles/bundle/l9/autoload/l9.vim	/^function l9#readFile(...)$/;"	f
l9#removeIf	vimfiles/bundle/l9/autoload/l9.vim	/^function l9#removeIf(items, expr)$/;"	f
l9#removeLinesBetween	vimfiles/bundle/l9/autoload/l9.vim	/^function l9#removeLinesBetween(lines, begin, end)$/;"	f
l9#shiftWinNextTabpage	vimfiles/bundle/l9/autoload/l9.vim	/^function l9#shiftWinNextTabpage()$/;"	f
l9#shiftWinPrevTabpage	vimfiles/bundle/l9/autoload/l9.vim	/^function l9#shiftWinPrevTabpage()$/;"	f
l9#snipHead	vimfiles/bundle/l9/autoload/l9.vim	/^function l9#snipHead(str, len, mask)$/;"	f
l9#snipMid	vimfiles/bundle/l9/autoload/l9.vim	/^function l9#snipMid(str, len, mask)$/;"	f
l9#snipTail	vimfiles/bundle/l9/autoload/l9.vim	/^function l9#snipTail(str, len, mask)$/;"	f
l9#tempbuffer#close	vimfiles/bundle/l9/autoload/l9/tempbuffer.vim	/^function l9#tempbuffer#close(bufname)$/;"	f
l9#tempbuffer#isOpen	vimfiles/bundle/l9/autoload/l9/tempbuffer.vim	/^function l9#tempbuffer#isOpen(bufname)$/;"	f
l9#tempbuffer#moveTo	vimfiles/bundle/l9/autoload/l9/tempbuffer.vim	/^function l9#tempbuffer#moveTo(bufname)$/;"	f
l9#tempbuffer#openReadOnly	vimfiles/bundle/l9/autoload/l9/tempbuffer.vim	/^function l9#tempbuffer#openReadOnly(bufname, filetype, lines, topleft, vertical, height, listener)$/;"	f
l9#tempbuffer#openScratch	vimfiles/bundle/l9/autoload/l9/tempbuffer.vim	/^function l9#tempbuffer#openScratch(bufname, filetype, lines, topleft, vertical, height, listener)$/;"	f
l9#tempbuffer#openWritable	vimfiles/bundle/l9/autoload/l9/tempbuffer.vim	/^function l9#tempbuffer#openWritable(bufname, filetype, lines, topleft, vertical, height, listener)$/;"	f
l9#tempvariables#end	vimfiles/bundle/l9/autoload/l9/tempvariables.vim	/^function l9#tempvariables#end(group)$/;"	f
l9#tempvariables#getList	vimfiles/bundle/l9/autoload/l9/tempvariables.vim	/^function l9#tempvariables#getList(group)$/;"	f
l9#tempvariables#set	vimfiles/bundle/l9/autoload/l9/tempvariables.vim	/^function l9#tempvariables#set(group, name, value)$/;"	f
l9#tempvariables#setList	vimfiles/bundle/l9/autoload/l9/tempvariables.vim	/^function l9#tempvariables#setList(group, variables)$/;"	f
l9#unique	vimfiles/bundle/l9/autoload/l9.vim	/^function l9#unique(items)$/;"	f
l9#uniqueStably	vimfiles/bundle/l9/autoload/l9.vim	/^function l9#uniqueStably(items)$/;"	f
l9#writeAll	vimfiles/bundle/l9/autoload/l9.vim	/^function l9#writeAll()$/;"	f
l9#writeFile	vimfiles/bundle/l9/autoload/l9.vim	/^function l9#writeFile(...)$/;"	f
l9#zip	vimfiles/bundle/l9/autoload/l9.vim	/^function l9#zip(items)$/;"	f
lastformat	vimfiles/bundle/vim-rails/autoload/rails.vim	/^function! s:lastformat(start)$/;"	f
lastmethod	vimfiles/bundle/vim-rails/autoload/rails.vim	/^function! s:lastmethod(...)$/;"	f
lastmethodline	vimfiles/bundle/vim-rails/autoload/rails.vim	/^function! s:lastmethodline(start)$/;"	f
lastopeningline	vimfiles/bundle/vim-rails/autoload/rails.vim	/^function! s:lastopeningline(pattern,limit,start)$/;"	f
layoutEdit	vimfiles/bundle/vim-rails/autoload/rails.vim	/^function! s:layoutEdit(cmd,...)$/;"	f
layoutList	vimfiles/bundle/vim-rails/autoload/rails.vim	/^function! s:layoutList(A,L,P)$/;"	f
ldflags	vimfiles/bundle-disabled/command-t/ruby/command-t/Makefile	/^ldflags  = -L. -LC:\\\\Users\\\\Luis\\\\Projects\\\\oss\\\\oneclick\\\\rubyinstaller\\\\sandbox\\\\tk\\\\lib -LC:\\\\Users\\\\Luis\\\\Projects\\\\oss\\\\oneclick\\\\rubyinstaller\\\\sandbox\\\\tcl\\\\lib -LC:\\\\Users\\\\Luis\\\\Projects\\\\oss\\\\oneclick\\\\rubyinstaller\\\\sandbox\\\\pdcurses\\\\lib -LC:\\\\Users\\\\Luis\\\\Projects\\\\oss\\\\oneclick\\\\rubyinstaller\\\\sandbox\\\\openssl\\\\lib -LC:\\\\Users\\\\Luis\\\\Projects\\\\oss\\\\oneclick\\\\rubyinstaller\\\\sandbox\\\\zlib\\\\lib -LC:\\\\Users\\\\Luis\\\\Projects\\\\oss\\\\oneclick\\\\rubyinstaller\\\\sandbox\\\\iconv\\\\lib -LC:\\\\Users\\\\Luis\\\\Projects\\\\oss\\\\oneclick\\\\rubyinstaller\\\\sandbox\\\\gdbm\\\\lib $/;"	m
leader	vimfiles/bundle/yankring/plugin/yankring.vim	/^        let leader = g:mapleader$/;"	v
leader	vimfiles/bundle/yankring/plugin/yankring.vim	/^    let leader = '\\'$/;"	v
leader	vimfiles/bundle/yankring/plugin/yankring.vim	/^    let leader = escape(leader, '\\')$/;"	v
leave	vimfiles/bundle-disabled/command-t/ruby/command-t/controller.rb	/^    def leave$/;"	f	class:CommandT.Controller
leave	vimfiles/bundle-disabled/command-t/ruby/command-t/match_window.rb	/^    def leave$/;"	f	class:CommandT.MatchWindow
libEdit	vimfiles/bundle/vim-rails/autoload/rails.vim	/^function! s:libEdit(cmd,...)$/;"	f
libList	vimfiles/bundle/vim-rails/autoload/rails.vim	/^function! s:libList(A,L,P)$/;"	f
libdir	vimfiles/bundle-disabled/command-t/ruby/command-t/Makefile	/^libdir = $(exec_prefix)\/lib$/;"	m
libexecdir	vimfiles/bundle-disabled/command-t/ruby/command-t/Makefile	/^libexecdir = $(exec_prefix)\/libexec$/;"	m
libpath	vimfiles/bundle-disabled/command-t/ruby/command-t/Makefile	/^libpath = . $(libdir)$/;"	m
linepeak	vimfiles/bundle/vim-rails/autoload/rails.vim	/^function! s:linepeak()$/;"	f
lines	vimfiles/bundle-disabled/command-t/ruby/command-t/vim/screen.rb	/^      def self.lines$/;"	F	class:CommandT.VIM.Screen
listAroundFiles	vimfiles/bundle/fuzzyfinder/autoload/fuf/mrufile.vim	/^function s:listAroundFiles(dir)$/;"	f
list_matches	vimfiles/bundle-disabled/command-t/ruby/command-t/controller.rb	/^    def list_matches$/;"	f	class:CommandT.Controller.ensure_appropriate_window_selection
loaded_greplace	vimfiles/bundle/greplace/plugin/greplace.vim	/^let loaded_greplace = 1$/;"	v
loaded_nerd_comments	vimfiles/bundle/nerdcommenter/plugin/NERD_commenter.vim	/^let loaded_nerd_comments = 1$/;"	v
loaded_nerd_tree	vimfiles/bundle-disabled/nerdtree/plugin/NERD_tree.vim	/^let loaded_nerd_tree = 1$/;"	v
loaded_snips	vimfiles/bundle/snipMate/plugin/snipMate.vim	/^let loaded_snips = 1$/;"	v
loaded_taglist	vimfiles/bundle/taglist/plugin/taglist.vim	/^            let loaded_taglist = 'no'$/;"	v
loaded_taglist	vimfiles/bundle/taglist/plugin/taglist.vim	/^        let loaded_taglist = 'no'$/;"	v
loaded_taglist	vimfiles/bundle/taglist/plugin/taglist.vim	/^    let loaded_taglist = 'fast_load_done'$/;"	v
loaded_taglist	vimfiles/bundle/taglist/plugin/taglist.vim	/^let loaded_taglist = 'available'$/;"	v
loaded_yankring	vimfiles/bundle/yankring/plugin/yankring.vim	/^let loaded_yankring = 120$/;"	v
localeEdit	vimfiles/bundle/vim-rails/autoload/rails.vim	/^function! s:localeEdit(cmd,...)$/;"	f
localeList	vimfiles/bundle/vim-rails/autoload/rails.vim	/^function! s:localeList(A,L,P)$/;"	f
localedir	vimfiles/bundle-disabled/command-t/ruby/command-t/Makefile	/^localedir = $(datarootdir)\/locale$/;"	m
localstatedir	vimfiles/bundle-disabled/command-t/ruby/command-t/Makefile	/^localstatedir = $(prefix)\/var$/;"	m
lock	vimfiles/bundle-disabled/command-t/ruby/command-t/match_window.rb	/^    def lock$/;"	f	class:CommandT.MatchWindow
mCommandT	vimfiles/bundle-disabled/command-t/ruby/command-t/ext.c	/^VALUE mCommandT         = 0; \/\/ module CommandT$/;"	v
mailerEdit	vimfiles/bundle/vim-rails/autoload/rails.vim	/^function! s:mailerEdit(cmd,...)$/;"	f
mailerList	vimfiles/bundle/vim-rails/autoload/rails.vim	/^function! s:mailerList(A,L,P)$/;"	f
main_syntax	vimfiles/bundle/jade/syntax/jade.vim	/^  let main_syntax = 'jade'$/;"	v
main_syntax	vimfiles/bundle/vim-javascript/syntax/javascript.vim	/^  let main_syntax = 'javascript'$/;"	v
main_syntax	vimfiles/bundle/vim-ruby/syntax/eruby.vim	/^  let main_syntax = 'eruby'$/;"	v
main_syntax	vimfiles/syntax/dtxt.vim	/^  let main_syntax = 'dtxt'$/;"	v
makeAdditionalMigemoPattern	vimfiles/bundle/fuzzyfinder/autoload/fuf.vim	/^function s:makeAdditionalMigemoPattern(pattern)$/;"	f
makeCtagsCmd	vimfiles/bundle/fuzzyfinder/autoload/fuf/buffertag.vim	/^function s:makeCtagsCmd(bufNr)$/;"	f
makeFileAbbrInfo	vimfiles/bundle/fuzzyfinder/autoload/fuf.vim	/^function s:makeFileAbbrInfo(item, maxLenStats)$/;"	f
makeFuzzyMatchingExpr	vimfiles/bundle/fuzzyfinder/autoload/fuf.vim	/^function s:makeFuzzyMatchingExpr(target, pattern)$/;"	f
makeItem	vimfiles/bundle/fuzzyfinder/autoload/fuf/buffer.vim	/^function s:makeItem(nr)$/;"	f
makeItem	vimfiles/bundle/fuzzyfinder/autoload/fuf/buffertag.vim	/^function s:makeItem(tag, itemMap)$/;"	f
makeItem	vimfiles/bundle/fuzzyfinder/autoload/fuf/changelist.vim	/^function s:makeItem(line)$/;"	f
makeItem	vimfiles/bundle/fuzzyfinder/autoload/fuf/jumplist.vim	/^function s:makeItem(line, bufnrPrev)$/;"	f
makeItem	vimfiles/bundle/fuzzyfinder/autoload/fuf/quickfix.vim	/^function s:makeItem(qfItem)$/;"	f
makePartialMatchingExpr	vimfiles/bundle/fuzzyfinder/autoload/fuf.vim	/^function s:makePartialMatchingExpr(target, pattern)$/;"	f
makeRefiningExpr	vimfiles/bundle/fuzzyfinder/autoload/fuf.vim	/^function s:makeRefiningExpr(pattern)$/;"	f
makewithruby	vimfiles/bundle/vim-rails/autoload/rails.vim	/^function! s:makewithruby(arg,bang,...)$/;"	f
mandir	vimfiles/bundle-disabled/command-t/ruby/command-t/Makefile	/^mandir = $(datarootdir)\/man$/;"	m
map	vimfiles/bundle-disabled/command-t/ruby/command-t/controller.rb	/^    def map key, function, param = nil$/;"	f	class:CommandT.Controller.ensure_appropriate_window_selection
match_limit	vimfiles/bundle-disabled/command-t/ruby/command-t/controller.rb	/^    def match_limit$/;"	f	class:CommandT.Controller.ensure_appropriate_window_selection
match_text_for_idx	vimfiles/bundle-disabled/command-t/ruby/command-t/match_window.rb	/^    def match_text_for_idx idx$/;"	f	class:CommandT.MatchWindow
match_type	vimfiles/bundle/vim-rails/autoload/rails.vim	/^function! s:match_type(type,...)$/;"	f
matchcursor	vimfiles/bundle/vim-rails/autoload/rails.vim	/^function! s:matchcursor(pat)$/;"	f
matches=	vimfiles/bundle-disabled/command-t/ruby/command-t/match_window.rb	/^    def matches= matches$/;"	f	class:CommandT.MatchWindow
matchinfo_t	vimfiles/bundle-disabled/command-t/ruby/command-t/match.c	/^} matchinfo_t;$/;"	t	typeref:struct:__anon1	file:
max_score_per_char	vimfiles/bundle-disabled/command-t/ruby/command-t/match.c	/^    double  max_score_per_char;$/;"	m	struct:__anon1	file:	access:public
menuBufEnter	vimfiles/bundle/vim-rails/plugin/rails.vim	/^function! s:menuBufEnter()$/;"	f
menuBufLeave	vimfiles/bundle/vim-rails/plugin/rails.vim	/^function! s:menuBufLeave()$/;"	f
menuPriority	vimfiles/bundle/yankring/plugin/yankring.vim	/^        let menuPriority = ''$/;"	v
menuPriority	vimfiles/bundle/yankring/plugin/yankring.vim	/^        let menuPriority = exists("g:yankring_menu_priority") ? yankring_menu_priority : ''$/;"	v
menuRoot	vimfiles/bundle/nerdcommenter/plugin/NERD_commenter.vim	/^        let menuRoot = '&Plugin.&comment'$/;"	v
menuRoot	vimfiles/bundle/nerdcommenter/plugin/NERD_commenter.vim	/^        let menuRoot = '&comment'$/;"	v
menuRoot	vimfiles/bundle/nerdcommenter/plugin/NERD_commenter.vim	/^        let menuRoot = 'comment'$/;"	v
menuRoot	vimfiles/bundle/nerdcommenter/plugin/NERD_commenter.vim	/^    let menuRoot = ""$/;"	v
menuRoot	vimfiles/bundle/yankring/plugin/yankring.vim	/^        let menuRoot = '&Plugin.&YankRing'$/;"	v
menuRoot	vimfiles/bundle/yankring/plugin/yankring.vim	/^        let menuRoot = '&YankRing'$/;"	v
menuRoot	vimfiles/bundle/yankring/plugin/yankring.vim	/^        let menuRoot = 'YankRing'$/;"	v
menuRoot	vimfiles/bundle/yankring/plugin/yankring.vim	/^        let menuRoot = exists("g:yankring_menu_root") ? g:yankring_menu_root : '&Plugin.&YankRing'$/;"	v
menucmd	vimfiles/bundle/vim-rails/plugin/rails.vim	/^function! s:menucmd(priority)$/;"	f
menuprompt	vimfiles/bundle/vim-rails/plugin/rails.vim	/^function! s:menuprompt(vimcmd,prompt)$/;"	f
message	vimfiles/bundle/vim-ruby/etc/release/cvsrelease	/^function message() {$/;"	f
metalEdit	vimfiles/bundle/vim-rails/autoload/rails.vim	/^function! s:metalEdit(cmd,...)$/;"	f
metalList	vimfiles/bundle/vim-rails/autoload/rails.vim	/^function! s:metalList(A,L,P)$/;"	f
mextargs	vimfiles/bundle/vim-rails/autoload/rails.vim	/^function! s:mextargs(str,num)$/;"	f
migrationEdit	vimfiles/bundle/vim-rails/autoload/rails.vim	/^function! s:migrationEdit(cmd,...)$/;"	f
migrationList	vimfiles/bundle/vim-rails/autoload/rails.vim	/^function! s:migrationList(A,L,P)$/;"	f
migspc	vimfiles/bundle/vim-rails/autoload/rails.vim	/^function! s:migspc(line)$/;"	f
missing	vimfiles/bundle-disabled/command-t/ruby/command-t/extconf.rb	/^def missing item$/;"	f
mkeep	vimfiles/bundle/vim-rails/autoload/rails.vim	/^function! s:mkeep(str)$/;"	f
mkpath	vimfiles/bundle/vim-ruby/bin/vim-ruby-install.rb	/^  def mkpath(directory)$/;"	f	class:FileWriter
model	vimfiles/bundle/vim-rails/autoload/rails.vim	/^function! s:model(...)$/;"	f
modelEdit	vimfiles/bundle/vim-rails/autoload/rails.vim	/^function! s:modelEdit(cmd,...)$/;"	f
modelList	vimfiles/bundle/vim-rails/autoload/rails.vim	/^function! s:modelList(A,L,P)$/;"	f
moveToOtherTabpageOpeningBuffer	vimfiles/bundle/l9/autoload/l9.vim	/^function s:moveToOtherTabpageOpeningBuffer(bufNr)$/;"	f
move_cursor_to_selected_line	vimfiles/bundle-disabled/command-t/ruby/command-t/match_window.rb	/^    def move_cursor_to_selected_line$/;"	f	class:CommandT.MatchWindow
never_show_dot_files	vimfiles/bundle-disabled/command-t/ruby/command-t/match.c	/^    int     never_show_dot_files;   \/\/ boolean$/;"	m	struct:__anon1	file:	access:public
nextBufferName	vimfiles/bundle-disabled/nerdtree/plugin/NERD_tree.vim	/^function! s:nextBufferName()$/;"	f
observerEdit	vimfiles/bundle/vim-rails/autoload/rails.vim	/^function! s:observerEdit(cmd,...)$/;"	f
observerList	vimfiles/bundle/vim-rails/autoload/rails.vim	/^function! s:observerList(A,L,P)$/;"	f
oldincludedir	vimfiles/bundle-disabled/command-t/ruby/command-t/Makefile	/^oldincludedir = $(DESTDIR)\/usr\/include$/;"	m
onBufDelete	vimfiles/bundle/l9/autoload/l9/tempbuffer.vim	/^function s:onBufDelete(bufname)$/;"	f
onBufWriteCmd	vimfiles/bundle/l9/autoload/l9/tempbuffer.vim	/^function s:onBufWriteCmd(bufname)$/;"	f
onCommandPre	vimfiles/bundle/fuzzyfinder/autoload/fuf.vim	/^function s:onCommandPre()$/;"	f
onlybitmaps	vimfiles/bundle/powerline/fontpatcher/fontpatcher	/^	onlybitmaps = font.onlybitmaps$/;"	v
openBookmark	vimfiles/bundle-disabled/nerdtree/plugin/NERD_tree.vim	/^function! s:openBookmark(name)$/;"	f
openEntrySplit	vimfiles/bundle-disabled/nerdtree/plugin/NERD_tree.vim	/^function! s:openEntrySplit(vertical, forceKeepWindowOpen)$/;"	f
openExplorer	vimfiles/bundle-disabled/nerdtree/plugin/NERD_tree.vim	/^function! s:openExplorer()$/;"	f
openInNewTab	vimfiles/bundle-disabled/nerdtree/plugin/NERD_tree.vim	/^function! s:openInNewTab(stayCurrentTab)$/;"	f
openNodeRecursively	vimfiles/bundle-disabled/nerdtree/plugin/NERD_tree.vim	/^function! s:openNodeRecursively()$/;"	f
open_selection	vimfiles/bundle-disabled/command-t/ruby/command-t/controller.rb	/^    def open_selection selection, options = {}$/;"	f	class:CommandT.Controller.ensure_appropriate_window_selection
opts	vimfiles/bundle/vim-rails/autoload/rails.vim	/^function! s:opts()$/;"	f
overlap_width	vimfiles/bundle/powerline/fontpatcher/fontpatcher	/^			overlap_width = font.em \/ 48$/;"	v
padding_for_selected_match	vimfiles/bundle-disabled/command-t/ruby/command-t/match_window.rb	/^    def padding_for_selected_match str$/;"	f	class:CommandT.MatchWindow
parseChangesLine	vimfiles/bundle/fuzzyfinder/autoload/fuf/changelist.vim	/^function s:parseChangesLine(line)$/;"	f
parseHelpTagEntry	vimfiles/bundle/fuzzyfinder/autoload/fuf/help.vim	/^function s:parseHelpTagEntry(line, tagFile)$/;"	f
parseHelpTagFiles	vimfiles/bundle/fuzzyfinder/autoload/fuf/help.vim	/^function s:parseHelpTagFiles(tagFiles, key)$/;"	f
parseJumpsLine	vimfiles/bundle/fuzzyfinder/autoload/fuf/jumplist.vim	/^function s:parseJumpsLine(line, bufnrPrev)$/;"	f
parseJumpsLine	vimfiles/bundle/fuzzyfinder/autoload/fuf/quickfix.vim	/^function s:parseJumpsLine(line)$/;"	f
parseTagFiles	vimfiles/bundle/fuzzyfinder/autoload/fuf/tag.vim	/^function s:parseTagFiles(tagFiles, key)$/;"	f
parseTagFiles	vimfiles/bundle/fuzzyfinder/autoload/fuf/taggedfile.vim	/^function s:parseTagFiles(tagFiles, key)$/;"	f
parseTagLine	vimfiles/bundle/fuzzyfinder/autoload/fuf/buffertag.vim	/^function s:parseTagLine(line)$/;"	f
parser	vimfiles/bundle/powerline/fontpatcher/fontpatcher	/^parser = argparse.ArgumentParser(description='Font patcher for Powerline. Creates dividers and symbols in FontForge-compatible font files. Requires FontForge with Python bindings. Stores glyphs in the U+2B80-U+2BFF range ("Miscellaneous symbols and arrows"). Stores the patched font as a new, renamed font file by default.')$/;"	v
path	vimfiles/bundle/vim-ruby/bin/vim-ruby-install.rb	/^    def path$/;"	f	class:VimRubyInstaller.BackupDir
path	vimfiles/bundle/vim-ruby/bin/vim-ruby-install.rb	/^  def path$/;"	f	class:TargetDirectory
path=	vimfiles/bundle-disabled/command-t/ruby/command-t/finder.rb	/^    def path= path$/;"	f	class:CommandT.Finder
path=	vimfiles/bundle-disabled/command-t/ruby/command-t/scanner/file_scanner.rb	/^    def path= str$/;"	f	class:CommandT.FileScanner
path_excluded?	vimfiles/bundle-disabled/command-t/ruby/command-t/scanner/file_scanner.rb	/^    def path_excluded? path$/;"	f	class:CommandT.FileScanner
pathjoin	vimfiles/bundle/vim-rails/autoload/rails.vim	/^function! s:pathjoin(...) abort$/;"	f
pathogen#cycle_filetype	vimfiles/autoload/pathogen.vim	/^function! pathogen#cycle_filetype() " {{{1$/;"	f
pathogen#glob	vimfiles/autoload/pathogen.vim	/^function! pathogen#glob(pattern) abort " {{{1$/;"	f
pathogen#glob_directories	vimfiles/autoload/pathogen.vim	/^function! pathogen#glob_directories(pattern) abort " {{{1$/;"	f
pathogen#helptags	vimfiles/autoload/pathogen.vim	/^function! pathogen#helptags() " {{{1$/;"	f
pathogen#infect	vimfiles/autoload/pathogen.vim	/^function! pathogen#infect(...) abort " {{{1$/;"	f
pathogen#is_disabled	vimfiles/autoload/pathogen.vim	/^function! pathogen#is_disabled(path) " {{{1$/;"	f
pathogen#join	vimfiles/autoload/pathogen.vim	/^function! pathogen#join(...) abort " {{{1$/;"	f
pathogen#legacyjoin	vimfiles/autoload/pathogen.vim	/^function! pathogen#legacyjoin(...) abort " {{{1$/;"	f
pathogen#rtpfindfile	vimfiles/autoload/pathogen.vim	/^function! pathogen#rtpfindfile(file,count) "{{{1$/;"	f
pathogen#runtime_append_all_bundles	vimfiles/autoload/pathogen.vim	/^function! pathogen#runtime_append_all_bundles(...) " {{{1$/;"	f
pathogen#runtime_prepend_subdirectories	vimfiles/autoload/pathogen.vim	/^function! pathogen#runtime_prepend_subdirectories(path) " {{{1$/;"	f
pathogen#separator	vimfiles/autoload/pathogen.vim	/^function! pathogen#separator() abort " {{{1$/;"	f
pathogen#split	vimfiles/autoload/pathogen.vim	/^function! pathogen#split(path) abort " {{{1$/;"	f
pathogen#uniq	vimfiles/autoload/pathogen.vim	/^function! pathogen#uniq(list) abort " {{{1$/;"	f
paths	vimfiles/bundle-disabled/command-t/ruby/command-t/scanner/buffer_scanner.rb	/^    def paths$/;"	f	class:CommandT.BufferScanner
paths	vimfiles/bundle-disabled/command-t/ruby/command-t/scanner/file_scanner.rb	/^    def paths$/;"	f	class:CommandT.FileScanner
pathsplit	vimfiles/bundle/vim-rails/autoload/rails.vim	/^function! s:pathsplit(path) abort$/;"	f
pdfdir	vimfiles/bundle-disabled/command-t/ruby/command-t/Makefile	/^pdfdir = $(docdir)$/;"	m
pluginEdit	vimfiles/bundle/vim-rails/autoload/rails.vim	/^function! s:pluginEdit(cmd,...)$/;"	f
pluginList	vimfiles/bundle/vim-rails/autoload/rails.vim	/^function! s:pluginList(A,L,P)$/;"	f
pop_command	vimfiles/bundle/vim-rails/autoload/rails.vim	/^function! s:pop_command()$/;"	f
prefix	vimfiles/bundle-disabled/command-t/ruby/command-t/Makefile	/^prefix = $(DESTDIR)\/Ruby187$/;"	m
prefix	vimfiles/bundle/vim-ruby/ftplugin/ruby.vim	/^        let prefix = ''$/;"	v
prefix	vimfiles/bundle/vim-ruby/ftplugin/ruby.vim	/^        let prefix = 'env PATH='.$PATH.' '$/;"	v
preload	vimfiles/bundle-disabled/command-t/ruby/command-t/Makefile	/^preload = $/;"	m
prephelp	vimfiles/bundle/vim-rails/autoload/rails.vim	/^function! s:prephelp()$/;"	f
previewNode	vimfiles/bundle-disabled/nerdtree/plugin/NERD_tree.vim	/^function! s:previewNode(openNewWin)$/;"	f
print_active_worker_keys	vimfiles/bundle/l9/autoload/l9/async.py	/^    def print_active_worker_keys(self):$/;"	m	class:Asyncer	access:public
print_error	vimfiles/bundle-disabled/command-t/ruby/command-t/match_window.rb	/^    def print_error msg$/;"	f	class:CommandT.MatchWindow
print_match	vimfiles/bundle-disabled/command-t/ruby/command-t/match_window.rb	/^    def print_match idx$/;"	f	class:CommandT.MatchWindow
print_matches	vimfiles/bundle-disabled/command-t/ruby/command-t/match_window.rb	/^    def print_matches$/;"	f	class:CommandT.MatchWindow
print_no_such_file_or_directory	vimfiles/bundle-disabled/command-t/ruby/command-t/match_window.rb	/^    def print_no_such_file_or_directory$/;"	f	class:CommandT.MatchWindow
print_output	vimfiles/bundle/l9/autoload/l9/async.py	/^    def print_output(self, var_key):$/;"	m	class:Asyncer	access:public
print_worker_keys	vimfiles/bundle/l9/autoload/l9/async.py	/^    def print_worker_keys(self):$/;"	m	class:Asyncer	access:public
promptToDelBuffer	vimfiles/bundle-disabled/nerdtree/nerdtree_plugin/fs_menu.vim	/^function! s:promptToDelBuffer(bufnum, msg)$/;"	f
promptToDelBuffer	vimfiles/bundle-disabled/nerdtree/plugin/NERD_tree.vim	/^function! s:promptToDelBuffer(bufnum, msg)$/;"	f
psdir	vimfiles/bundle-disabled/command-t/ruby/command-t/Makefile	/^psdir = $(docdir)$/;"	m
push_chdir	vimfiles/bundle/vim-rails/autoload/rails.vim	/^function! s:push_chdir(...)$/;"	f
put	vimfiles/bundle/l9/autoload/l9/async.py	/^    def put(self, executor):$/;"	m	class:Worker	access:public
putCursorInTreeWin	vimfiles/bundle-disabled/nerdtree/plugin/NERD_tree.vim	/^function! s:putCursorInTreeWin()$/;"	f
putCursorOnBookmarkTable	vimfiles/bundle-disabled/nerdtree/plugin/NERD_tree.vim	/^function! s:putCursorOnBookmarkTable()$/;"	f
pwd	vimfiles/bundle-disabled/command-t/ruby/command-t/vim.rb	/^    def self.pwd$/;"	F	class:CommandT.VIM
rails#app	vimfiles/bundle/vim-rails/autoload/rails.vim	/^function! rails#app(...)$/;"	f
rails#buffer	vimfiles/bundle/vim-rails/autoload/rails.vim	/^function! rails#buffer(...)$/;"	f
rails#cache_clear	vimfiles/bundle/vim-rails/autoload/rails.vim	/^function! rails#cache_clear(...)$/;"	f
rails#camelize	vimfiles/bundle/vim-rails/autoload/rails.vim	/^function! rails#camelize(str)$/;"	f
rails#log_syntax	vimfiles/bundle/vim-rails/autoload/rails.vim	/^function! rails#log_syntax()$/;"	f
rails#new_app_command	vimfiles/bundle/vim-rails/autoload/rails.vim	/^function! rails#new_app_command(bang,...)$/;"	f
rails#pluralize	vimfiles/bundle/vim-rails/autoload/rails.vim	/^function! rails#pluralize(word)$/;"	f
rails#singularize	vimfiles/bundle/vim-rails/autoload/rails.vim	/^function! rails#singularize(word)$/;"	f
rails#underscore	vimfiles/bundle/vim-rails/autoload/rails.vim	/^function! rails#underscore(str)$/;"	f
railsPluginAbolish	vimfiles/bundle/vim-rails/plugin/rails.vim	/^augroup railsPluginAbolish$/;"	a
railsPluginAuto	vimfiles/bundle/vim-rails/autoload/rails.vim	/^augroup railsPluginAuto$/;"	a
railsPluginDetect	vimfiles/bundle/vim-rails/plugin/rails.vim	/^augroup railsPluginDetect$/;"	a
railsPluginMenu	vimfiles/bundle/vim-rails/plugin/rails.vim	/^augroup railsPluginMenu$/;"	a
readable_app	vimfiles/bundle/vim-rails/autoload/rails.vim	/^function! s:readable_app() dict abort$/;"	f
readable_calculate_file_type	vimfiles/bundle/vim-rails/autoload/rails.vim	/^function! s:readable_calculate_file_type() dict abort$/;"	f
readable_controller_name	vimfiles/bundle/vim-rails/autoload/rails.vim	/^function! s:readable_controller_name(...) dict abort$/;"	f
readable_default_rake_task	vimfiles/bundle/vim-rails/autoload/rails.vim	/^function! s:readable_default_rake_task(lnum) dict abort$/;"	f
readable_define_pattern	vimfiles/bundle/vim-rails/autoload/rails.vim	/^function! s:readable_define_pattern() dict abort$/;"	f
readable_end_of	vimfiles/bundle/vim-rails/autoload/rails.vim	/^function! s:readable_end_of(lnum) dict abort$/;"	f
readable_last_format	vimfiles/bundle/vim-rails/autoload/rails.vim	/^function! s:readable_last_format(start) dict abort$/;"	f
readable_last_method	vimfiles/bundle/vim-rails/autoload/rails.vim	/^function! s:readable_last_method(start) dict abort$/;"	f
readable_last_method_line	vimfiles/bundle/vim-rails/autoload/rails.vim	/^function! s:readable_last_method_line(start) dict abort$/;"	f
readable_last_opening_line	vimfiles/bundle/vim-rails/autoload/rails.vim	/^function! s:readable_last_opening_line(start,pattern,limit) dict abort$/;"	f
readable_line_count	vimfiles/bundle/vim-rails/autoload/rails.vim	/^function! s:readable_line_count() dict abort$/;"	f
readable_model_name	vimfiles/bundle/vim-rails/autoload/rails.vim	/^function! s:readable_model_name(...) dict abort$/;"	f
readable_preview_urls	vimfiles/bundle/vim-rails/autoload/rails.vim	/^function! s:readable_preview_urls(lnum) dict abort$/;"	f
readable_related	vimfiles/bundle/vim-rails/autoload/rails.vim	/^function! s:readable_related(...) dict abort$/;"	f
readable_type_name	vimfiles/bundle/vim-rails/autoload/rails.vim	/^function! s:readable_type_name() dict abort$/;"	f
readfile	vimfiles/bundle/vim-rails/autoload/rails.vim	/^function! s:readfile(path,...)$/;"	f
recall	vimfiles/bundle/fugitive/plugin/fugitive.vim	/^function! s:recall()$/;"	f
record_output	vimfiles/bundle/l9/autoload/l9/async.py	/^    def record_output(self, line):$/;"	m	class:Worker	access:public
recursive_match	vimfiles/bundle-disabled/command-t/ruby/command-t/match.c	/^double recursive_match(matchinfo_t *m,  \/\/ sharable meta-data$/;"	f	signature:(matchinfo_t *m, long str_idx, long abbrev_idx, long last_idx, double score)
redraw	vimfiles/bundle-disabled/command-t/ruby/command-t/prompt.rb	/^    def redraw$/;"	f	class:CommandT.Prompt
refreshCurrent	vimfiles/bundle-disabled/nerdtree/plugin/NERD_tree.vim	/^function! s:refreshCurrent()$/;"	f
refreshRoot	vimfiles/bundle-disabled/nerdtree/plugin/NERD_tree.vim	/^function! s:refreshRoot()$/;"	f
registerCoverage	vimfiles/bundle/fuzzyfinder/autoload/fuf/coveragefile.vim	/^function s:registerCoverage()$/;"	f
register_for_key_presses	vimfiles/bundle-disabled/command-t/ruby/command-t/controller.rb	/^    def register_for_key_presses$/;"	f	class:CommandT.Controller.ensure_appropriate_window_selection
relative_path_under_working_directory	vimfiles/bundle-disabled/command-t/ruby/command-t/vim/path_utilities.rb	/^      def relative_path_under_working_directory path$/;"	f	class:CommandT.VIM.PathUtilities
relglob	vimfiles/bundle/vim-rails/autoload/rails.vim	/^function! s:relglob(...)$/;"	f
removeItemFromCache	vimfiles/bundle/fuzzyfinder/autoload/fuf/mrufile.vim	/^function s:removeItemFromCache(word)$/;"	f
renderBookmarks	vimfiles/bundle-disabled/nerdtree/plugin/NERD_tree.vim	/^function! s:renderBookmarks()$/;"	f
renderView	vimfiles/bundle-disabled/nerdtree/plugin/NERD_tree.vim	/^function! s:renderView()$/;"	f
renderViewSavingPosition	vimfiles/bundle-disabled/nerdtree/plugin/NERD_tree.vim	/^function! s:renderViewSavingPosition()$/;"	f
renewCachesOfAllModes	vimfiles/bundle/fuzzyfinder/plugin/fuf.vim	/^function s:renewCachesOfAllModes()$/;"	f
repo	vimfiles/bundle/fugitive/plugin/fugitive.vim	/^function! s:repo(...) abort$/;"	f
repo_aliases	vimfiles/bundle/fugitive/plugin/fugitive.vim	/^function! s:repo_aliases() dict abort$/;"	f
repo_bare	vimfiles/bundle/fugitive/plugin/fugitive.vim	/^function! s:repo_bare() dict abort$/;"	f
repo_config	vimfiles/bundle/fugitive/plugin/fugitive.vim	/^function! s:repo_config(conf) dict abort$/;"	f
repo_dir	vimfiles/bundle/fugitive/plugin/fugitive.vim	/^function! s:repo_dir(...) dict abort$/;"	f
repo_dirglob	vimfiles/bundle/fugitive/plugin/fugitive.vim	/^function! s:repo_dirglob(base) dict abort$/;"	f
repo_git_chomp	vimfiles/bundle/fugitive/plugin/fugitive.vim	/^function! s:repo_git_chomp(...) dict abort$/;"	f
repo_git_chomp_in_tree	vimfiles/bundle/fugitive/plugin/fugitive.vim	/^function! s:repo_git_chomp_in_tree(...) dict abort$/;"	f
repo_git_command	vimfiles/bundle/fugitive/plugin/fugitive.vim	/^function! s:repo_git_command(...) dict abort$/;"	f
repo_head_ref	vimfiles/bundle/fugitive/plugin/fugitive.vim	/^function! s:repo_head_ref() dict abort$/;"	f
repo_keywordprg	vimfiles/bundle/fugitive/plugin/fugitive.vim	/^function! s:repo_keywordprg() dict abort$/;"	f
repo_rev_parse	vimfiles/bundle/fugitive/plugin/fugitive.vim	/^function! s:repo_rev_parse(rev) dict abort$/;"	f
repo_superglob	vimfiles/bundle/fugitive/plugin/fugitive.vim	/^function! s:repo_superglob(base) dict abort$/;"	f
repo_translate	vimfiles/bundle/fugitive/plugin/fugitive.vim	/^function! s:repo_translate(spec) dict abort$/;"	f
repo_tree	vimfiles/bundle/fugitive/plugin/fugitive.vim	/^function! s:repo_tree(...) dict abort$/;"	f
repo_user	vimfiles/bundle/fugitive/plugin/fugitive.vim	/^function! s:repo_user() dict abort$/;"	f
resetomnicomplete	vimfiles/bundle/vim-rails/autoload/rails.vim	/^function! s:resetomnicomplete()$/;"	f
restore	vimfiles/bundle-disabled/command-t/ruby/command-t/settings.rb	/^    def restore$/;"	f	class:CommandT.Settings
restoreScreenState	vimfiles/bundle-disabled/nerdtree/plugin/NERD_tree.vim	/^function! s:restoreScreenState()$/;"	f
restore_window_dimensions	vimfiles/bundle-disabled/command-t/ruby/command-t/match_window.rb	/^    def restore_window_dimensions$/;"	f	class:CommandT.MatchWindow
revealBookmark	vimfiles/bundle-disabled/nerdtree/plugin/NERD_tree.vim	/^function! s:revealBookmark(name)$/;"	f
rquote	vimfiles/bundle/vim-rails/autoload/rails.vim	/^function! s:rquote(str)$/;"	f
ruby	vimfiles/bundle-disabled/command-t/ruby/command-t/Makefile	/^ruby = C:\/Ruby187\/bin\/ruby$/;"	m
ruby_inspect	vimfiles/bundle-disabled/command-t/ruby/command-t/ext.h	36;"	d
ruby_minlines	vimfiles/bundle/vim-ruby/syntax/ruby.vim	/^    let ruby_minlines = 50$/;"	v
ruby_version	vimfiles/bundle-disabled/command-t/ruby/command-t/Makefile	/^ruby_version = 1.8$/;"	m
rubycomplete#Complete	vimfiles/bundle/vim-ruby/autoload/rubycomplete.vim	/^function! rubycomplete#Complete(findstart, base)$/;"	f
rubycomplete#Init	vimfiles/bundle/vim-ruby/autoload/rubycomplete.vim	/^function! rubycomplete#Init()$/;"	f
rubylibdir	vimfiles/bundle-disabled/command-t/ruby/command-t/Makefile	/^rubylibdir = $(libdir)\/ruby\/$(ruby_version)$/;"	m
run	vimfiles/bundle/l9/autoload/l9/async.py	/^    def run(self):$/;"	m	class:Worker	access:public
s:ABBR_SNIP_MASK	vimfiles/bundle/fuzzyfinder/autoload/fuf.vim	/^let s:ABBR_SNIP_MASK = '...'$/;"	v
s:ASYNC_PY_PATH	vimfiles/bundle/l9/autoload/l9/async.vim	/^let s:ASYNC_PY_PATH = fnamemodify(expand('<sfile>:p:h'), ':p') . 'async.py'$/;"	v
s:Bookmark	vimfiles/bundle-disabled/nerdtree/plugin/NERD_tree.vim	/^let s:Bookmark = {}$/;"	v
s:CACHE_REVISION	vimfiles/bundle/powerline/autoload/Pl.vim	/^	let s:CACHE_REVISION = 2$/;"	v
s:COMPOUND_ASSIGNMENT	vimfiles/bundle/coffeescript/indent/coffee.vim	/^let s:COMPOUND_ASSIGNMENT = '[:=]\\s*\\%(if\\|unless\\|for\\|while\\|until\\|'$/;"	v
s:CONTINUATION	vimfiles/bundle/coffeescript/indent/coffee.vim	/^let s:CONTINUATION = '\\<\\%(is\\|isnt\\|and\\|or\\)\\>$'$/;"	v
s:CONTINUATION_BLOCK	vimfiles/bundle/coffeescript/indent/coffee.vim	/^let s:CONTINUATION_BLOCK = '[([{:=]$'$/;"	v
s:DATA_FILE_VERSION	vimfiles/bundle/fuzzyfinder/autoload/fuf.vim	/^let s:DATA_FILE_VERSION = 400$/;"	v
s:DOT_ACCESS	vimfiles/bundle/coffeescript/indent/coffee.vim	/^let s:DOT_ACCESS = '^\\.'$/;"	v
s:EMPTY_SEGMENT	vimfiles/bundle/powerline/autoload/Pl/Parser.vim	/^let s:EMPTY_SEGMENT = { 'type': 'empty' }$/;"	v
s:FUF_BUF_NAME	vimfiles/bundle/fuzzyfinder/autoload/fuf.vim	/^let s:FUF_BUF_NAME = '[fuf]'$/;"	v
s:HARD_DIVIDER	vimfiles/bundle/powerline/autoload/Pl/Parser.vim	/^let s:HARD_DIVIDER = 0$/;"	v
s:INDENT_AFTER_KEYWORD	vimfiles/bundle/coffeescript/indent/coffee.vim	/^let s:INDENT_AFTER_KEYWORD = '^\\%(if\\|unless\\|else\\|for\\|while\\|until\\|'$/;"	v
s:INDENT_AFTER_OPERATOR	vimfiles/bundle/coffeescript/indent/coffee.vim	/^let s:INDENT_AFTER_OPERATOR = '\\%([([{:=]\\|[-=]>\\)$'$/;"	v
s:KeyMap	vimfiles/bundle-disabled/nerdtree/plugin/NERD_tree.vim	/^let s:KeyMap = {}$/;"	v
s:L9_VERSION_CURRENT	vimfiles/bundle/l9/autoload/l9.vim	/^let s:L9_VERSION_CURRENT  = 101$/;"	v
s:L9_VERSION_PASSABLE	vimfiles/bundle/l9/autoload/l9.vim	/^let s:L9_VERSION_PASSABLE = 101$/;"	v
s:LEFT_SIDE	vimfiles/bundle/powerline/autoload/Pl/Parser.vim	/^let s:LEFT_SIDE = 0$/;"	v
s:MAX_LOOKBACK	vimfiles/bundle/coffeescript/indent/coffee.vim	/^let s:MAX_LOOKBACK = 50$/;"	v
s:MODE_NAME	vimfiles/bundle/fuzzyfinder/autoload/fuf/bookmarkdir.vim	/^let s:MODE_NAME = expand('<sfile>:t:r')$/;"	v
s:MODE_NAME	vimfiles/bundle/fuzzyfinder/autoload/fuf/bookmarkfile.vim	/^let s:MODE_NAME = expand('<sfile>:t:r')$/;"	v
s:MODE_NAME	vimfiles/bundle/fuzzyfinder/autoload/fuf/buffer.vim	/^let s:MODE_NAME = expand('<sfile>:t:r')$/;"	v
s:MODE_NAME	vimfiles/bundle/fuzzyfinder/autoload/fuf/buffertag.vim	/^let s:MODE_NAME = expand('<sfile>:t:r')$/;"	v
s:MODE_NAME	vimfiles/bundle/fuzzyfinder/autoload/fuf/callbackfile.vim	/^let s:MODE_NAME = expand('<sfile>:t:r')$/;"	v
s:MODE_NAME	vimfiles/bundle/fuzzyfinder/autoload/fuf/callbackitem.vim	/^let s:MODE_NAME = expand('<sfile>:t:r')$/;"	v
s:MODE_NAME	vimfiles/bundle/fuzzyfinder/autoload/fuf/changelist.vim	/^let s:MODE_NAME = expand('<sfile>:t:r')$/;"	v
s:MODE_NAME	vimfiles/bundle/fuzzyfinder/autoload/fuf/coveragefile.vim	/^let s:MODE_NAME = expand('<sfile>:t:r')$/;"	v
s:MODE_NAME	vimfiles/bundle/fuzzyfinder/autoload/fuf/dir.vim	/^let s:MODE_NAME = expand('<sfile>:t:r')$/;"	v
s:MODE_NAME	vimfiles/bundle/fuzzyfinder/autoload/fuf/file.vim	/^let s:MODE_NAME = expand('<sfile>:t:r')$/;"	v
s:MODE_NAME	vimfiles/bundle/fuzzyfinder/autoload/fuf/givencmd.vim	/^let s:MODE_NAME = expand('<sfile>:t:r')$/;"	v
s:MODE_NAME	vimfiles/bundle/fuzzyfinder/autoload/fuf/givendir.vim	/^let s:MODE_NAME = expand('<sfile>:t:r')$/;"	v
s:MODE_NAME	vimfiles/bundle/fuzzyfinder/autoload/fuf/givenfile.vim	/^let s:MODE_NAME = expand('<sfile>:t:r')$/;"	v
s:MODE_NAME	vimfiles/bundle/fuzzyfinder/autoload/fuf/help.vim	/^let s:MODE_NAME = expand('<sfile>:t:r')$/;"	v
s:MODE_NAME	vimfiles/bundle/fuzzyfinder/autoload/fuf/jumplist.vim	/^let s:MODE_NAME = expand('<sfile>:t:r')$/;"	v
s:MODE_NAME	vimfiles/bundle/fuzzyfinder/autoload/fuf/line.vim	/^let s:MODE_NAME = expand('<sfile>:t:r')$/;"	v
s:MODE_NAME	vimfiles/bundle/fuzzyfinder/autoload/fuf/mrucmd.vim	/^let s:MODE_NAME = expand('<sfile>:t:r')$/;"	v
s:MODE_NAME	vimfiles/bundle/fuzzyfinder/autoload/fuf/mrufile.vim	/^let s:MODE_NAME = expand('<sfile>:t:r')$/;"	v
s:MODE_NAME	vimfiles/bundle/fuzzyfinder/autoload/fuf/quickfix.vim	/^let s:MODE_NAME = expand('<sfile>:t:r')$/;"	v
s:MODE_NAME	vimfiles/bundle/fuzzyfinder/autoload/fuf/tag.vim	/^let s:MODE_NAME = expand('<sfile>:t:r')$/;"	v
s:MODE_NAME	vimfiles/bundle/fuzzyfinder/autoload/fuf/taggedfile.vim	/^let s:MODE_NAME = expand('<sfile>:t:r')$/;"	v
s:MenuController	vimfiles/bundle-disabled/nerdtree/plugin/NERD_tree.vim	/^let s:MenuController = {}$/;"	v
s:MenuItem	vimfiles/bundle-disabled/nerdtree/plugin/NERD_tree.vim	/^let s:MenuItem = {}$/;"	v
s:NERDFileNameEscape	vimfiles/bundle/nerdcommenter/plugin/NERD_commenter.vim	/^let s:NERDFileNameEscape="[]#*$%'\\" ?`!&();<>\\\\"$/;"	v
s:NERDTreeBufName	vimfiles/bundle-disabled/nerdtree/plugin/NERD_tree.vim	/^let s:NERDTreeBufName = 'NERD_tree_'$/;"	v
s:NERDTreeSortStarIndex	vimfiles/bundle-disabled/nerdtree/plugin/NERD_tree.vim	/^let s:NERDTreeSortStarIndex = index(g:NERDTreeSortOrder, '*')$/;"	v
s:NERD_tree_version	vimfiles/bundle-disabled/nerdtree/plugin/NERD_tree.vim	/^let s:NERD_tree_version = '4.1.0'$/;"	v
s:OPEN_TYPE_CURRENT	vimfiles/bundle/fuzzyfinder/autoload/fuf.vim	/^let s:OPEN_TYPE_CURRENT = 1$/;"	v
s:OPEN_TYPE_DELETE	vimfiles/bundle/fuzzyfinder/autoload/fuf/bookmarkdir.vim	/^let s:OPEN_TYPE_DELETE = -1$/;"	v
s:OPEN_TYPE_DELETE	vimfiles/bundle/fuzzyfinder/autoload/fuf/bookmarkfile.vim	/^let s:OPEN_TYPE_DELETE = -1$/;"	v
s:OPEN_TYPE_DELETE	vimfiles/bundle/fuzzyfinder/autoload/fuf/buffer.vim	/^let s:OPEN_TYPE_DELETE = -1$/;"	v
s:OPEN_TYPE_DELETE	vimfiles/bundle/fuzzyfinder/autoload/fuf/line.vim	/^let s:OPEN_TYPE_DELETE = -1$/;"	v
s:OPEN_TYPE_EXPAND	vimfiles/bundle/fuzzyfinder/autoload/fuf/mrufile.vim	/^let s:OPEN_TYPE_EXPAND = -1$/;"	v
s:OPEN_TYPE_SPLIT	vimfiles/bundle/fuzzyfinder/autoload/fuf.vim	/^let s:OPEN_TYPE_SPLIT   = 2$/;"	v
s:OPEN_TYPE_TAB	vimfiles/bundle/fuzzyfinder/autoload/fuf.vim	/^let s:OPEN_TYPE_TAB     = 4$/;"	v
s:OPEN_TYPE_VSPLIT	vimfiles/bundle/fuzzyfinder/autoload/fuf.vim	/^let s:OPEN_TYPE_VSPLIT  = 3$/;"	v
s:OUTDENT_AFTER	vimfiles/bundle/coffeescript/indent/coffee.vim	/^let s:OUTDENT_AFTER = '^\\%(return\\|break\\|continue\\|throw\\)\\>'$/;"	v
s:OtherFile_extensions	vimfiles/bundle/elentok-otherfile/plugin/elentok-otherfile.vim	/^let s:OtherFile_extensions = { "js": "coffee", "coffee": "js", "scss": "css", "css": "scss" }$/;"	v
s:PADDING	vimfiles/bundle/powerline/autoload/Pl/Parser.vim	/^let s:PADDING = 1$/;"	v
s:POSTFIX_CONDITION	vimfiles/bundle/coffeescript/indent/coffee.vim	/^let s:POSTFIX_CONDITION = '\\S\\s\\+\\zs\\<\\%(if\\|unless\\)\\>'$/;"	v
s:Path	vimfiles/bundle-disabled/nerdtree/plugin/NERD_tree.vim	/^let s:Path = {}$/;"	v
s:RIGHT_SIDE	vimfiles/bundle/powerline/autoload/Pl/Parser.vim	/^let s:RIGHT_SIDE = 2$/;"	v
s:SINGLE_LINE_ELSE	vimfiles/bundle/coffeescript/indent/coffee.vim	/^let s:SINGLE_LINE_ELSE = '^else\\s\\+\\%(\\<\\%(if\\|unless\\)\\>\\)\\@!'$/;"	v
s:SOFT_DIVIDER	vimfiles/bundle/powerline/autoload/Pl/Parser.vim	/^let s:SOFT_DIVIDER = 1$/;"	v
s:SYNTAX_COMMENT	vimfiles/bundle/coffeescript/indent/coffee.vim	/^let s:SYNTAX_COMMENT = 'coffee\\%(Comment\\|BlockComment\\|HeregexComment\\)'$/;"	v
s:SYNTAX_STRING	vimfiles/bundle/coffeescript/indent/coffee.vim	/^let s:SYNTAX_STRING = 'coffee\\%(String\\|AssignString\\|Embed\\|Regex\\|Heregex\\|'$/;"	v
s:SYNTAX_STRING_COMMENT	vimfiles/bundle/coffeescript/indent/coffee.vim	/^let s:SYNTAX_STRING_COMMENT = s:SYNTAX_STRING . '\\|' . s:SYNTAX_COMMENT$/;"	v
s:TEMP_VARIABLES_GROUP	vimfiles/bundle/fuzzyfinder/autoload/fuf.vim	/^let s:TEMP_VARIABLES_GROUP = expand('<sfile>:p')$/;"	v
s:TEMP_VARIABLES_GROUP	vimfiles/bundle/fuzzyfinder/autoload/fuf/buffertag.vim	/^let s:TEMP_VARIABLES_GROUP = expand('<sfile>:p')$/;"	v
s:Tlist_Skip_Refresh	vimfiles/bundle/taglist/plugin/taglist.vim	/^let s:Tlist_Skip_Refresh = 0$/;"	v
s:TreeDirNode	vimfiles/bundle-disabled/nerdtree/plugin/NERD_tree.vim	/^let s:TreeDirNode = copy(s:TreeFileNode)$/;"	v
s:TreeFileNode	vimfiles/bundle-disabled/nerdtree/plugin/NERD_tree.vim	/^let s:TreeFileNode = {}$/;"	v
s:VERSION_FACTOR	vimfiles/bundle/l9/autoload/l9.vim	/^let s:VERSION_FACTOR = str2float('0.01')$/;"	v
s:abstract_prototype	vimfiles/bundle/fugitive/plugin/fugitive.vim	/^let s:abstract_prototype = {}$/;"	v
s:app_prototype	vimfiles/bundle/vim-rails/autoload/rails.vim	/^let s:app_prototype = {}$/;"	v
s:app_prototype	vimfiles/bundle/vim-rails/autoload/rails.vim	/^let s:app_prototype.cache = s:cache_prototype$/;"	v
s:apps	vimfiles/bundle/vim-rails/autoload/rails.vim	/^  let s:apps = {}$/;"	v
s:attributes	vimfiles/bundle/jade/indent/jade.vim	/^let s:attributes = '\\%((.\\{-\\})\\)'$/;"	v
s:block_regex	vimfiles/bundle/vim-javascript/indent/javascript.vim	/^let s:block_regex = '\\%({\\)\\s*\\%(|\\%([*@]\\=\\h\\w*,\\=\\s*\\)\\%(,\\s*[*@]\\=\\h\\w*\\)*|\\)\\=' . s:line_term$/;"	v
s:block_regex	vimfiles/bundle/vim-ruby/indent/ruby.vim	/^let s:block_regex =$/;"	v
s:bracket_continuation_regex	vimfiles/bundle/vim-ruby/indent/ruby.vim	/^let s:bracket_continuation_regex = '\\%([({[]\\)\\s*\\%(#.*\\)\\=$'$/;"	v
s:browsefilter	vimfiles/bundle/jade/ftplugin/jade.vim	/^  let s:browsefilter = b:browsefilter$/;"	v
s:browsefilter	vimfiles/bundle/jade/ftplugin/jade.vim	/^let s:browsefilter = "All Files (*.*)\\t*.*\\n"$/;"	v
s:browsefilter	vimfiles/bundle/vim-ruby/ftplugin/eruby.vim	/^  let s:browsefilter = b:browsefilter$/;"	v
s:browsefilter	vimfiles/bundle/vim-ruby/ftplugin/eruby.vim	/^  let s:browsefilter = substitute(b:browsefilter,'\\cAll Files (\\*\\.\\*)\\t\\*\\.\\*\\n','','') . s:browsefilter$/;"	v
s:browsefilter	vimfiles/bundle/vim-ruby/ftplugin/eruby.vim	/^let s:browsefilter = "All Files (*.*)\\t*.*\\n"$/;"	v
s:bufTimes	vimfiles/bundle/fuzzyfinder/autoload/fuf/buffer.vim	/^let s:bufTimes = {}$/;"	v
s:bufferCursorPosMap	vimfiles/bundle/fuzzyfinder/autoload/fuf.vim	/^let s:bufferCursorPosMap = {}$/;"	v
s:buffer_prototype	vimfiles/bundle/fugitive/plugin/fugitive.vim	/^let s:buffer_prototype = {}$/;"	v
s:buffer_prototype	vimfiles/bundle/vim-rails/autoload/rails.vim	/^let s:buffer_prototype = {}$/;"	v
s:cache_prototype	vimfiles/bundle/vim-rails/autoload/rails.vim	/^let s:cache_prototype = {'dict': {}}$/;"	v
s:code	vimfiles/bundle/vim-ruby/ftplugin/ruby.vim	/^      let s:code = "print $:.join(%q{,})"$/;"	v
s:commands	vimfiles/bundle/fugitive/plugin/fugitive.vim	/^let s:commands = []$/;"	v
s:continuation_regex	vimfiles/bundle/vim-javascript/indent/javascript.vim	/^let s:continuation_regex = '\\%([\\\\*+\/.:]\\|\\%(<%\\)\\@<![=-]\\|\\W[|&?]\\|||\\|&&\\)' . s:line_term$/;"	v
s:continuation_regex	vimfiles/bundle/vim-ruby/indent/ruby.vim	/^let s:continuation_regex =$/;"	v
s:cpo_save	vimfiles/bundle/greplace/plugin/greplace.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	vimfiles/bundle/taglist/plugin/taglist.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	vimfiles/bundle/vim-javascript/indent/javascript.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	vimfiles/bundle/vim-rails/autoload/rails.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	vimfiles/bundle/vim-ruby/compiler/eruby.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	vimfiles/bundle/vim-ruby/compiler/rspec.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	vimfiles/bundle/vim-ruby/compiler/ruby.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	vimfiles/bundle/vim-ruby/compiler/rubyunit.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	vimfiles/bundle/vim-ruby/ftplugin/ruby.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	vimfiles/bundle/vim-ruby/indent/ruby.vim	/^let s:cpo_save = &cpo$/;"	v
s:cterm2gui_dict	vimfiles/bundle/powerline/autoload/Pl/Hi.vim	/^let s:cterm2gui_dict = {$/;"	v
s:dataMap	vimfiles/bundle/l9/autoload/l9/tempbuffer.vim	/^let s:dataMap = {}$/;"	v
s:default_modes	vimfiles/bundle/powerline/autoload/Pl/Segment.vim	/^let s:default_modes = ['n', 'N', 'v', 'i', 'r', 's']$/;"	v
s:delimiterMap	vimfiles/bundle/nerdcommenter/plugin/NERD_commenter.vim	/^    let s:delimiterMap[ft] = g:NERDCustomDelimiters[ft]$/;"	v
s:delimiterMap	vimfiles/bundle/nerdcommenter/plugin/NERD_commenter.vim	/^let s:delimiterMap = {$/;"	v
s:did_snip_helper	vimfiles/bundle/snipMate/ftplugin/html_snip_helper.vim	/^let s:did_snip_helper = 1$/;"	v
s:did_snips_mappings	vimfiles/bundle/snipMate/after/plugin/snipMate.vim	/^let s:did_snips_mappings = 1$/;"	v
s:done_bundles	vimfiles/autoload/pathogen.vim	/^let s:done_bundles = ''$/;"	v
s:efm_backtrace	vimfiles/bundle/vim-rails/autoload/rails.vim	/^let s:efm_backtrace='%D(in\\ %f),'$/;"	v
s:end_end_regex	vimfiles/bundle/vim-ruby/indent/ruby.vim	/^let s:end_end_regex = '\\%(^\\|[^.:@$]\\)\\@<=\\<end:\\@!\\>'$/;"	v
s:end_middle_regex	vimfiles/bundle/vim-ruby/indent/ruby.vim	/^let s:end_middle_regex = '\\<\\%(ensure\\|else\\|\\%(\\%(^\\|;\\)\\s*\\)\\@<=\\<rescue:\\@!\\>\\|when\\|elsif\\):\\@!\\>'$/;"	v
s:end_skip_expr	vimfiles/bundle/vim-ruby/indent/ruby.vim	/^let s:end_skip_expr = s:skip_expr .$/;"	v
s:end_start_regex	vimfiles/bundle/vim-ruby/indent/ruby.vim	/^let s:end_start_regex = '^\\s*\\zs\\<\\%(module\\|class\\|def\\|if\\|for' .$/;"	v
s:escape_chars	vimfiles/bundle-disabled/nerdtree/plugin/NERD_tree.vim	/^    let s:escape_chars =  " \\\\`\\|\\"#%&,?()\\*^<>[]"$/;"	v
s:escape_chars	vimfiles/bundle-disabled/nerdtree/plugin/NERD_tree.vim	/^    let s:escape_chars =  " `\\|\\"#%&,?()\\*^<>"$/;"	v
s:file	vimfiles/bundle/vim-rails/autoload/rails.vim	/^let s:file = expand('<sfile>:p')$/;"	v
s:file_prototype	vimfiles/bundle/vim-rails/autoload/rails.vim	/^let s:file_prototype = {}$/;"	v
s:gRepl_bufname	vimfiles/bundle/greplace/plugin/greplace.vim	/^    let s:gRepl_bufname = '[Global\\ Replace]'$/;"	v
s:gRepl_bufname	vimfiles/bundle/greplace/plugin/greplace.vim	/^    let s:gRepl_bufname = '\\[Global\\ Replace\\]'$/;"	v
s:handler	vimfiles/bundle/fuzzyfinder/autoload/fuf/bookmarkdir.vim	/^let s:handler = {}$/;"	v
s:handler	vimfiles/bundle/fuzzyfinder/autoload/fuf/bookmarkfile.vim	/^let s:handler = {}$/;"	v
s:handler	vimfiles/bundle/fuzzyfinder/autoload/fuf/buffer.vim	/^let s:handler = {}$/;"	v
s:handler	vimfiles/bundle/fuzzyfinder/autoload/fuf/buffertag.vim	/^let s:handler = {}$/;"	v
s:handler	vimfiles/bundle/fuzzyfinder/autoload/fuf/callbackfile.vim	/^let s:handler = {}$/;"	v
s:handler	vimfiles/bundle/fuzzyfinder/autoload/fuf/callbackitem.vim	/^let s:handler = {}$/;"	v
s:handler	vimfiles/bundle/fuzzyfinder/autoload/fuf/changelist.vim	/^let s:handler = {}$/;"	v
s:handler	vimfiles/bundle/fuzzyfinder/autoload/fuf/coveragefile.vim	/^let s:handler = {}$/;"	v
s:handler	vimfiles/bundle/fuzzyfinder/autoload/fuf/dir.vim	/^let s:handler = {}$/;"	v
s:handler	vimfiles/bundle/fuzzyfinder/autoload/fuf/file.vim	/^let s:handler = {}$/;"	v
s:handler	vimfiles/bundle/fuzzyfinder/autoload/fuf/givencmd.vim	/^let s:handler = {}$/;"	v
s:handler	vimfiles/bundle/fuzzyfinder/autoload/fuf/givendir.vim	/^let s:handler = {}$/;"	v
s:handler	vimfiles/bundle/fuzzyfinder/autoload/fuf/givenfile.vim	/^let s:handler = {}$/;"	v
s:handler	vimfiles/bundle/fuzzyfinder/autoload/fuf/help.vim	/^let s:handler = {}$/;"	v
s:handler	vimfiles/bundle/fuzzyfinder/autoload/fuf/jumplist.vim	/^let s:handler = {}$/;"	v
s:handler	vimfiles/bundle/fuzzyfinder/autoload/fuf/line.vim	/^let s:handler = {}$/;"	v
s:handler	vimfiles/bundle/fuzzyfinder/autoload/fuf/mrucmd.vim	/^let s:handler = {}$/;"	v
s:handler	vimfiles/bundle/fuzzyfinder/autoload/fuf/mrufile.vim	/^let s:handler = {}$/;"	v
s:handler	vimfiles/bundle/fuzzyfinder/autoload/fuf/quickfix.vim	/^let s:handler = {}$/;"	v
s:handler	vimfiles/bundle/fuzzyfinder/autoload/fuf/tag.vim	/^let s:handler = {}$/;"	v
s:handler	vimfiles/bundle/fuzzyfinder/autoload/fuf/taggedfile.vim	/^let s:handler = {}$/;"	v
s:handlerBase	vimfiles/bundle/fuzzyfinder/autoload/fuf.vim	/^let s:handlerBase = {}$/;"	v
s:keep_case_m1	vimfiles/bundle/keepcase/plugin/keepcase.vim	/^let s:keep_case_m1='^\\u\\l\\+$'$/;"	v
s:keep_case_m2	vimfiles/bundle/keepcase/plugin/keepcase.vim	/^let s:keep_case_m2='^\\u\\+$'$/;"	v
s:keep_case_m3	vimfiles/bundle/keepcase/plugin/keepcase.vim	/^let s:keep_case_m3='^\\l\\+$'$/;"	v
s:keep_case_m4	vimfiles/bundle/keepcase/plugin/keepcase.vim	/^let s:keep_case_m4='^\\u.\\+$'$/;"	v
s:keep_case_m5	vimfiles/bundle/keepcase/plugin/keepcase.vim	/^let s:keep_case_m5='^\\l.\\+$'$/;"	v
s:keep_case_r1	vimfiles/bundle/keepcase/plugin/keepcase.vim	/^let s:keep_case_r1='^\\(.\\)\\(.\\+\\)$'$/;"	v
s:keep_case_r2	vimfiles/bundle/keepcase/plugin/keepcase.vim	/^let s:keep_case_r2='^.\\+$'$/;"	v
s:keep_case_r3	vimfiles/bundle/keepcase/plugin/keepcase.vim	/^let s:keep_case_r3='^.\\+$'$/;"	v
s:keep_case_r4	vimfiles/bundle/keepcase/plugin/keepcase.vim	/^let s:keep_case_r4='^.\\+$'$/;"	v
s:keep_case_r5	vimfiles/bundle/keepcase/plugin/keepcase.vim	/^let s:keep_case_r5='^.\\+$'$/;"	v
s:keep_case_s1	vimfiles/bundle/keepcase/plugin/keepcase.vim	/^let s:keep_case_s1='\\u\\1\\L\\2'$/;"	v
s:keep_case_s2	vimfiles/bundle/keepcase/plugin/keepcase.vim	/^let s:keep_case_s2='\\U&'$/;"	v
s:keep_case_s3	vimfiles/bundle/keepcase/plugin/keepcase.vim	/^let s:keep_case_s3='\\L&'$/;"	v
s:keep_case_s4	vimfiles/bundle/keepcase/plugin/keepcase.vim	/^let s:keep_case_s4='\\u&'$/;"	v
s:keep_case_s5	vimfiles/bundle/keepcase/plugin/keepcase.vim	/^let s:keep_case_s5='\\l&'$/;"	v
s:lenSpaceStr	vimfiles/bundle/nerdcommenter/plugin/NERD_commenter.vim	/^let s:lenSpaceStr = strlen(s:spaceStr)$/;"	v
s:line_term	vimfiles/bundle/vim-javascript/indent/javascript.vim	/^let s:line_term = '\\s*\\%(\\%(\\\/\\\/\\).*\\)\\=$'$/;"	v
s:lines	vimfiles/bundle/coffeescript/syntax/eco.vim	/^  let s:lines = getline(1)."\\n".getline(2)."\\n".getline(3)."\\n".getline(4)."\\n".getline(5)."\\n".getline("$")$/;"	v
s:lines	vimfiles/bundle/vim-ruby/ftplugin/eruby.vim	/^  let s:lines = getline(1)."\\n".getline(2)."\\n".getline(3)."\\n".getline(4)."\\n".getline(5)."\\n".getline("$")$/;"	v
s:lines	vimfiles/bundle/vim-ruby/syntax/eruby.vim	/^  let s:lines = getline(1)."\\n".getline(2)."\\n".getline(3)."\\n".getline(4)."\\n".getline(5)."\\n".getline("$")$/;"	v
s:match_words	vimfiles/bundle/jade/ftplugin/jade.vim	/^  let s:match_words = b:match_words$/;"	v
s:match_words	vimfiles/bundle/jade/ftplugin/jade.vim	/^let s:match_words = ""$/;"	v
s:match_words	vimfiles/bundle/vim-ruby/ftplugin/eruby.vim	/^  let s:match_words = b:match_words . ',' . s:match_words$/;"	v
s:match_words	vimfiles/bundle/vim-ruby/ftplugin/eruby.vim	/^  let s:match_words = b:match_words$/;"	v
s:match_words	vimfiles/bundle/vim-ruby/ftplugin/eruby.vim	/^let s:match_words = ""$/;"	v
s:menu_char_prefix	vimfiles/bundle/taglist/plugin/taglist.vim	/^let s:menu_char_prefix =$/;"	v
s:modeNames	vimfiles/bundle/fuzzyfinder/autoload/fuf.vim	/^let s:modeNames = []$/;"	v
s:molokai_original	vimfiles/colors/molokai-nobold.vim	/^    let s:molokai_original = 0$/;"	v
s:molokai_original	vimfiles/colors/molokai-nobold.vim	/^    let s:molokai_original = g:molokai_original$/;"	v
s:molokai_original	vimfiles/colors/molokai.vim	/^    let s:molokai_original = 0$/;"	v
s:molokai_original	vimfiles/colors/molokai.vim	/^    let s:molokai_original = g:molokai_original$/;"	v
s:msl_regex	vimfiles/bundle/vim-javascript/indent/javascript.vim	/^let s:msl_regex = '\\%([\\\\*+\/.:([]\\|\\%(<%\\)\\@<![=-]\\|\\W[|&?]\\|||\\|&&\\)' . s:line_term$/;"	v
s:next_buffer_number	vimfiles/bundle-disabled/nerdtree/plugin/NERD_tree.vim	/^let s:next_buffer_number = 1$/;"	v
s:non_bracket_continuation_regex	vimfiles/bundle/vim-ruby/indent/ruby.vim	/^let s:non_bracket_continuation_regex = '\\%([\\\\.,:*\/%+]\\|\\<and\\|\\<or\\|\\%(<%\\)\\@<![=-]\\|\\W[|&?]\\|||\\|&&\\)\\s*\\%(#.*\\)\\=$'$/;"	v
s:old_cpo	vimfiles/bundle-disabled/nerdtree/plugin/NERD_tree.vim	/^let s:old_cpo = &cpo$/;"	v
s:oneTimeVariables	vimfiles/bundle/fuzzyfinder/autoload/fuf.vim	/^let s:oneTimeVariables = []$/;"	v
s:one_line_scope_regex	vimfiles/bundle/vim-javascript/indent/javascript.vim	/^let s:one_line_scope_regex = '\\<\\%(if\\|else\\|for\\|while\\)\\>[^{;]*' . s:line_term$/;"	v
s:origMap	vimfiles/bundle/l9/autoload/l9/tempvariables.vim	/^let s:origMap = {}$/;"	v
s:pat	vimfiles/bundle/coffeescript/compiler/coffee.vim	/^let s:pat = '^' . current_compiler$/;"	v
s:readable_prototype	vimfiles/bundle/vim-rails/autoload/rails.vim	/^let s:readable_prototype = {}$/;"	v
s:repo_prototype	vimfiles/bundle/fugitive/plugin/fugitive.vim	/^let s:repo_prototype = {}$/;"	v
s:repos	vimfiles/bundle/fugitive/plugin/fugitive.vim	/^let s:repos = {}$/;"	v
s:ruby_deindent_keywords	vimfiles/bundle/vim-ruby/indent/ruby.vim	/^let s:ruby_deindent_keywords =$/;"	v
s:ruby_indent_keywords	vimfiles/bundle/vim-ruby/indent/ruby.vim	/^let s:ruby_indent_keywords = '^\\s*\\zs\\<\\%(module\\|class\\|def\\|if\\|for' .$/;"	v
s:ruby_path	vimfiles/bundle/vim-ruby/ftplugin/ruby.vim	/^      let s:ruby_path = substitute(&g:path,',,$',',','') . ',' . s:ruby_path$/;"	v
s:ruby_path	vimfiles/bundle/vim-ruby/ftplugin/ruby.vim	/^    let s:ruby_path = substitute(join(s:ruby_paths,","), '\\%(^\\|,\\)\\.\\%(,\\|$\\)', ',,', '')$/;"	v
s:ruby_path	vimfiles/bundle/vim-ruby/ftplugin/ruby.vim	/^    let s:ruby_path = type(g:ruby_path) == type([]) ? join(g:ruby_path,',') : g:ruby_path$/;"	v
s:ruby_paths	vimfiles/bundle/vim-ruby/ftplugin/ruby.vim	/^        let s:ruby_paths = split(system(prefix."ruby -e '" . s:code . "'"),',')$/;"	v
s:ruby_paths	vimfiles/bundle/vim-ruby/ftplugin/ruby.vim	/^        let s:ruby_paths = split(system(prefix.'ruby -e "' . s:code . '"'),',')$/;"	v
s:ruby_paths	vimfiles/bundle/vim-ruby/ftplugin/ruby.vim	/^      let s:ruby_paths = split($RUBYLIB,':')$/;"	v
s:rubycomplete_debug	vimfiles/bundle/vim-ruby/autoload/rubycomplete.vim	/^let s:rubycomplete_debug = 0$/;"	v
s:rubycomplete_rails_loaded	vimfiles/bundle/vim-ruby/autoload/rubycomplete.vim	/^let s:rubycomplete_rails_loaded = 0$/;"	v
s:running_windows	vimfiles/bundle-disabled/nerdtree/plugin/NERD_tree.vim	/^let s:running_windows = has("win16") || has("win32") || has("win64")$/;"	v
s:save_cpo	vimfiles/bundle/jade/ftplugin/jade.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	vimfiles/bundle/vim-ruby/ftplugin/eruby.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_qf_list	vimfiles/bundle/greplace/plugin/greplace.vim	/^let s:save_qf_list = {}$/;"	v
s:segment_mods	vimfiles/bundle/powerline/autoload/Pl/Mod.vim	/^let s:segment_mods = []$/;"	v
s:sid	vimfiles/bundle/vim-rails/autoload/rails.vim	/^let s:sid = s:sub(maparg("<SID>xx"),'xx$','')$/;"	v
s:skip_expr	vimfiles/bundle/vim-javascript/indent/javascript.vim	/^let s:skip_expr = "synIDattr(synID(line('.'),col('.'),1),'name') =~ '".s:syng_strcom."'"$/;"	v
s:skip_expr	vimfiles/bundle/vim-ruby/indent/ruby.vim	/^let s:skip_expr =$/;"	v
s:snippets	vimfiles/bundle/snipMate/plugin/snipMate.vim	/^let s:snippets = {} | let s:multi_snips = {}$/;"	v
s:spaceStr	vimfiles/bundle/nerdcommenter/plugin/NERD_commenter.vim	/^let s:spaceStr = ' '$/;"	v
s:syng_strcom	vimfiles/bundle/vim-javascript/indent/javascript.vim	/^let s:syng_strcom = 'javaScript\\%(String\\|RegexpString\\|CommentTodo\\|LineComment\\|Comment\\|DocComment\\)'$/;"	v
s:syng_strcom	vimfiles/bundle/vim-ruby/indent/ruby.vim	/^let s:syng_strcom = '\\<ruby\\%(Regexp\\|RegexpDelimiter' .$/;"	v
s:syng_string	vimfiles/bundle/vim-javascript/indent/javascript.vim	/^let s:syng_string = 'javaScript\\%(RegexpString\\)'$/;"	v
s:syng_string	vimfiles/bundle/vim-ruby/indent/ruby.vim	/^let s:syng_string =$/;"	v
s:syng_stringdoc	vimfiles/bundle/vim-javascript/indent/javascript.vim	/^let s:syng_stringdoc = 'javaScriptDocComment\\|javaScriptComment'$/;"	v
s:syng_stringdoc	vimfiles/bundle/vim-ruby/indent/ruby.vim	/^let s:syng_stringdoc =$/;"	v
s:tag	vimfiles/bundle/jade/indent/jade.vim	/^let s:tag = '\\([%.#][[:alnum:]_-]\\+\\|'.s:attributes.'\\)*[<>]*'$/;"	v
s:temp_files	vimfiles/bundle/fugitive/plugin/fugitive.vim	/^  let s:temp_files = {}$/;"	v
s:timerData	vimfiles/bundle/l9/plugin/l9.vim	/^  let s:timerData = []$/;"	v
s:timerTagMaxLen	vimfiles/bundle/l9/plugin/l9.vim	/^  let s:timerTagMaxLen = 0$/;"	v
s:tlist_app_name	vimfiles/bundle/taglist/plugin/taglist.vim	/^let s:tlist_app_name = "none"$/;"	v
s:tlist_brief_help	vimfiles/bundle/taglist/plugin/taglist.vim	/^let s:tlist_brief_help = 1$/;"	v
s:tlist_cur_file_idx	vimfiles/bundle/taglist/plugin/taglist.vim	/^let s:tlist_cur_file_idx = -1$/;"	v
s:tlist_debug	vimfiles/bundle/taglist/plugin/taglist.vim	/^let s:tlist_debug = 0$/;"	v
s:tlist_debug_file	vimfiles/bundle/taglist/plugin/taglist.vim	/^let s:tlist_debug_file = ''$/;"	v
s:tlist_def_asm_settings	vimfiles/bundle/taglist/plugin/taglist.vim	/^let s:tlist_def_asm_settings = 'asm;d:define;l:label;m:macro;t:type'$/;"	v
s:tlist_def_aspperl_settings	vimfiles/bundle/taglist/plugin/taglist.vim	/^let s:tlist_def_aspperl_settings = 'asp;f:function;s:sub;v:variable'$/;"	v
s:tlist_def_aspvbs_settings	vimfiles/bundle/taglist/plugin/taglist.vim	/^let s:tlist_def_aspvbs_settings = 'asp;f:function;s:sub;v:variable'$/;"	v
s:tlist_def_awk_settings	vimfiles/bundle/taglist/plugin/taglist.vim	/^let s:tlist_def_awk_settings = 'awk;f:function'$/;"	v
s:tlist_def_beta_settings	vimfiles/bundle/taglist/plugin/taglist.vim	/^let s:tlist_def_beta_settings = 'beta;f:fragment;s:slot;v:pattern'$/;"	v
s:tlist_def_c_settings	vimfiles/bundle/taglist/plugin/taglist.vim	/^let s:tlist_def_c_settings = 'c;d:macro;g:enum;s:struct;u:union;t:typedef;' .$/;"	v
s:tlist_def_cobol_settings	vimfiles/bundle/taglist/plugin/taglist.vim	/^let s:tlist_def_cobol_settings = 'cobol;d:data;f:file;g:group;p:paragraph;' .$/;"	v
s:tlist_def_cpp_settings	vimfiles/bundle/taglist/plugin/taglist.vim	/^let s:tlist_def_cpp_settings = 'c++;n:namespace;v:variable;d:macro;t:typedef;' .$/;"	v
s:tlist_def_cs_settings	vimfiles/bundle/taglist/plugin/taglist.vim	/^let s:tlist_def_cs_settings = 'c#;d:macro;t:typedef;n:namespace;c:class;' .$/;"	v
s:tlist_def_csh_settings	vimfiles/bundle/taglist/plugin/taglist.vim	/^let s:tlist_def_csh_settings = 'sh;f:function'$/;"	v
s:tlist_def_eiffel_settings	vimfiles/bundle/taglist/plugin/taglist.vim	/^let s:tlist_def_eiffel_settings = 'eiffel;c:class;f:feature'$/;"	v
s:tlist_def_erlang_settings	vimfiles/bundle/taglist/plugin/taglist.vim	/^let s:tlist_def_erlang_settings = 'erlang;d:macro;r:record;m:module;f:function'$/;"	v
s:tlist_def_expect_settings	vimfiles/bundle/taglist/plugin/taglist.vim	/^let s:tlist_def_expect_settings = 'tcl;c:class;f:method;p:procedure'$/;"	v
s:tlist_def_fortran_settings	vimfiles/bundle/taglist/plugin/taglist.vim	/^let s:tlist_def_fortran_settings = 'fortran;p:program;b:block data;' .$/;"	v
s:tlist_def_html_settings	vimfiles/bundle/taglist/plugin/taglist.vim	/^let s:tlist_def_html_settings = 'html;a:anchor;f:javascript function'$/;"	v
s:tlist_def_java_settings	vimfiles/bundle/taglist/plugin/taglist.vim	/^let s:tlist_def_java_settings = 'java;p:package;c:class;i:interface;' .$/;"	v
s:tlist_def_javascript_settings	vimfiles/bundle/taglist/plugin/taglist.vim	/^let s:tlist_def_javascript_settings = 'javascript;f:function'$/;"	v
s:tlist_def_lisp_settings	vimfiles/bundle/taglist/plugin/taglist.vim	/^let s:tlist_def_lisp_settings = 'lisp;f:function'$/;"	v
s:tlist_def_lua_settings	vimfiles/bundle/taglist/plugin/taglist.vim	/^let s:tlist_def_lua_settings = 'lua;f:function'$/;"	v
s:tlist_def_make_settings	vimfiles/bundle/taglist/plugin/taglist.vim	/^let s:tlist_def_make_settings = 'make;m:macro'$/;"	v
s:tlist_def_pascal_settings	vimfiles/bundle/taglist/plugin/taglist.vim	/^let s:tlist_def_pascal_settings = 'pascal;f:function;p:procedure'$/;"	v
s:tlist_def_perl_settings	vimfiles/bundle/taglist/plugin/taglist.vim	/^let s:tlist_def_perl_settings = 'perl;c:constant;l:label;p:package;s:subroutine'$/;"	v
s:tlist_def_php_settings	vimfiles/bundle/taglist/plugin/taglist.vim	/^let s:tlist_def_php_settings = 'php;c:class;d:constant;v:variable;f:function'$/;"	v
s:tlist_def_python_settings	vimfiles/bundle/taglist/plugin/taglist.vim	/^let s:tlist_def_python_settings = 'python;c:class;m:member;f:function'$/;"	v
s:tlist_def_rexx_settings	vimfiles/bundle/taglist/plugin/taglist.vim	/^let s:tlist_def_rexx_settings = 'rexx;s:subroutine'$/;"	v
s:tlist_def_ruby_settings	vimfiles/bundle/taglist/plugin/taglist.vim	/^let s:tlist_def_ruby_settings = 'ruby;c:class;f:method;F:function;' .$/;"	v
s:tlist_def_scheme_settings	vimfiles/bundle/taglist/plugin/taglist.vim	/^let s:tlist_def_scheme_settings = 'scheme;s:set;f:function'$/;"	v
s:tlist_def_sh_settings	vimfiles/bundle/taglist/plugin/taglist.vim	/^let s:tlist_def_sh_settings = 'sh;f:function'$/;"	v
s:tlist_def_slang_settings	vimfiles/bundle/taglist/plugin/taglist.vim	/^let s:tlist_def_slang_settings = 'slang;n:namespace;f:function'$/;"	v
s:tlist_def_sml_settings	vimfiles/bundle/taglist/plugin/taglist.vim	/^let s:tlist_def_sml_settings = 'sml;e:exception;c:functor;s:signature;' .$/;"	v
s:tlist_def_sql_settings	vimfiles/bundle/taglist/plugin/taglist.vim	/^let s:tlist_def_sql_settings = 'sql;c:cursor;F:field;P:package;r:record;' .$/;"	v
s:tlist_def_tcl_settings	vimfiles/bundle/taglist/plugin/taglist.vim	/^let s:tlist_def_tcl_settings = 'tcl;c:class;f:method;m:method;p:procedure'$/;"	v
s:tlist_def_vera_settings	vimfiles/bundle/taglist/plugin/taglist.vim	/^let s:tlist_def_vera_settings = 'vera;c:class;d:macro;e:enumerator;' .$/;"	v
s:tlist_def_verilog_settings	vimfiles/bundle/taglist/plugin/taglist.vim	/^let s:tlist_def_verilog_settings = 'verilog;m:module;c:constant;P:parameter;' .$/;"	v
s:tlist_def_vim_settings	vimfiles/bundle/taglist/plugin/taglist.vim	/^let s:tlist_def_vim_settings = 'vim;a:autocmds;v:variable;f:function'$/;"	v
s:tlist_def_yacc_settings	vimfiles/bundle/taglist/plugin/taglist.vim	/^let s:tlist_def_yacc_settings = 'yacc;l:label'$/;"	v
s:tlist_def_zsh_settings	vimfiles/bundle/taglist/plugin/taglist.vim	/^let s:tlist_def_zsh_settings = 'sh;f:function'$/;"	v
s:tlist_file_count	vimfiles/bundle/taglist/plugin/taglist.vim	/^let s:tlist_file_count = 0$/;"	v
s:tlist_file_lnum_idx_cache	vimfiles/bundle/taglist/plugin/taglist.vim	/^let s:tlist_file_lnum_idx_cache = -1$/;"	v
s:tlist_file_name_idx_cache	vimfiles/bundle/taglist/plugin/taglist.vim	/^let s:tlist_file_name_idx_cache = -1$/;"	v
s:tlist_file_names	vimfiles/bundle/taglist/plugin/taglist.vim	/^let s:tlist_file_names=''$/;"	v
s:tlist_ftype_count	vimfiles/bundle/taglist/plugin/taglist.vim	/^let s:tlist_ftype_count = 0$/;"	v
s:tlist_menu_empty	vimfiles/bundle/taglist/plugin/taglist.vim	/^let s:tlist_menu_empty = 1$/;"	v
s:tlist_msg	vimfiles/bundle/taglist/plugin/taglist.vim	/^    let s:tlist_msg = ''$/;"	v
s:tlist_removed_flist	vimfiles/bundle/taglist/plugin/taglist.vim	/^let s:tlist_removed_flist = ""$/;"	v
s:tlist_sid	vimfiles/bundle/taglist/plugin/taglist.vim	/^    let s:tlist_sid = substitute(maparg('<SID>xx'), '<SNR>\\(\\d\\+_\\)xx$',$/;"	v
s:tlist_win_maximized	vimfiles/bundle/taglist/plugin/taglist.vim	/^let s:tlist_win_maximized = 0$/;"	v
s:tlist_winsize_chgd	vimfiles/bundle/taglist/plugin/taglist.vim	/^let s:tlist_winsize_chgd = -1$/;"	v
s:tree_markup_reg	vimfiles/bundle-disabled/nerdtree/plugin/NERD_tree.vim	/^let s:tree_markup_reg = '^[ `|]*[\\-+~▾▸ ]\\+'$/;"	v
s:tree_up_dir_line	vimfiles/bundle-disabled/nerdtree/plugin/NERD_tree.vim	/^let s:tree_up_dir_line = '.. (up a dir)'$/;"	v
s:tree_wid	vimfiles/bundle-disabled/nerdtree/plugin/NERD_tree.vim	/^let s:tree_wid = 2$/;"	v
s:undo_ftplugin	vimfiles/bundle/jade/ftplugin/jade.vim	/^  let s:undo_ftplugin = b:undo_ftplugin$/;"	v
s:undo_ftplugin	vimfiles/bundle/jade/ftplugin/jade.vim	/^let s:undo_ftplugin = ""$/;"	v
s:undo_ftplugin	vimfiles/bundle/vim-ruby/ftplugin/eruby.vim	/^  let s:undo_ftplugin = b:undo_ftplugin . " | " . s:undo_ftplugin$/;"	v
s:undo_ftplugin	vimfiles/bundle/vim-ruby/ftplugin/eruby.vim	/^  let s:undo_ftplugin = b:undo_ftplugin$/;"	v
s:undo_ftplugin	vimfiles/bundle/vim-ruby/ftplugin/eruby.vim	/^let s:undo_ftplugin = ""$/;"	v
s:view_types	vimfiles/bundle/vim-rails/autoload/rails.vim	/^let s:view_types = split('rhtml,erb,rxml,builder,rjs,mab,liquid,haml,dryml,mn,slim',',')$/;"	v
s:yr_buffer_id	vimfiles/bundle/yankring/plugin/yankring.vim	/^let s:yr_buffer_id         = -1$/;"	v
s:yr_buffer_last	vimfiles/bundle/yankring/plugin/yankring.vim	/^let s:yr_buffer_last       = -1$/;"	v
s:yr_buffer_last_winnr	vimfiles/bundle/yankring/plugin/yankring.vim	/^let s:yr_buffer_last_winnr = -1$/;"	v
s:yr_buffer_name	vimfiles/bundle/yankring/plugin/yankring.vim	/^let s:yr_buffer_name       = '[YankRing]'$/;"	v
s:yr_has_voperator	vimfiles/bundle/yankring/plugin/yankring.vim	/^    let s:yr_has_voperator = 1$/;"	v
s:yr_has_voperator	vimfiles/bundle/yankring/plugin/yankring.vim	/^let s:yr_has_voperator     = 0$/;"	v
s:yr_history_file_v1	vimfiles/bundle/yankring/plugin/yankring.vim	/^let s:yr_history_file_v1   = $/;"	v
s:yr_history_file_v2	vimfiles/bundle/yankring/plugin/yankring.vim	/^let s:yr_history_file_v2   = $/;"	v
s:yr_history_last_upd	vimfiles/bundle/yankring/plugin/yankring.vim	/^let s:yr_history_last_upd  = 0$/;"	v
s:yr_history_v1_nl	vimfiles/bundle/yankring/plugin/yankring.vim	/^let s:yr_history_v1_nl     = '@@@'$/;"	v
s:yr_history_v1_nl_pat	vimfiles/bundle/yankring/plugin/yankring.vim	/^let s:yr_history_v1_nl_pat = '\\%(\\\\\\)\\@<!@@@'$/;"	v
s:yr_history_v2_nl	vimfiles/bundle/yankring/plugin/yankring.vim	/^let s:yr_history_v2_nl     = "\\2" " Use double quotes for a special character$/;"	v
s:yr_history_v2_nl_pat	vimfiles/bundle/yankring/plugin/yankring.vim	/^let s:yr_history_v2_nl_pat = "\\2"$/;"	v
s:yr_history_version	vimfiles/bundle/yankring/plugin/yankring.vim	/^let s:yr_history_version   = 'v2'$/;"	v
s:yr_maps_created	vimfiles/bundle/yankring/plugin/yankring.vim	/^let s:yr_maps_created      = 0$/;"	v
s:yr_maps_created_zap	vimfiles/bundle/yankring/plugin/yankring.vim	/^let s:yr_maps_created_zap  = 0$/;"	v
s:yr_remove_omap_dot	vimfiles/bundle/yankring/plugin/yankring.vim	/^let s:yr_remove_omap_dot   = 0$/;"	v
s:yr_search	vimfiles/bundle/yankring/plugin/yankring.vim	/^let s:yr_search            = ''$/;"	v
s:yr_winsize_chgd	vimfiles/bundle/yankring/plugin/yankring.vim	/^let s:yr_winsize_chgd      = 0$/;"	v
sanitize_path_string	vimfiles/bundle-disabled/command-t/ruby/command-t/controller.rb	/^    def sanitize_path_string str$/;"	f	class:CommandT.Controller
save	vimfiles/bundle-disabled/command-t/ruby/command-t/settings.rb	/^    def save$/;"	f	class:CommandT.Settings
saveScreenState	vimfiles/bundle-disabled/nerdtree/plugin/NERD_tree.vim	/^function! s:saveScreenState()$/;"	f
sbindir	vimfiles/bundle-disabled/command-t/ruby/command-t/Makefile	/^sbindir = $(exec_prefix)\/sbin$/;"	m
scale_matrix	vimfiles/bundle/powerline/fontpatcher/fontpatcher	/^			scale_matrix = psMat.scale(font_dim['width'] \/ sym_dim['width'], 1)$/;"	v
scale_ratio	vimfiles/bundle/powerline/fontpatcher/fontpatcher	/^			scale_ratio = font_dim['height'] \/ sym_dim['height']$/;"	v
scale_ratio	vimfiles/bundle/powerline/fontpatcher/fontpatcher	/^			scale_ratio = font_dim['width'] \/ sym_dim['width']$/;"	v
scanlineforuris	vimfiles/bundle/vim-rails/autoload/rails.vim	/^function! s:scanlineforuris(line)$/;"	f
scoreBoundaryMatching	vimfiles/bundle/fuzzyfinder/autoload/fuf.vim	/^function s:scoreBoundaryMatching(wordForBoundary, pattern, exprBoundary)$/;"	f
scoreSequentialMatching	vimfiles/bundle/fuzzyfinder/autoload/fuf.vim	/^function s:scoreSequentialMatching(word, pattern)$/;"	f
scrub	vimfiles/bundle/vim-rails/autoload/rails.vim	/^function! s:scrub(collection,item)$/;"	f
searchsyn	vimfiles/bundle/vim-ruby/ftplugin/ruby.vim	/^function! s:searchsyn(pattern,syn,flags,mode)$/;"	f
select	vimfiles/bundle-disabled/command-t/ruby/command-t/vim/window.rb	/^      def self.select window$/;"	F	class:CommandT.VIM.Window
select_next	vimfiles/bundle-disabled/command-t/ruby/command-t/controller.rb	/^    def select_next$/;"	f	class:CommandT.Controller
select_next	vimfiles/bundle-disabled/command-t/ruby/command-t/match_window.rb	/^    def select_next$/;"	f	class:CommandT.MatchWindow
select_prev	vimfiles/bundle-disabled/command-t/ruby/command-t/controller.rb	/^    def select_prev$/;"	f	class:CommandT.Controller
select_prev	vimfiles/bundle-disabled/command-t/ruby/command-t/match_window.rb	/^    def select_prev$/;"	f	class:CommandT.MatchWindow
selection	vimfiles/bundle-disabled/command-t/ruby/command-t/match_window.rb	/^    def selection$/;"	f	class:CommandT.MatchWindow
selectiveexpand	vimfiles/bundle/vim-rails/autoload/rails.vim	/^function! s:selectiveexpand(pat,good,default,...)$/;"	f
setAbbrWithFileAbbrData	vimfiles/bundle/fuzzyfinder/autoload/fuf.vim	/^function s:setAbbrWithFileAbbrData(item, snippedHeads)$/;"	f
setRanks	vimfiles/bundle/fuzzyfinder/autoload/fuf.vim	/^function s:setRanks(item, pattern, exprBoundary, stats)$/;"	f
set_bool	vimfiles/bundle-disabled/command-t/ruby/command-t/settings.rb	/^    def set_bool setting, value$/;"	f	class:CommandT.Settings
set_number	vimfiles/bundle-disabled/command-t/ruby/command-t/settings.rb	/^    def set_number setting, value$/;"	f	class:CommandT.Settings
set_status	vimfiles/bundle-disabled/command-t/ruby/command-t/prompt.rb	/^    def set_status *args$/;"	f	class:CommandT.Prompt
set_up_file_finder	vimfiles/bundle-disabled/command-t/ruby/command-t/controller.rb	/^    def set_up_file_finder$/;"	f	class:CommandT.Controller
set_up_max_height	vimfiles/bundle-disabled/command-t/ruby/command-t/controller.rb	/^    def set_up_max_height$/;"	f	class:CommandT.Controller
setopt	vimfiles/bundle/vim-rails/autoload/rails.vim	/^function! s:setopt(opt,val)$/;"	f
setupStatusline	vimfiles/bundle-disabled/nerdtree/plugin/NERD_tree.vim	/^function! s:setupStatusline()$/;"	f
setupSyntaxHighlighting	vimfiles/bundle-disabled/nerdtree/plugin/NERD_tree.vim	/^function! s:setupSyntaxHighlighting()$/;"	f
sharedstatedir	vimfiles/bundle-disabled/command-t/ruby/command-t/Makefile	/^sharedstatedir = $(prefix)\/com$/;"	m
shellesc	vimfiles/bundle/fugitive/plugin/fugitive.vim	/^function! s:shellesc(arg) abort$/;"	f
shellslash	vimfiles/bundle/fugitive/plugin/fugitive.vim	/^function! s:shellslash(path)$/;"	f
show	vimfiles/bundle-disabled/command-t/ruby/command-t/controller.rb	/^    def show$/;"	f	class:CommandT.Controller
showMenu	vimfiles/bundle-disabled/nerdtree/plugin/NERD_tree.vim	/^function! s:showMenu()$/;"	f
show_buffer_finder	vimfiles/bundle-disabled/command-t/ruby/command-t/controller.rb	/^    def show_buffer_finder$/;"	f	class:CommandT.Controller
show_cursor	vimfiles/bundle-disabled/command-t/ruby/command-t/match_window.rb	/^    def show_cursor$/;"	f	class:CommandT.MatchWindow
show_file_finder	vimfiles/bundle-disabled/command-t/ruby/command-t/controller.rb	/^    def show_file_finder$/;"	f	class:CommandT.Controller
show_file_finder	vimfiles/bundle-disabled/command-t/ruby/command-t/stub.rb	/^    def show_file_finder$/;"	f	class:CommandT.Stub
showversion	vimfiles/bundle/vim-ruby/etc/release/cvsrelease	/^function showversion() {$/;"	f
sitearch	vimfiles/bundle-disabled/command-t/ruby/command-t/Makefile	/^sitearch = i386-msvcrt$/;"	m
sitearchdir	vimfiles/bundle-disabled/command-t/ruby/command-t/Makefile	/^sitearchdir = $(sitelibdir)\/$(sitearch)$/;"	m
sitedir	vimfiles/bundle-disabled/command-t/ruby/command-t/Makefile	/^sitedir = $(libdir)\/ruby\/site_ruby$/;"	m
sitelibdir	vimfiles/bundle-disabled/command-t/ruby/command-t/Makefile	/^sitelibdir = $(sitedir)\/$(ruby_version)$/;"	m
sname	vimfiles/bundle/vim-rails/autoload/rails.vim	/^function! s:sname()$/;"	f
snipMate#expandSnip	vimfiles/bundle/snipMate/autoload/snipMate.vim	/^fun snipMate#expandSnip(snip, col)$/;"	f
snipMate#jumpTabStop	vimfiles/bundle/snipMate/autoload/snipMate.vim	/^fun snipMate#jumpTabStop(backwards)$/;"	f
snippets_dir	vimfiles/bundle/snipMate/plugin/snipMate.vim	/^	let snippets_dir = substitute(globpath(&rtp, 'snippets\/'), "\\n", ',', 'g')$/;"	v
sorted_matches_for	vimfiles/bundle-disabled/command-t/ruby/command-t/finder.rb	/^    def sorted_matches_for str, options = {}$/;"	f	class:CommandT.Finder
specEdit	vimfiles/bundle/vim-rails/autoload/rails.vim	/^function! s:specEdit(cmd,...)$/;"	f
specList	vimfiles/bundle/vim-rails/autoload/rails.vim	/^function! s:specList(A,L,P)$/;"	f
srcdir	vimfiles/bundle-disabled/command-t/ruby/command-t/Makefile	/^srcdir = .$/;"	m
startswith	vimfiles/bundle/vim-rails/autoload/rails.vim	/^function! s:startswith(string,prefix)$/;"	f
str_len	vimfiles/bundle-disabled/command-t/ruby/command-t/match.c	/^    long    str_len;                \/\/ length of same$/;"	m	struct:__anon1	file:	access:public
str_p	vimfiles/bundle-disabled/command-t/ruby/command-t/match.c	/^    char    *str_p;                 \/\/ pointer to string to be searched$/;"	m	struct:__anon1	file:	access:public
stripMarkupFromLine	vimfiles/bundle-disabled/nerdtree/plugin/NERD_tree.vim	/^function! s:stripMarkupFromLine(line, removeLeadingSpaces)$/;"	f
stylesheetEdit	vimfiles/bundle/vim-rails/autoload/rails.vim	/^function! s:stylesheetEdit(cmd,...)$/;"	f
stylesheetList	vimfiles/bundle/vim-rails/autoload/rails.vim	/^function! s:stylesheetList(A,L,P)$/;"	f
sub	vimfiles/bundle/fugitive/plugin/fugitive.vim	/^function! s:sub(str,pat,rep) abort$/;"	f
sub	vimfiles/bundle/vim-rails/autoload/rails.vim	/^function! s:sub(str,pat,rep)$/;"	f
sub	vimfiles/bundle/vim-rails/plugin/rails.vim	/^function! s:sub(str,pat,rep)$/;"	f
subtract	vimfiles/bin/win32/jsl/jsl-test.js	/^function subtract(x,y) {$/;"	f
sym_attr	vimfiles/bundle/powerline/fontpatcher/fontpatcher	/^		sym_attr = SYM_ATTR[sym_glyph.unicode]$/;"	v
sym_dim	vimfiles/bundle/powerline/fontpatcher/fontpatcher	/^			sym_dim = get_dim(font[sym_glyph.unicode])$/;"	v
sym_dim	vimfiles/bundle/powerline/fontpatcher/fontpatcher	/^		sym_dim = get_dim(font[sym_glyph.unicode])$/;"	v
sym_dim	vimfiles/bundle/powerline/fontpatcher/fontpatcher	/^		sym_dim = get_dim(sym_glyph)$/;"	v
sym_ycenter	vimfiles/bundle/powerline/fontpatcher/fontpatcher	/^		sym_ycenter  = sym_dim['height'] \/ 2$/;"	v
symbols	vimfiles/bundle/powerline/fontpatcher/fontpatcher	/^	symbols = fontforge.open(args.symbol_font)$/;"	v
synname	vimfiles/bundle/vim-ruby/ftplugin/ruby.vim	/^function! s:synname()$/;"	f
sysconfdir	vimfiles/bundle-disabled/command-t/ruby/command-t/Makefile	/^sysconfdir = $(prefix)\/etc$/;"	m
tabpagevar	vimfiles/bundle-disabled/nerdtree/plugin/NERD_tree.vim	/^function! s:tabpagevar(tabnr, var)$/;"	f
target_prefix	vimfiles/bundle-disabled/command-t/ruby/command-t/Makefile	/^target_prefix = $/;"	m
taskEdit	vimfiles/bundle/vim-rails/autoload/rails.vim	/^function! s:taskEdit(cmd,...)$/;"	f
taskList	vimfiles/bundle/vim-rails/autoload/rails.vim	/^function! s:taskList(A,L,P)$/;"	f
throw	vimfiles/bundle/fugitive/plugin/fugitive.vim	/^function! s:throw(string) abort$/;"	f
tidyup	vimfiles/bundle/vim-ruby/etc/release/cvsrelease	/^function tidyup() {$/;"	f
timerBegin	vimfiles/bundle/l9/plugin/l9.vim	/^  function s:timerBegin(tag)$/;"	f
timerDump	vimfiles/bundle/l9/plugin/l9.vim	/^  function s:timerDump()$/;"	f
timerStop	vimfiles/bundle/l9/plugin/l9.vim	/^  function s:timerStop()$/;"	f
toLowerForIgnoringCase	vimfiles/bundle/fuzzyfinder/autoload/fuf.vim	/^function s:toLowerForIgnoringCase(str)$/;"	f
toggle	vimfiles/bundle-disabled/nerdtree/plugin/NERD_tree.vim	/^function! s:toggle(dir)$/;"	f
toggleIgnoreFilter	vimfiles/bundle-disabled/nerdtree/plugin/NERD_tree.vim	/^function! s:toggleIgnoreFilter()$/;"	f
toggleShowBookmarks	vimfiles/bundle-disabled/nerdtree/plugin/NERD_tree.vim	/^function! s:toggleShowBookmarks()$/;"	f
toggleShowFiles	vimfiles/bundle-disabled/nerdtree/plugin/NERD_tree.vim	/^function! s:toggleShowFiles()$/;"	f
toggleShowHidden	vimfiles/bundle-disabled/nerdtree/plugin/NERD_tree.vim	/^function! s:toggleShowHidden()$/;"	f
toggleZoom	vimfiles/bundle-disabled/nerdtree/plugin/NERD_tree.vim	/^function! s:toggleZoom()$/;"	f
toggle_focus	vimfiles/bundle-disabled/command-t/ruby/command-t/controller.rb	/^    def toggle_focus$/;"	f	class:CommandT.Controller
topdir	vimfiles/bundle-disabled/command-t/ruby/command-t/Makefile	/^topdir = \/C\/Ruby187\/lib\/ruby\/1.8\/i386-mingw32$/;"	m
treeExistsForBuf	vimfiles/bundle-disabled/nerdtree/plugin/NERD_tree.vim	/^function! s:treeExistsForBuf()$/;"	f
treeExistsForTab	vimfiles/bundle-disabled/nerdtree/plugin/NERD_tree.vim	/^function! s:treeExistsForTab()$/;"	f
truncated_match	vimfiles/bundle-disabled/command-t/ruby/command-t/match_window.rb	/^    def truncated_match str$/;"	f	class:CommandT.MatchWindow
try	vimfiles/bundle/vim-rails/autoload/rails.vim	/^function! s:try(cmd) abort$/;"	f
unfocus	vimfiles/bundle-disabled/command-t/ruby/command-t/match_window.rb	/^    def unfocus$/;"	f	class:CommandT.MatchWindow
unfocus	vimfiles/bundle-disabled/command-t/ruby/command-t/prompt.rb	/^    def unfocus$/;"	f	class:CommandT.Prompt
uniq	vimfiles/bundle/vim-rails/autoload/rails.vim	/^function! s:uniq(list)$/;"	f
unique	vimfiles/bundle-disabled/nerdtree/plugin/NERD_tree.vim	/^function! s:unique(list)$/;"	f
unittestEdit	vimfiles/bundle/vim-rails/autoload/rails.vim	/^function! s:unittestEdit(cmd,...)$/;"	f
unittestList	vimfiles/bundle/vim-rails/autoload/rails.vim	/^function! s:unittestList(A,L,P)$/;"	f
unload	vimfiles/bundle-disabled/command-t/ruby/command-t/controller.rb	/^    def unload$/;"	f	class:CommandT.Controller
unload	vimfiles/bundle-disabled/command-t/ruby/command-t/match_window.rb	/^    def unload$/;"	f	class:CommandT.MatchWindow
unlock	vimfiles/bundle-disabled/command-t/ruby/command-t/match_window.rb	/^    def unlock$/;"	f	class:CommandT.MatchWindow
upDir	vimfiles/bundle-disabled/nerdtree/plugin/NERD_tree.vim	/^function! s:upDir(keepState)$/;"	f
updateBufTimes	vimfiles/bundle/fuzzyfinder/autoload/fuf/buffer.vim	/^function s:updateBufTimes()$/;"	f
updateData	vimfiles/bundle/fuzzyfinder/autoload/fuf/mrufile.vim	/^function s:updateData()$/;"	f
updateInfo	vimfiles/bundle/fuzzyfinder/autoload/fuf/mrucmd.vim	/^function s:updateInfo(cmd)$/;"	f
usage	vimfiles/bundle/vim-ruby/etc/release/cvsrelease	/^function usage() {$/;"	f
usage	vimfiles/bundle/vim-ruby/etc/release/release.sh	/^usage() {$/;"	f
vendorarchdir	vimfiles/bundle-disabled/command-t/ruby/command-t/Makefile	/^vendorarchdir = $(vendorlibdir)\/$(sitearch)$/;"	m
vendordir	vimfiles/bundle-disabled/command-t/ruby/command-t/Makefile	/^vendordir = $(libdir)\/ruby\/vendor_ruby$/;"	m
vendorlibdir	vimfiles/bundle-disabled/command-t/ruby/command-t/Makefile	/^vendorlibdir = $(vendordir)\/$(ruby_version)$/;"	m
viewEdit	vimfiles/bundle/vim-rails/autoload/rails.vim	/^function! s:viewEdit(cmd,...)$/;"	f
viewList	vimfiles/bundle/vim-rails/autoload/rails.vim	/^function! s:viewList(A,L,P)$/;"	f
viewspattern	vimfiles/bundle/vim-rails/autoload/rails.vim	/^function! s:viewspattern()$/;"	f
vt100?	vimfiles/bundle-disabled/command-t/ruby/command-t/controller.rb	/^    def vt100?$/;"	f	class:CommandT.Controller.ensure_appropriate_window_selection
warn	vimfiles/bundle-disabled/command-t/ruby/command-t/stub.rb	/^    def warn *msg$/;"	f	class:CommandT.Stub
warn	vimfiles/bundle/fugitive/plugin/fugitive.vim	/^function! s:warn(str)$/;"	f
warn	vimfiles/bundle/vim-rails/autoload/rails.vim	/^function! s:warn(str)$/;"	f
warn_msg	vimfiles/bundle/greplace/plugin/greplace.vim	/^function! s:warn_msg(msg)$/;"	f
wrap_a	vimfiles/bundle/vim-ruby/ftplugin/ruby.vim	/^function! s:wrap_a(back,forward)$/;"	f
wrap_i	vimfiles/bundle/vim-ruby/ftplugin/ruby.vim	/^function! s:wrap_i(back,forward)$/;"	f
xterm?	vimfiles/bundle-disabled/command-t/ruby/command-t/controller.rb	/^    def xterm?$/;"	f	class:CommandT.Controller.ensure_appropriate_window_selection
